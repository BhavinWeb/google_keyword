"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConceptGroup = exports.KeywordConcept = exports.KeywordAnnotations = exports.KeywordPlanDeviceSearches = exports.KeywordPlanAggregateMetricResults = exports.KeywordPlanAggregateMetrics = exports.MonthlySearchVolume = exports.HistoricalMetricsOptions = exports.KeywordPlanHistoricalMetrics = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const keyword_plan_concept_group_type_1 = require("../enums/keyword_plan_concept_group_type");
const device_1 = require("../enums/device");
const keyword_plan_aggregate_metric_type_1 = require("../enums/keyword_plan_aggregate_metric_type");
const month_of_year_1 = require("../enums/month_of_year");
const dates_1 = require("./dates");
const keyword_plan_competition_level_1 = require("../enums/keyword_plan_competition_level");
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanHistoricalMetrics$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics", [
            { no: 7, name: "avg_monthly_searches", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "monthly_search_volumes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.MonthlySearchVolume },
            { no: 2, name: "competition", kind: "enum", T: () => ["google.ads.googleads.v11.enums.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel", keyword_plan_competition_level_1.KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel] },
            { no: 8, name: "competition_index", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "low_top_of_page_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "high_top_of_page_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "average_cpc_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { monthlySearchVolumes: [], competition: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 avg_monthly_searches */ 7:
                    message.avgMonthlySearches = reader.int64().toBigInt();
                    break;
                case /* repeated google.ads.googleads.v11.common.MonthlySearchVolume monthly_search_volumes */ 6:
                    message.monthlySearchVolumes.push(exports.MonthlySearchVolume.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel competition */ 2:
                    message.competition = reader.int32();
                    break;
                case /* optional int64 competition_index */ 8:
                    message.competitionIndex = reader.int64().toBigInt();
                    break;
                case /* optional int64 low_top_of_page_bid_micros */ 9:
                    message.lowTopOfPageBidMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 high_top_of_page_bid_micros */ 10:
                    message.highTopOfPageBidMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 average_cpc_micros */ 11:
                    message.averageCpcMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 avg_monthly_searches = 7; */
        if (message.avgMonthlySearches !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).int64(message.avgMonthlySearches);
        /* repeated google.ads.googleads.v11.common.MonthlySearchVolume monthly_search_volumes = 6; */
        for (let i = 0; i < message.monthlySearchVolumes.length; i++)
            exports.MonthlySearchVolume.internalBinaryWrite(message.monthlySearchVolumes[i], writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel competition = 2; */
        if (message.competition !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.competition);
        /* optional int64 competition_index = 8; */
        if (message.competitionIndex !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.competitionIndex);
        /* optional int64 low_top_of_page_bid_micros = 9; */
        if (message.lowTopOfPageBidMicros !== undefined)
            writer.tag(9, runtime_1.WireType.Varint).int64(message.lowTopOfPageBidMicros);
        /* optional int64 high_top_of_page_bid_micros = 10; */
        if (message.highTopOfPageBidMicros !== undefined)
            writer.tag(10, runtime_1.WireType.Varint).int64(message.highTopOfPageBidMicros);
        /* optional int64 average_cpc_micros = 11; */
        if (message.averageCpcMicros !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).int64(message.averageCpcMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics
 */
exports.KeywordPlanHistoricalMetrics = new KeywordPlanHistoricalMetrics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HistoricalMetricsOptions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.HistoricalMetricsOptions", [
            { no: 1, name: "year_month_range", kind: "message", T: () => dates_1.YearMonthRange },
            { no: 2, name: "include_average_cpc", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { includeAverageCpc: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional google.ads.googleads.v11.common.YearMonthRange year_month_range */ 1:
                    message.yearMonthRange = dates_1.YearMonthRange.internalBinaryRead(reader, reader.uint32(), options, message.yearMonthRange);
                    break;
                case /* bool include_average_cpc */ 2:
                    message.includeAverageCpc = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional google.ads.googleads.v11.common.YearMonthRange year_month_range = 1; */
        if (message.yearMonthRange)
            dates_1.YearMonthRange.internalBinaryWrite(message.yearMonthRange, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool include_average_cpc = 2; */
        if (message.includeAverageCpc !== false)
            writer.tag(2, runtime_1.WireType.Varint).bool(message.includeAverageCpc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.HistoricalMetricsOptions
 */
exports.HistoricalMetricsOptions = new HistoricalMetricsOptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MonthlySearchVolume$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.MonthlySearchVolume", [
            { no: 4, name: "year", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "month", kind: "enum", T: () => ["google.ads.googleads.v11.enums.MonthOfYearEnum.MonthOfYear", month_of_year_1.MonthOfYearEnum_MonthOfYear] },
            { no: 5, name: "monthly_searches", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { month: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 year */ 4:
                    message.year = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.MonthOfYearEnum.MonthOfYear month */ 2:
                    message.month = reader.int32();
                    break;
                case /* optional int64 monthly_searches */ 5:
                    message.monthlySearches = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 year = 4; */
        if (message.year !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.year);
        /* google.ads.googleads.v11.enums.MonthOfYearEnum.MonthOfYear month = 2; */
        if (message.month !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.month);
        /* optional int64 monthly_searches = 5; */
        if (message.monthlySearches !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.monthlySearches);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.MonthlySearchVolume
 */
exports.MonthlySearchVolume = new MonthlySearchVolume$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanAggregateMetrics$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.KeywordPlanAggregateMetrics", [
            { no: 1, name: "aggregate_metric_types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.KeywordPlanAggregateMetricTypeEnum.KeywordPlanAggregateMetricType", keyword_plan_aggregate_metric_type_1.KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType] }
        ]);
    }
    create(value) {
        const message = { aggregateMetricTypes: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.enums.KeywordPlanAggregateMetricTypeEnum.KeywordPlanAggregateMetricType aggregate_metric_types */ 1:
                    if (wireType === runtime_1.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.aggregateMetricTypes.push(reader.int32());
                    else
                        message.aggregateMetricTypes.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.enums.KeywordPlanAggregateMetricTypeEnum.KeywordPlanAggregateMetricType aggregate_metric_types = 1; */
        if (message.aggregateMetricTypes.length) {
            writer.tag(1, runtime_1.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.aggregateMetricTypes.length; i++)
                writer.int32(message.aggregateMetricTypes[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.KeywordPlanAggregateMetrics
 */
exports.KeywordPlanAggregateMetrics = new KeywordPlanAggregateMetrics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanAggregateMetricResults$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults", [
            { no: 1, name: "device_searches", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.KeywordPlanDeviceSearches }
        ]);
    }
    create(value) {
        const message = { deviceSearches: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.KeywordPlanDeviceSearches device_searches */ 1:
                    message.deviceSearches.push(exports.KeywordPlanDeviceSearches.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.KeywordPlanDeviceSearches device_searches = 1; */
        for (let i = 0; i < message.deviceSearches.length; i++)
            exports.KeywordPlanDeviceSearches.internalBinaryWrite(message.deviceSearches[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults
 */
exports.KeywordPlanAggregateMetricResults = new KeywordPlanAggregateMetricResults$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanDeviceSearches$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.KeywordPlanDeviceSearches", [
            { no: 1, name: "device", kind: "enum", T: () => ["google.ads.googleads.v11.enums.DeviceEnum.Device", device_1.DeviceEnum_Device] },
            { no: 2, name: "search_count", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { device: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.DeviceEnum.Device device */ 1:
                    message.device = reader.int32();
                    break;
                case /* optional int64 search_count */ 2:
                    message.searchCount = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.enums.DeviceEnum.Device device = 1; */
        if (message.device !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.device);
        /* optional int64 search_count = 2; */
        if (message.searchCount !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.searchCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.KeywordPlanDeviceSearches
 */
exports.KeywordPlanDeviceSearches = new KeywordPlanDeviceSearches$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordAnnotations$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.KeywordAnnotations", [
            { no: 1, name: "concepts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.KeywordConcept }
        ]);
    }
    create(value) {
        const message = { concepts: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.KeywordConcept concepts */ 1:
                    message.concepts.push(exports.KeywordConcept.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.KeywordConcept concepts = 1; */
        for (let i = 0; i < message.concepts.length; i++)
            exports.KeywordConcept.internalBinaryWrite(message.concepts[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.KeywordAnnotations
 */
exports.KeywordAnnotations = new KeywordAnnotations$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordConcept$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.KeywordConcept", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "concept_group", kind: "message", T: () => exports.ConceptGroup }
        ]);
    }
    create(value) {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.common.ConceptGroup concept_group */ 2:
                    message.conceptGroup = exports.ConceptGroup.internalBinaryRead(reader, reader.uint32(), options, message.conceptGroup);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.common.ConceptGroup concept_group = 2; */
        if (message.conceptGroup)
            exports.ConceptGroup.internalBinaryWrite(message.conceptGroup, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.KeywordConcept
 */
exports.KeywordConcept = new KeywordConcept$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConceptGroup$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.ConceptGroup", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType", keyword_plan_concept_group_type_1.KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType] }
        ]);
    }
    create(value) {
        const message = { name: "", type: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType type */ 2:
                    message.type = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType type = 2; */
        if (message.type !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.ConceptGroup
 */
exports.ConceptGroup = new ConceptGroup$Type();
//# sourceMappingURL=keyword_plan_common.js.map
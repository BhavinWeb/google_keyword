"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyTopicConstraint_CountryConstraint = exports.PolicyTopicConstraint_ResellerConstraint = exports.PolicyTopicConstraint_CountryConstraintList = exports.PolicyTopicConstraint = exports.PolicyTopicEvidence_DestinationNotWorking = exports.PolicyTopicEvidence_DestinationMismatch = exports.PolicyTopicEvidence_DestinationTextList = exports.PolicyTopicEvidence_WebsiteList = exports.PolicyTopicEvidence_TextList = exports.PolicyTopicEvidence = exports.PolicyTopicEntry = exports.PolicyValidationParameter = exports.PolicyViolationKey = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const policy_topic_evidence_destination_not_working_dns_error_type_1 = require("../enums/policy_topic_evidence_destination_not_working_dns_error_type");
const policy_topic_evidence_destination_not_working_device_1 = require("../enums/policy_topic_evidence_destination_not_working_device");
const policy_topic_evidence_destination_mismatch_url_type_1 = require("../enums/policy_topic_evidence_destination_mismatch_url_type");
const policy_topic_entry_type_1 = require("../enums/policy_topic_entry_type");
// @generated message type with reflection information, may provide speed optimized methods
class PolicyViolationKey$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyViolationKey", [
            { no: 3, name: "policy_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "violating_text", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string policy_name */ 3:
                    message.policyName = reader.string();
                    break;
                case /* optional string violating_text */ 4:
                    message.violatingText = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string policy_name = 3; */
        if (message.policyName !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.policyName);
        /* optional string violating_text = 4; */
        if (message.violatingText !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.violatingText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyViolationKey
 */
exports.PolicyViolationKey = new PolicyViolationKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyValidationParameter$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyValidationParameter", [
            { no: 3, name: "ignorable_policy_topics", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "exempt_policy_violation_keys", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PolicyViolationKey }
        ]);
    }
    create(value) {
        const message = { ignorablePolicyTopics: [], exemptPolicyViolationKeys: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ignorable_policy_topics */ 3:
                    message.ignorablePolicyTopics.push(reader.string());
                    break;
                case /* repeated google.ads.googleads.v11.common.PolicyViolationKey exempt_policy_violation_keys */ 2:
                    message.exemptPolicyViolationKeys.push(exports.PolicyViolationKey.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ignorable_policy_topics = 3; */
        for (let i = 0; i < message.ignorablePolicyTopics.length; i++)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.ignorablePolicyTopics[i]);
        /* repeated google.ads.googleads.v11.common.PolicyViolationKey exempt_policy_violation_keys = 2; */
        for (let i = 0; i < message.exemptPolicyViolationKeys.length; i++)
            exports.PolicyViolationKey.internalBinaryWrite(message.exemptPolicyViolationKeys[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyValidationParameter
 */
exports.PolicyValidationParameter = new PolicyValidationParameter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicEntry$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicEntry", [
            { no: 5, name: "topic", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PolicyTopicEntryTypeEnum.PolicyTopicEntryType", policy_topic_entry_type_1.PolicyTopicEntryTypeEnum_PolicyTopicEntryType] },
            { no: 3, name: "evidences", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PolicyTopicEvidence },
            { no: 4, name: "constraints", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PolicyTopicConstraint }
        ]);
    }
    create(value) {
        const message = { type: 0, evidences: [], constraints: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string topic */ 5:
                    message.topic = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.PolicyTopicEntryTypeEnum.PolicyTopicEntryType type */ 2:
                    message.type = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.PolicyTopicEvidence evidences */ 3:
                    message.evidences.push(exports.PolicyTopicEvidence.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.common.PolicyTopicConstraint constraints */ 4:
                    message.constraints.push(exports.PolicyTopicConstraint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string topic = 5; */
        if (message.topic !== undefined)
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.topic);
        /* google.ads.googleads.v11.enums.PolicyTopicEntryTypeEnum.PolicyTopicEntryType type = 2; */
        if (message.type !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.type);
        /* repeated google.ads.googleads.v11.common.PolicyTopicEvidence evidences = 3; */
        for (let i = 0; i < message.evidences.length; i++)
            exports.PolicyTopicEvidence.internalBinaryWrite(message.evidences[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.PolicyTopicConstraint constraints = 4; */
        for (let i = 0; i < message.constraints.length; i++)
            exports.PolicyTopicConstraint.internalBinaryWrite(message.constraints[i], writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicEntry
 */
exports.PolicyTopicEntry = new PolicyTopicEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicEvidence$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicEvidence", [
            { no: 3, name: "website_list", kind: "message", oneof: "value", T: () => exports.PolicyTopicEvidence_WebsiteList },
            { no: 4, name: "text_list", kind: "message", oneof: "value", T: () => exports.PolicyTopicEvidence_TextList },
            { no: 9, name: "language_code", kind: "scalar", oneof: "value", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "destination_text_list", kind: "message", oneof: "value", T: () => exports.PolicyTopicEvidence_DestinationTextList },
            { no: 7, name: "destination_mismatch", kind: "message", oneof: "value", T: () => exports.PolicyTopicEvidence_DestinationMismatch },
            { no: 8, name: "destination_not_working", kind: "message", oneof: "value", T: () => exports.PolicyTopicEvidence_DestinationNotWorking }
        ]);
    }
    create(value) {
        const message = { value: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.PolicyTopicEvidence.WebsiteList website_list */ 3:
                    message.value = {
                        oneofKind: "websiteList",
                        websiteList: exports.PolicyTopicEvidence_WebsiteList.internalBinaryRead(reader, reader.uint32(), options, message.value.websiteList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.PolicyTopicEvidence.TextList text_list */ 4:
                    message.value = {
                        oneofKind: "textList",
                        textList: exports.PolicyTopicEvidence_TextList.internalBinaryRead(reader, reader.uint32(), options, message.value.textList)
                    };
                    break;
                case /* string language_code */ 9:
                    message.value = {
                        oneofKind: "languageCode",
                        languageCode: reader.string()
                    };
                    break;
                case /* google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationTextList destination_text_list */ 6:
                    message.value = {
                        oneofKind: "destinationTextList",
                        destinationTextList: exports.PolicyTopicEvidence_DestinationTextList.internalBinaryRead(reader, reader.uint32(), options, message.value.destinationTextList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationMismatch destination_mismatch */ 7:
                    message.value = {
                        oneofKind: "destinationMismatch",
                        destinationMismatch: exports.PolicyTopicEvidence_DestinationMismatch.internalBinaryRead(reader, reader.uint32(), options, message.value.destinationMismatch)
                    };
                    break;
                case /* google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationNotWorking destination_not_working */ 8:
                    message.value = {
                        oneofKind: "destinationNotWorking",
                        destinationNotWorking: exports.PolicyTopicEvidence_DestinationNotWorking.internalBinaryRead(reader, reader.uint32(), options, message.value.destinationNotWorking)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.common.PolicyTopicEvidence.WebsiteList website_list = 3; */
        if (message.value.oneofKind === "websiteList")
            exports.PolicyTopicEvidence_WebsiteList.internalBinaryWrite(message.value.websiteList, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.PolicyTopicEvidence.TextList text_list = 4; */
        if (message.value.oneofKind === "textList")
            exports.PolicyTopicEvidence_TextList.internalBinaryWrite(message.value.textList, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string language_code = 9; */
        if (message.value.oneofKind === "languageCode")
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.value.languageCode);
        /* google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationTextList destination_text_list = 6; */
        if (message.value.oneofKind === "destinationTextList")
            exports.PolicyTopicEvidence_DestinationTextList.internalBinaryWrite(message.value.destinationTextList, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationMismatch destination_mismatch = 7; */
        if (message.value.oneofKind === "destinationMismatch")
            exports.PolicyTopicEvidence_DestinationMismatch.internalBinaryWrite(message.value.destinationMismatch, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationNotWorking destination_not_working = 8; */
        if (message.value.oneofKind === "destinationNotWorking")
            exports.PolicyTopicEvidence_DestinationNotWorking.internalBinaryWrite(message.value.destinationNotWorking, writer.tag(8, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicEvidence
 */
exports.PolicyTopicEvidence = new PolicyTopicEvidence$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicEvidence_TextList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicEvidence.TextList", [
            { no: 2, name: "texts", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { texts: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string texts */ 2:
                    message.texts.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string texts = 2; */
        for (let i = 0; i < message.texts.length; i++)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.texts[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicEvidence.TextList
 */
exports.PolicyTopicEvidence_TextList = new PolicyTopicEvidence_TextList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicEvidence_WebsiteList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicEvidence.WebsiteList", [
            { no: 2, name: "websites", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { websites: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string websites */ 2:
                    message.websites.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string websites = 2; */
        for (let i = 0; i < message.websites.length; i++)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.websites[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicEvidence.WebsiteList
 */
exports.PolicyTopicEvidence_WebsiteList = new PolicyTopicEvidence_WebsiteList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicEvidence_DestinationTextList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationTextList", [
            { no: 2, name: "destination_texts", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { destinationTexts: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string destination_texts */ 2:
                    message.destinationTexts.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string destination_texts = 2; */
        for (let i = 0; i < message.destinationTexts.length; i++)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.destinationTexts[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationTextList
 */
exports.PolicyTopicEvidence_DestinationTextList = new PolicyTopicEvidence_DestinationTextList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicEvidence_DestinationMismatch$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationMismatch", [
            { no: 1, name: "url_types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationMismatchUrlTypeEnum.PolicyTopicEvidenceDestinationMismatchUrlType", policy_topic_evidence_destination_mismatch_url_type_1.PolicyTopicEvidenceDestinationMismatchUrlTypeEnum_PolicyTopicEvidenceDestinationMismatchUrlType] }
        ]);
    }
    create(value) {
        const message = { urlTypes: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationMismatchUrlTypeEnum.PolicyTopicEvidenceDestinationMismatchUrlType url_types */ 1:
                    if (wireType === runtime_1.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.urlTypes.push(reader.int32());
                    else
                        message.urlTypes.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationMismatchUrlTypeEnum.PolicyTopicEvidenceDestinationMismatchUrlType url_types = 1; */
        if (message.urlTypes.length) {
            writer.tag(1, runtime_1.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.urlTypes.length; i++)
                writer.int32(message.urlTypes[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationMismatch
 */
exports.PolicyTopicEvidence_DestinationMismatch = new PolicyTopicEvidence_DestinationMismatch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicEvidence_DestinationNotWorking$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationNotWorking", [
            { no: 7, name: "expanded_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "device", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationNotWorkingDeviceEnum.PolicyTopicEvidenceDestinationNotWorkingDevice", policy_topic_evidence_destination_not_working_device_1.PolicyTopicEvidenceDestinationNotWorkingDeviceEnum_PolicyTopicEvidenceDestinationNotWorkingDevice] },
            { no: 8, name: "last_checked_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 1, name: "dns_error_type", kind: "enum", oneof: "reason", T: () => ["google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum.PolicyTopicEvidenceDestinationNotWorkingDnsErrorType", policy_topic_evidence_destination_not_working_dns_error_type_1.PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum_PolicyTopicEvidenceDestinationNotWorkingDnsErrorType] },
            { no: 6, name: "http_error_code", kind: "scalar", oneof: "reason", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { device: 0, reason: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string expanded_url */ 7:
                    message.expandedUrl = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationNotWorkingDeviceEnum.PolicyTopicEvidenceDestinationNotWorkingDevice device */ 4:
                    message.device = reader.int32();
                    break;
                case /* optional string last_checked_date_time */ 8:
                    message.lastCheckedDateTime = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum.PolicyTopicEvidenceDestinationNotWorkingDnsErrorType dns_error_type */ 1:
                    message.reason = {
                        oneofKind: "dnsErrorType",
                        dnsErrorType: reader.int32()
                    };
                    break;
                case /* int64 http_error_code */ 6:
                    message.reason = {
                        oneofKind: "httpErrorCode",
                        httpErrorCode: reader.int64().toBigInt()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string expanded_url = 7; */
        if (message.expandedUrl !== undefined)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.expandedUrl);
        /* google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationNotWorkingDeviceEnum.PolicyTopicEvidenceDestinationNotWorkingDevice device = 4; */
        if (message.device !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.device);
        /* optional string last_checked_date_time = 8; */
        if (message.lastCheckedDateTime !== undefined)
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.lastCheckedDateTime);
        /* google.ads.googleads.v11.enums.PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum.PolicyTopicEvidenceDestinationNotWorkingDnsErrorType dns_error_type = 1; */
        if (message.reason.oneofKind === "dnsErrorType")
            writer.tag(1, runtime_1.WireType.Varint).int32(message.reason.dnsErrorType);
        /* int64 http_error_code = 6; */
        if (message.reason.oneofKind === "httpErrorCode")
            writer.tag(6, runtime_1.WireType.Varint).int64(message.reason.httpErrorCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicEvidence.DestinationNotWorking
 */
exports.PolicyTopicEvidence_DestinationNotWorking = new PolicyTopicEvidence_DestinationNotWorking$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicConstraint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicConstraint", [
            { no: 1, name: "country_constraint_list", kind: "message", oneof: "value", T: () => exports.PolicyTopicConstraint_CountryConstraintList },
            { no: 2, name: "reseller_constraint", kind: "message", oneof: "value", T: () => exports.PolicyTopicConstraint_ResellerConstraint },
            { no: 3, name: "certificate_missing_in_country_list", kind: "message", oneof: "value", T: () => exports.PolicyTopicConstraint_CountryConstraintList },
            { no: 4, name: "certificate_domain_mismatch_in_country_list", kind: "message", oneof: "value", T: () => exports.PolicyTopicConstraint_CountryConstraintList }
        ]);
    }
    create(value) {
        const message = { value: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList country_constraint_list */ 1:
                    message.value = {
                        oneofKind: "countryConstraintList",
                        countryConstraintList: exports.PolicyTopicConstraint_CountryConstraintList.internalBinaryRead(reader, reader.uint32(), options, message.value.countryConstraintList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.PolicyTopicConstraint.ResellerConstraint reseller_constraint */ 2:
                    message.value = {
                        oneofKind: "resellerConstraint",
                        resellerConstraint: exports.PolicyTopicConstraint_ResellerConstraint.internalBinaryRead(reader, reader.uint32(), options, message.value.resellerConstraint)
                    };
                    break;
                case /* google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList certificate_missing_in_country_list */ 3:
                    message.value = {
                        oneofKind: "certificateMissingInCountryList",
                        certificateMissingInCountryList: exports.PolicyTopicConstraint_CountryConstraintList.internalBinaryRead(reader, reader.uint32(), options, message.value.certificateMissingInCountryList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList certificate_domain_mismatch_in_country_list */ 4:
                    message.value = {
                        oneofKind: "certificateDomainMismatchInCountryList",
                        certificateDomainMismatchInCountryList: exports.PolicyTopicConstraint_CountryConstraintList.internalBinaryRead(reader, reader.uint32(), options, message.value.certificateDomainMismatchInCountryList)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList country_constraint_list = 1; */
        if (message.value.oneofKind === "countryConstraintList")
            exports.PolicyTopicConstraint_CountryConstraintList.internalBinaryWrite(message.value.countryConstraintList, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.PolicyTopicConstraint.ResellerConstraint reseller_constraint = 2; */
        if (message.value.oneofKind === "resellerConstraint")
            exports.PolicyTopicConstraint_ResellerConstraint.internalBinaryWrite(message.value.resellerConstraint, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList certificate_missing_in_country_list = 3; */
        if (message.value.oneofKind === "certificateMissingInCountryList")
            exports.PolicyTopicConstraint_CountryConstraintList.internalBinaryWrite(message.value.certificateMissingInCountryList, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList certificate_domain_mismatch_in_country_list = 4; */
        if (message.value.oneofKind === "certificateDomainMismatchInCountryList")
            exports.PolicyTopicConstraint_CountryConstraintList.internalBinaryWrite(message.value.certificateDomainMismatchInCountryList, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicConstraint
 */
exports.PolicyTopicConstraint = new PolicyTopicConstraint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicConstraint_CountryConstraintList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList", [
            { no: 3, name: "total_targeted_countries", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "countries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PolicyTopicConstraint_CountryConstraint }
        ]);
    }
    create(value) {
        const message = { countries: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 total_targeted_countries */ 3:
                    message.totalTargetedCountries = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraint countries */ 2:
                    message.countries.push(exports.PolicyTopicConstraint_CountryConstraint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int32 total_targeted_countries = 3; */
        if (message.totalTargetedCountries !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.totalTargetedCountries);
        /* repeated google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraint countries = 2; */
        for (let i = 0; i < message.countries.length; i++)
            exports.PolicyTopicConstraint_CountryConstraint.internalBinaryWrite(message.countries[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraintList
 */
exports.PolicyTopicConstraint_CountryConstraintList = new PolicyTopicConstraint_CountryConstraintList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicConstraint_ResellerConstraint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicConstraint.ResellerConstraint", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicConstraint.ResellerConstraint
 */
exports.PolicyTopicConstraint_ResellerConstraint = new PolicyTopicConstraint_ResellerConstraint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PolicyTopicConstraint_CountryConstraint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraint", [
            { no: 2, name: "country_criterion", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string country_criterion */ 2:
                    message.countryCriterion = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string country_criterion = 2; */
        if (message.countryCriterion !== undefined)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.countryCriterion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PolicyTopicConstraint.CountryConstraint
 */
exports.PolicyTopicConstraint_CountryConstraint = new PolicyTopicConstraint_CountryConstraint$Type();
//# sourceMappingURL=policy.js.map
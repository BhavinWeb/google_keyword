"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CriterionCategoryLocaleAvailability = exports.CriterionCategoryChannelAvailability = exports.CriterionCategoryAvailability = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const criterion_category_locale_availability_mode_1 = require("../enums/criterion_category_locale_availability_mode");
const advertising_channel_sub_type_1 = require("../enums/advertising_channel_sub_type");
const advertising_channel_type_1 = require("../enums/advertising_channel_type");
const criterion_category_channel_availability_mode_1 = require("../enums/criterion_category_channel_availability_mode");
// @generated message type with reflection information, may provide speed optimized methods
class CriterionCategoryAvailability$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.CriterionCategoryAvailability", [
            { no: 1, name: "channel", kind: "message", T: () => exports.CriterionCategoryChannelAvailability },
            { no: 2, name: "locale", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CriterionCategoryLocaleAvailability }
        ]);
    }
    create(value) {
        const message = { locale: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.CriterionCategoryChannelAvailability channel */ 1:
                    message.channel = exports.CriterionCategoryChannelAvailability.internalBinaryRead(reader, reader.uint32(), options, message.channel);
                    break;
                case /* repeated google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability locale */ 2:
                    message.locale.push(exports.CriterionCategoryLocaleAvailability.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.common.CriterionCategoryChannelAvailability channel = 1; */
        if (message.channel)
            exports.CriterionCategoryChannelAvailability.internalBinaryWrite(message.channel, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability locale = 2; */
        for (let i = 0; i < message.locale.length; i++)
            exports.CriterionCategoryLocaleAvailability.internalBinaryWrite(message.locale[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CriterionCategoryAvailability
 */
exports.CriterionCategoryAvailability = new CriterionCategoryAvailability$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CriterionCategoryChannelAvailability$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.CriterionCategoryChannelAvailability", [
            { no: 1, name: "availability_mode", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CriterionCategoryChannelAvailabilityModeEnum.CriterionCategoryChannelAvailabilityMode", criterion_category_channel_availability_mode_1.CriterionCategoryChannelAvailabilityModeEnum_CriterionCategoryChannelAvailabilityMode] },
            { no: 2, name: "advertising_channel_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType", advertising_channel_type_1.AdvertisingChannelTypeEnum_AdvertisingChannelType] },
            { no: 3, name: "advertising_channel_sub_type", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType", advertising_channel_sub_type_1.AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType] },
            { no: 5, name: "include_default_channel_sub_type", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { availabilityMode: 0, advertisingChannelType: 0, advertisingChannelSubType: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.CriterionCategoryChannelAvailabilityModeEnum.CriterionCategoryChannelAvailabilityMode availability_mode */ 1:
                    message.availabilityMode = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type */ 2:
                    message.advertisingChannelType = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type */ 3:
                    if (wireType === runtime_1.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.advertisingChannelSubType.push(reader.int32());
                    else
                        message.advertisingChannelSubType.push(reader.int32());
                    break;
                case /* optional bool include_default_channel_sub_type */ 5:
                    message.includeDefaultChannelSubType = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.enums.CriterionCategoryChannelAvailabilityModeEnum.CriterionCategoryChannelAvailabilityMode availability_mode = 1; */
        if (message.availabilityMode !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.availabilityMode);
        /* google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type = 2; */
        if (message.advertisingChannelType !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.advertisingChannelType);
        /* repeated google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type = 3; */
        if (message.advertisingChannelSubType.length) {
            writer.tag(3, runtime_1.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.advertisingChannelSubType.length; i++)
                writer.int32(message.advertisingChannelSubType[i]);
            writer.join();
        }
        /* optional bool include_default_channel_sub_type = 5; */
        if (message.includeDefaultChannelSubType !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).bool(message.includeDefaultChannelSubType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CriterionCategoryChannelAvailability
 */
exports.CriterionCategoryChannelAvailability = new CriterionCategoryChannelAvailability$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CriterionCategoryLocaleAvailability$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability", [
            { no: 1, name: "availability_mode", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CriterionCategoryLocaleAvailabilityModeEnum.CriterionCategoryLocaleAvailabilityMode", criterion_category_locale_availability_mode_1.CriterionCategoryLocaleAvailabilityModeEnum_CriterionCategoryLocaleAvailabilityMode] },
            { no: 4, name: "country_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "language_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { availabilityMode: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.CriterionCategoryLocaleAvailabilityModeEnum.CriterionCategoryLocaleAvailabilityMode availability_mode */ 1:
                    message.availabilityMode = reader.int32();
                    break;
                case /* optional string country_code */ 4:
                    message.countryCode = reader.string();
                    break;
                case /* optional string language_code */ 5:
                    message.languageCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.enums.CriterionCategoryLocaleAvailabilityModeEnum.CriterionCategoryLocaleAvailabilityMode availability_mode = 1; */
        if (message.availabilityMode !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.availabilityMode);
        /* optional string country_code = 4; */
        if (message.countryCode !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.countryCode);
        /* optional string language_code = 5; */
        if (message.languageCode !== undefined)
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.languageCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability
 */
exports.CriterionCategoryLocaleAvailability = new CriterionCategoryLocaleAvailability$Type();
//# sourceMappingURL=criterion_category_availability.js.map
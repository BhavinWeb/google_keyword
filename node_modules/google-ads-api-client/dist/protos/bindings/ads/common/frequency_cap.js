"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrequencyCapKey = exports.FrequencyCapEntry = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const frequency_cap_time_unit_1 = require("../enums/frequency_cap_time_unit");
const frequency_cap_event_type_1 = require("../enums/frequency_cap_event_type");
const frequency_cap_level_1 = require("../enums/frequency_cap_level");
// @generated message type with reflection information, may provide speed optimized methods
class FrequencyCapEntry$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.FrequencyCapEntry", [
            { no: 1, name: "key", kind: "message", T: () => exports.FrequencyCapKey },
            { no: 3, name: "cap", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.FrequencyCapKey key */ 1:
                    message.key = exports.FrequencyCapKey.internalBinaryRead(reader, reader.uint32(), options, message.key);
                    break;
                case /* optional int32 cap */ 3:
                    message.cap = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.common.FrequencyCapKey key = 1; */
        if (message.key)
            exports.FrequencyCapKey.internalBinaryWrite(message.key, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* optional int32 cap = 3; */
        if (message.cap !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.cap);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.FrequencyCapEntry
 */
exports.FrequencyCapEntry = new FrequencyCapEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FrequencyCapKey$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.FrequencyCapKey", [
            { no: 1, name: "level", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FrequencyCapLevelEnum.FrequencyCapLevel", frequency_cap_level_1.FrequencyCapLevelEnum_FrequencyCapLevel] },
            { no: 3, name: "event_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FrequencyCapEventTypeEnum.FrequencyCapEventType", frequency_cap_event_type_1.FrequencyCapEventTypeEnum_FrequencyCapEventType] },
            { no: 2, name: "time_unit", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit", frequency_cap_time_unit_1.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit] },
            { no: 5, name: "time_length", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { level: 0, eventType: 0, timeUnit: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.FrequencyCapLevelEnum.FrequencyCapLevel level */ 1:
                    message.level = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.FrequencyCapEventTypeEnum.FrequencyCapEventType event_type */ 3:
                    message.eventType = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit time_unit */ 2:
                    message.timeUnit = reader.int32();
                    break;
                case /* optional int32 time_length */ 5:
                    message.timeLength = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.enums.FrequencyCapLevelEnum.FrequencyCapLevel level = 1; */
        if (message.level !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.level);
        /* google.ads.googleads.v11.enums.FrequencyCapEventTypeEnum.FrequencyCapEventType event_type = 3; */
        if (message.eventType !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.eventType);
        /* google.ads.googleads.v11.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit time_unit = 2; */
        if (message.timeUnit !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.timeUnit);
        /* optional int32 time_length = 5; */
        if (message.timeLength !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.timeLength);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.FrequencyCapKey
 */
exports.FrequencyCapKey = new FrequencyCapKey$Type();
//# sourceMappingURL=frequency_cap.js.map
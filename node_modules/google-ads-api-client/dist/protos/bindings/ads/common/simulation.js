"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TargetImpressionShareSimulationPoint = exports.BudgetSimulationPoint = exports.PercentCpcBidSimulationPoint = exports.TargetRoasSimulationPoint = exports.TargetCpaSimulationPoint = exports.CpvBidSimulationPoint = exports.CpcBidSimulationPoint = exports.BidModifierSimulationPoint = exports.TargetImpressionShareSimulationPointList = exports.BudgetSimulationPointList = exports.PercentCpcBidSimulationPointList = exports.TargetRoasSimulationPointList = exports.TargetCpaSimulationPointList = exports.CpvBidSimulationPointList = exports.CpcBidSimulationPointList = exports.BidModifierSimulationPointList = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
// @generated message type with reflection information, may provide speed optimized methods
class BidModifierSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.BidModifierSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.BidModifierSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.BidModifierSimulationPoint points */ 1:
                    message.points.push(exports.BidModifierSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.BidModifierSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.BidModifierSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BidModifierSimulationPointList
 */
exports.BidModifierSimulationPointList = new BidModifierSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpcBidSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.CpcBidSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CpcBidSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.CpcBidSimulationPoint points */ 1:
                    message.points.push(exports.CpcBidSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.CpcBidSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.CpcBidSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpcBidSimulationPointList
 */
exports.CpcBidSimulationPointList = new CpcBidSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpvBidSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.CpvBidSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CpvBidSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.CpvBidSimulationPoint points */ 1:
                    message.points.push(exports.CpvBidSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.CpvBidSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.CpvBidSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpvBidSimulationPointList
 */
exports.CpvBidSimulationPointList = new CpvBidSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetCpaSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetCpaSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.TargetCpaSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.TargetCpaSimulationPoint points */ 1:
                    message.points.push(exports.TargetCpaSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.TargetCpaSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.TargetCpaSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetCpaSimulationPointList
 */
exports.TargetCpaSimulationPointList = new TargetCpaSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetRoasSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetRoasSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.TargetRoasSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.TargetRoasSimulationPoint points */ 1:
                    message.points.push(exports.TargetRoasSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.TargetRoasSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.TargetRoasSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetRoasSimulationPointList
 */
exports.TargetRoasSimulationPointList = new TargetRoasSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentCpcBidSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PercentCpcBidSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PercentCpcBidSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.PercentCpcBidSimulationPoint points */ 1:
                    message.points.push(exports.PercentCpcBidSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.PercentCpcBidSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.PercentCpcBidSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PercentCpcBidSimulationPointList
 */
exports.PercentCpcBidSimulationPointList = new PercentCpcBidSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BudgetSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.BudgetSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.BudgetSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.BudgetSimulationPoint points */ 1:
                    message.points.push(exports.BudgetSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.BudgetSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.BudgetSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BudgetSimulationPointList
 */
exports.BudgetSimulationPointList = new BudgetSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetImpressionShareSimulationPointList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetImpressionShareSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.TargetImpressionShareSimulationPoint }
        ]);
    }
    create(value) {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint points */ 1:
                    message.points.push(exports.TargetImpressionShareSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            exports.TargetImpressionShareSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetImpressionShareSimulationPointList
 */
exports.TargetImpressionShareSimulationPointList = new TargetImpressionShareSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BidModifierSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.BidModifierSimulationPoint", [
            { no: 15, name: "bid_modifier", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 16, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 17, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 18, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 19, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 20, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 21, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 22, name: "parent_biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 23, name: "parent_biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 24, name: "parent_clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 25, name: "parent_cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 26, name: "parent_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 27, name: "parent_top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 28, name: "parent_required_budget_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double bid_modifier */ 15:
                    message.bidModifier = reader.double();
                    break;
                case /* optional double biddable_conversions */ 16:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 17:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 18:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 19:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 20:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 21:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* optional double parent_biddable_conversions */ 22:
                    message.parentBiddableConversions = reader.double();
                    break;
                case /* optional double parent_biddable_conversions_value */ 23:
                    message.parentBiddableConversionsValue = reader.double();
                    break;
                case /* optional int64 parent_clicks */ 24:
                    message.parentClicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_cost_micros */ 25:
                    message.parentCostMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_impressions */ 26:
                    message.parentImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_top_slot_impressions */ 27:
                    message.parentTopSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_required_budget_micros */ 28:
                    message.parentRequiredBudgetMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional double bid_modifier = 15; */
        if (message.bidModifier !== undefined)
            writer.tag(15, runtime_1.WireType.Bit64).double(message.bidModifier);
        /* optional double biddable_conversions = 16; */
        if (message.biddableConversions !== undefined)
            writer.tag(16, runtime_1.WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 17; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(17, runtime_1.WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 18; */
        if (message.clicks !== undefined)
            writer.tag(18, runtime_1.WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 19; */
        if (message.costMicros !== undefined)
            writer.tag(19, runtime_1.WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 20; */
        if (message.impressions !== undefined)
            writer.tag(20, runtime_1.WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 21; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(21, runtime_1.WireType.Varint).int64(message.topSlotImpressions);
        /* optional double parent_biddable_conversions = 22; */
        if (message.parentBiddableConversions !== undefined)
            writer.tag(22, runtime_1.WireType.Bit64).double(message.parentBiddableConversions);
        /* optional double parent_biddable_conversions_value = 23; */
        if (message.parentBiddableConversionsValue !== undefined)
            writer.tag(23, runtime_1.WireType.Bit64).double(message.parentBiddableConversionsValue);
        /* optional int64 parent_clicks = 24; */
        if (message.parentClicks !== undefined)
            writer.tag(24, runtime_1.WireType.Varint).int64(message.parentClicks);
        /* optional int64 parent_cost_micros = 25; */
        if (message.parentCostMicros !== undefined)
            writer.tag(25, runtime_1.WireType.Varint).int64(message.parentCostMicros);
        /* optional int64 parent_impressions = 26; */
        if (message.parentImpressions !== undefined)
            writer.tag(26, runtime_1.WireType.Varint).int64(message.parentImpressions);
        /* optional int64 parent_top_slot_impressions = 27; */
        if (message.parentTopSlotImpressions !== undefined)
            writer.tag(27, runtime_1.WireType.Varint).int64(message.parentTopSlotImpressions);
        /* optional int64 parent_required_budget_micros = 28; */
        if (message.parentRequiredBudgetMicros !== undefined)
            writer.tag(28, runtime_1.WireType.Varint).int64(message.parentRequiredBudgetMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BidModifierSimulationPoint
 */
exports.BidModifierSimulationPoint = new BidModifierSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpcBidSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.CpcBidSimulationPoint", [
            { no: 17, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "cpc_bid_micros", kind: "scalar", oneof: "cpcSimulationKeyValue", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 16, name: "cpc_bid_scaling_modifier", kind: "scalar", oneof: "cpcSimulationKeyValue", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value) {
        const message = { requiredBudgetAmountMicros: 0n, cpcSimulationKeyValue: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 required_budget_amount_micros */ 17:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 9:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 10:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 11:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 12:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 13:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 14:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* int64 cpc_bid_micros */ 15:
                    message.cpcSimulationKeyValue = {
                        oneofKind: "cpcBidMicros",
                        cpcBidMicros: reader.int64().toBigInt()
                    };
                    break;
                case /* double cpc_bid_scaling_modifier */ 16:
                    message.cpcSimulationKeyValue = {
                        oneofKind: "cpcBidScalingModifier",
                        cpcBidScalingModifier: reader.double()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 required_budget_amount_micros = 17; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(17, runtime_1.WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* optional double biddable_conversions = 9; */
        if (message.biddableConversions !== undefined)
            writer.tag(9, runtime_1.WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 10; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(10, runtime_1.WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 11; */
        if (message.clicks !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 12; */
        if (message.costMicros !== undefined)
            writer.tag(12, runtime_1.WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 13; */
        if (message.impressions !== undefined)
            writer.tag(13, runtime_1.WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 14; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(14, runtime_1.WireType.Varint).int64(message.topSlotImpressions);
        /* int64 cpc_bid_micros = 15; */
        if (message.cpcSimulationKeyValue.oneofKind === "cpcBidMicros")
            writer.tag(15, runtime_1.WireType.Varint).int64(message.cpcSimulationKeyValue.cpcBidMicros);
        /* double cpc_bid_scaling_modifier = 16; */
        if (message.cpcSimulationKeyValue.oneofKind === "cpcBidScalingModifier")
            writer.tag(16, runtime_1.WireType.Bit64).double(message.cpcSimulationKeyValue.cpcBidScalingModifier);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpcBidSimulationPoint
 */
exports.CpcBidSimulationPoint = new CpcBidSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpvBidSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.CpvBidSimulationPoint", [
            { no: 5, name: "cpv_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "views", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 cpv_bid_micros */ 5:
                    message.cpvBidMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 6:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 7:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 views */ 8:
                    message.views = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 cpv_bid_micros = 5; */
        if (message.cpvBidMicros !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.cpvBidMicros);
        /* optional int64 cost_micros = 6; */
        if (message.costMicros !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 7; */
        if (message.impressions !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).int64(message.impressions);
        /* optional int64 views = 8; */
        if (message.views !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.views);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpvBidSimulationPoint
 */
exports.CpvBidSimulationPoint = new CpvBidSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetCpaSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetCpaSimulationPoint", [
            { no: 19, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "app_installs", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 16, name: "in_app_actions", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "target_cpa_micros", kind: "scalar", oneof: "targetCpaSimulationKeyValue", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 18, name: "target_cpa_scaling_modifier", kind: "scalar", oneof: "targetCpaSimulationKeyValue", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value) {
        const message = { requiredBudgetAmountMicros: 0n, appInstalls: 0, inAppActions: 0, targetCpaSimulationKeyValue: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 required_budget_amount_micros */ 19:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 9:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 10:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* double app_installs */ 15:
                    message.appInstalls = reader.double();
                    break;
                case /* double in_app_actions */ 16:
                    message.inAppActions = reader.double();
                    break;
                case /* optional int64 clicks */ 11:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 12:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 13:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 14:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* int64 target_cpa_micros */ 17:
                    message.targetCpaSimulationKeyValue = {
                        oneofKind: "targetCpaMicros",
                        targetCpaMicros: reader.int64().toBigInt()
                    };
                    break;
                case /* double target_cpa_scaling_modifier */ 18:
                    message.targetCpaSimulationKeyValue = {
                        oneofKind: "targetCpaScalingModifier",
                        targetCpaScalingModifier: reader.double()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 required_budget_amount_micros = 19; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(19, runtime_1.WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* optional double biddable_conversions = 9; */
        if (message.biddableConversions !== undefined)
            writer.tag(9, runtime_1.WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 10; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(10, runtime_1.WireType.Bit64).double(message.biddableConversionsValue);
        /* double app_installs = 15; */
        if (message.appInstalls !== 0)
            writer.tag(15, runtime_1.WireType.Bit64).double(message.appInstalls);
        /* double in_app_actions = 16; */
        if (message.inAppActions !== 0)
            writer.tag(16, runtime_1.WireType.Bit64).double(message.inAppActions);
        /* optional int64 clicks = 11; */
        if (message.clicks !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 12; */
        if (message.costMicros !== undefined)
            writer.tag(12, runtime_1.WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 13; */
        if (message.impressions !== undefined)
            writer.tag(13, runtime_1.WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 14; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(14, runtime_1.WireType.Varint).int64(message.topSlotImpressions);
        /* int64 target_cpa_micros = 17; */
        if (message.targetCpaSimulationKeyValue.oneofKind === "targetCpaMicros")
            writer.tag(17, runtime_1.WireType.Varint).int64(message.targetCpaSimulationKeyValue.targetCpaMicros);
        /* double target_cpa_scaling_modifier = 18; */
        if (message.targetCpaSimulationKeyValue.oneofKind === "targetCpaScalingModifier")
            writer.tag(18, runtime_1.WireType.Bit64).double(message.targetCpaSimulationKeyValue.targetCpaScalingModifier);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetCpaSimulationPoint
 */
exports.TargetCpaSimulationPoint = new TargetCpaSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetRoasSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetRoasSimulationPoint", [
            { no: 8, name: "target_roas", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { requiredBudgetAmountMicros: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double target_roas */ 8:
                    message.targetRoas = reader.double();
                    break;
                case /* int64 required_budget_amount_micros */ 15:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 9:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 10:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 11:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 12:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 13:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 14:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional double target_roas = 8; */
        if (message.targetRoas !== undefined)
            writer.tag(8, runtime_1.WireType.Bit64).double(message.targetRoas);
        /* int64 required_budget_amount_micros = 15; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(15, runtime_1.WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* optional double biddable_conversions = 9; */
        if (message.biddableConversions !== undefined)
            writer.tag(9, runtime_1.WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 10; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(10, runtime_1.WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 11; */
        if (message.clicks !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 12; */
        if (message.costMicros !== undefined)
            writer.tag(12, runtime_1.WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 13; */
        if (message.impressions !== undefined)
            writer.tag(13, runtime_1.WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 14; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(14, runtime_1.WireType.Varint).int64(message.topSlotImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetRoasSimulationPoint
 */
exports.TargetRoasSimulationPoint = new TargetRoasSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentCpcBidSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PercentCpcBidSimulationPoint", [
            { no: 1, name: "percent_cpc_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 percent_cpc_bid_micros */ 1:
                    message.percentCpcBidMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 2:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 3:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 4:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 5:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 6:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 7:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 percent_cpc_bid_micros = 1; */
        if (message.percentCpcBidMicros !== undefined)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.percentCpcBidMicros);
        /* optional double biddable_conversions = 2; */
        if (message.biddableConversions !== undefined)
            writer.tag(2, runtime_1.WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 3; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(3, runtime_1.WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 4; */
        if (message.clicks !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 5; */
        if (message.costMicros !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 6; */
        if (message.impressions !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 7; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).int64(message.topSlotImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PercentCpcBidSimulationPoint
 */
exports.PercentCpcBidSimulationPoint = new PercentCpcBidSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BudgetSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.BudgetSimulationPoint", [
            { no: 1, name: "budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "required_cpc_bid_ceiling_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "biddable_conversions", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "biddable_conversions_value", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "clicks", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "cost_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "top_slot_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { budgetAmountMicros: 0n, requiredCpcBidCeilingMicros: 0n, biddableConversions: 0, biddableConversionsValue: 0, clicks: 0n, costMicros: 0n, impressions: 0n, topSlotImpressions: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 budget_amount_micros */ 1:
                    message.budgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* int64 required_cpc_bid_ceiling_micros */ 2:
                    message.requiredCpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* double biddable_conversions */ 3:
                    message.biddableConversions = reader.double();
                    break;
                case /* double biddable_conversions_value */ 4:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* int64 clicks */ 5:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* int64 cost_micros */ 6:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* int64 impressions */ 7:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* int64 top_slot_impressions */ 8:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 budget_amount_micros = 1; */
        if (message.budgetAmountMicros !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.budgetAmountMicros);
        /* int64 required_cpc_bid_ceiling_micros = 2; */
        if (message.requiredCpcBidCeilingMicros !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.requiredCpcBidCeilingMicros);
        /* double biddable_conversions = 3; */
        if (message.biddableConversions !== 0)
            writer.tag(3, runtime_1.WireType.Bit64).double(message.biddableConversions);
        /* double biddable_conversions_value = 4; */
        if (message.biddableConversionsValue !== 0)
            writer.tag(4, runtime_1.WireType.Bit64).double(message.biddableConversionsValue);
        /* int64 clicks = 5; */
        if (message.clicks !== 0n)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.clicks);
        /* int64 cost_micros = 6; */
        if (message.costMicros !== 0n)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.costMicros);
        /* int64 impressions = 7; */
        if (message.impressions !== 0n)
            writer.tag(7, runtime_1.WireType.Varint).int64(message.impressions);
        /* int64 top_slot_impressions = 8; */
        if (message.topSlotImpressions !== 0n)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.topSlotImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BudgetSimulationPoint
 */
exports.BudgetSimulationPoint = new BudgetSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetImpressionShareSimulationPoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint", [
            { no: 1, name: "target_impression_share_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "required_cpc_bid_ceiling_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "biddable_conversions", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "biddable_conversions_value", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "clicks", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "cost_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "top_slot_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "absolute_top_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { targetImpressionShareMicros: 0n, requiredCpcBidCeilingMicros: 0n, requiredBudgetAmountMicros: 0n, biddableConversions: 0, biddableConversionsValue: 0, clicks: 0n, costMicros: 0n, impressions: 0n, topSlotImpressions: 0n, absoluteTopImpressions: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 target_impression_share_micros */ 1:
                    message.targetImpressionShareMicros = reader.int64().toBigInt();
                    break;
                case /* int64 required_cpc_bid_ceiling_micros */ 2:
                    message.requiredCpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* int64 required_budget_amount_micros */ 3:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* double biddable_conversions */ 4:
                    message.biddableConversions = reader.double();
                    break;
                case /* double biddable_conversions_value */ 5:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* int64 clicks */ 6:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* int64 cost_micros */ 7:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* int64 impressions */ 8:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* int64 top_slot_impressions */ 9:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* int64 absolute_top_impressions */ 10:
                    message.absoluteTopImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 target_impression_share_micros = 1; */
        if (message.targetImpressionShareMicros !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.targetImpressionShareMicros);
        /* int64 required_cpc_bid_ceiling_micros = 2; */
        if (message.requiredCpcBidCeilingMicros !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.requiredCpcBidCeilingMicros);
        /* int64 required_budget_amount_micros = 3; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* double biddable_conversions = 4; */
        if (message.biddableConversions !== 0)
            writer.tag(4, runtime_1.WireType.Bit64).double(message.biddableConversions);
        /* double biddable_conversions_value = 5; */
        if (message.biddableConversionsValue !== 0)
            writer.tag(5, runtime_1.WireType.Bit64).double(message.biddableConversionsValue);
        /* int64 clicks = 6; */
        if (message.clicks !== 0n)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.clicks);
        /* int64 cost_micros = 7; */
        if (message.costMicros !== 0n)
            writer.tag(7, runtime_1.WireType.Varint).int64(message.costMicros);
        /* int64 impressions = 8; */
        if (message.impressions !== 0n)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.impressions);
        /* int64 top_slot_impressions = 9; */
        if (message.topSlotImpressions !== 0n)
            writer.tag(9, runtime_1.WireType.Varint).int64(message.topSlotImpressions);
        /* int64 absolute_top_impressions = 10; */
        if (message.absoluteTopImpressions !== 0n)
            writer.tag(10, runtime_1.WireType.Varint).int64(message.absoluteTopImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint
 */
exports.TargetImpressionShareSimulationPoint = new TargetImpressionShareSimulationPoint$Type();
//# sourceMappingURL=simulation.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metrics = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const interaction_event_type_1 = require("../enums/interaction_event_type");
const quality_score_bucket_1 = require("../enums/quality_score_bucket");
// @generated message type with reflection information, may provide speed optimized methods
class Metrics$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.Metrics", [
            { no: 183, name: "absolute_top_impression_percentage", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 184, name: "active_view_cpm", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 185, name: "active_view_ctr", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 186, name: "active_view_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 187, name: "active_view_measurability", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 188, name: "active_view_measurable_cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 189, name: "active_view_measurable_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 190, name: "active_view_viewability", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 191, name: "all_conversions_from_interactions_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 192, name: "all_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 240, name: "all_conversions_value_by_conversion_date", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 193, name: "all_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 241, name: "all_conversions_by_conversion_date", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 194, name: "all_conversions_value_per_cost", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 195, name: "all_conversions_from_click_to_call", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 196, name: "all_conversions_from_directions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 197, name: "all_conversions_from_interactions_value_per_interaction", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 198, name: "all_conversions_from_menu", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 199, name: "all_conversions_from_order", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 200, name: "all_conversions_from_other_engagement", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 201, name: "all_conversions_from_store_visit", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 202, name: "all_conversions_from_store_website", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 258, name: "auction_insight_search_absolute_top_impression_percentage", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 259, name: "auction_insight_search_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 260, name: "auction_insight_search_outranking_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 261, name: "auction_insight_search_overlap_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 262, name: "auction_insight_search_position_above_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 263, name: "auction_insight_search_top_impression_percentage", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 203, name: "average_cost", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 204, name: "average_cpc", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 205, name: "average_cpe", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 206, name: "average_cpm", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 207, name: "average_cpv", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 208, name: "average_page_views", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 209, name: "average_time_on_site", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 210, name: "benchmark_average_max_cpc", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 254, name: "biddable_app_install_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 255, name: "biddable_app_post_install_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 211, name: "benchmark_ctr", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 212, name: "bounce_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 131, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 156, name: "combined_clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 157, name: "combined_clicks_per_query", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 158, name: "combined_queries", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 159, name: "content_budget_lost_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 160, name: "content_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 161, name: "conversion_last_received_request_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 162, name: "conversion_last_conversion_date", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 163, name: "content_rank_lost_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 164, name: "conversions_from_interactions_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 165, name: "conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 242, name: "conversions_value_by_conversion_date", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 166, name: "conversions_value_per_cost", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 167, name: "conversions_from_interactions_value_per_interaction", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 168, name: "conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 243, name: "conversions_by_conversion_date", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 169, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 170, name: "cost_per_all_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 171, name: "cost_per_conversion", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 172, name: "cost_per_current_model_attributed_conversion", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 173, name: "cross_device_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 174, name: "ctr", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 175, name: "current_model_attributed_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 176, name: "current_model_attributed_conversions_from_interactions_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 177, name: "current_model_attributed_conversions_from_interactions_value_per_interaction", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 178, name: "current_model_attributed_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 179, name: "current_model_attributed_conversions_value_per_cost", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 180, name: "engagement_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 181, name: "engagements", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 213, name: "hotel_average_lead_value_micros", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 256, name: "hotel_commission_rate_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 257, name: "hotel_expected_commission_cost", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 214, name: "hotel_price_difference_percentage", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 215, name: "hotel_eligible_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 80, name: "historical_creative_quality_score", kind: "enum", T: () => ["google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket", quality_score_bucket_1.QualityScoreBucketEnum_QualityScoreBucket] },
            { no: 81, name: "historical_landing_page_quality_score", kind: "enum", T: () => ["google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket", quality_score_bucket_1.QualityScoreBucketEnum_QualityScoreBucket] },
            { no: 216, name: "historical_quality_score", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 83, name: "historical_search_predicted_ctr", kind: "enum", T: () => ["google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket", quality_score_bucket_1.QualityScoreBucketEnum_QualityScoreBucket] },
            { no: 217, name: "gmail_forwards", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 218, name: "gmail_saves", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 219, name: "gmail_secondary_clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 220, name: "impressions_from_store_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 221, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 222, name: "interaction_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 223, name: "interactions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 100, name: "interaction_event_types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.InteractionEventTypeEnum.InteractionEventType", interaction_event_type_1.InteractionEventTypeEnum_InteractionEventType] },
            { no: 224, name: "invalid_click_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 225, name: "invalid_clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 226, name: "message_chats", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 227, name: "message_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 228, name: "message_chat_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 229, name: "mobile_friendly_clicks_percentage", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 247, name: "optimization_score_uplift", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 248, name: "optimization_score_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 230, name: "organic_clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 231, name: "organic_clicks_per_query", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 232, name: "organic_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 233, name: "organic_impressions_per_query", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 234, name: "organic_queries", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 235, name: "percent_new_visitors", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 236, name: "phone_calls", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 237, name: "phone_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 238, name: "phone_through_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 239, name: "relative_ctr", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 136, name: "search_absolute_top_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 137, name: "search_budget_lost_absolute_top_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 138, name: "search_budget_lost_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 139, name: "search_budget_lost_top_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 140, name: "search_click_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 141, name: "search_exact_match_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 142, name: "search_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 143, name: "search_rank_lost_absolute_top_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 144, name: "search_rank_lost_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 145, name: "search_rank_lost_top_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 146, name: "search_top_impression_share", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 147, name: "speed_score", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 148, name: "top_impression_percentage", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 149, name: "valid_accelerated_mobile_pages_clicks_percentage", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 150, name: "value_per_all_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 244, name: "value_per_all_conversions_by_conversion_date", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 151, name: "value_per_conversion", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 245, name: "value_per_conversions_by_conversion_date", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 152, name: "value_per_current_model_attributed_conversion", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 132, name: "video_quartile_p100_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 133, name: "video_quartile_p25_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 134, name: "video_quartile_p50_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 135, name: "video_quartile_p75_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 153, name: "video_view_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 154, name: "video_views", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 155, name: "view_through_conversions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 246, name: "sk_ad_network_conversions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { allConversionsValueByConversionDate: 0, allConversionsByConversionDate: 0, conversionsValueByConversionDate: 0, conversionsByConversionDate: 0, historicalCreativeQualityScore: 0, historicalLandingPageQualityScore: 0, historicalSearchPredictedCtr: 0, interactionEventTypes: [], skAdNetworkConversions: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double absolute_top_impression_percentage */ 183:
                    message.absoluteTopImpressionPercentage = reader.double();
                    break;
                case /* optional double active_view_cpm */ 184:
                    message.activeViewCpm = reader.double();
                    break;
                case /* optional double active_view_ctr */ 185:
                    message.activeViewCtr = reader.double();
                    break;
                case /* optional int64 active_view_impressions */ 186:
                    message.activeViewImpressions = reader.int64().toBigInt();
                    break;
                case /* optional double active_view_measurability */ 187:
                    message.activeViewMeasurability = reader.double();
                    break;
                case /* optional int64 active_view_measurable_cost_micros */ 188:
                    message.activeViewMeasurableCostMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 active_view_measurable_impressions */ 189:
                    message.activeViewMeasurableImpressions = reader.int64().toBigInt();
                    break;
                case /* optional double active_view_viewability */ 190:
                    message.activeViewViewability = reader.double();
                    break;
                case /* optional double all_conversions_from_interactions_rate */ 191:
                    message.allConversionsFromInteractionsRate = reader.double();
                    break;
                case /* optional double all_conversions_value */ 192:
                    message.allConversionsValue = reader.double();
                    break;
                case /* double all_conversions_value_by_conversion_date */ 240:
                    message.allConversionsValueByConversionDate = reader.double();
                    break;
                case /* optional double all_conversions */ 193:
                    message.allConversions = reader.double();
                    break;
                case /* double all_conversions_by_conversion_date */ 241:
                    message.allConversionsByConversionDate = reader.double();
                    break;
                case /* optional double all_conversions_value_per_cost */ 194:
                    message.allConversionsValuePerCost = reader.double();
                    break;
                case /* optional double all_conversions_from_click_to_call */ 195:
                    message.allConversionsFromClickToCall = reader.double();
                    break;
                case /* optional double all_conversions_from_directions */ 196:
                    message.allConversionsFromDirections = reader.double();
                    break;
                case /* optional double all_conversions_from_interactions_value_per_interaction */ 197:
                    message.allConversionsFromInteractionsValuePerInteraction = reader.double();
                    break;
                case /* optional double all_conversions_from_menu */ 198:
                    message.allConversionsFromMenu = reader.double();
                    break;
                case /* optional double all_conversions_from_order */ 199:
                    message.allConversionsFromOrder = reader.double();
                    break;
                case /* optional double all_conversions_from_other_engagement */ 200:
                    message.allConversionsFromOtherEngagement = reader.double();
                    break;
                case /* optional double all_conversions_from_store_visit */ 201:
                    message.allConversionsFromStoreVisit = reader.double();
                    break;
                case /* optional double all_conversions_from_store_website */ 202:
                    message.allConversionsFromStoreWebsite = reader.double();
                    break;
                case /* optional double auction_insight_search_absolute_top_impression_percentage */ 258:
                    message.auctionInsightSearchAbsoluteTopImpressionPercentage = reader.double();
                    break;
                case /* optional double auction_insight_search_impression_share */ 259:
                    message.auctionInsightSearchImpressionShare = reader.double();
                    break;
                case /* optional double auction_insight_search_outranking_share */ 260:
                    message.auctionInsightSearchOutrankingShare = reader.double();
                    break;
                case /* optional double auction_insight_search_overlap_rate */ 261:
                    message.auctionInsightSearchOverlapRate = reader.double();
                    break;
                case /* optional double auction_insight_search_position_above_rate */ 262:
                    message.auctionInsightSearchPositionAboveRate = reader.double();
                    break;
                case /* optional double auction_insight_search_top_impression_percentage */ 263:
                    message.auctionInsightSearchTopImpressionPercentage = reader.double();
                    break;
                case /* optional double average_cost */ 203:
                    message.averageCost = reader.double();
                    break;
                case /* optional double average_cpc */ 204:
                    message.averageCpc = reader.double();
                    break;
                case /* optional double average_cpe */ 205:
                    message.averageCpe = reader.double();
                    break;
                case /* optional double average_cpm */ 206:
                    message.averageCpm = reader.double();
                    break;
                case /* optional double average_cpv */ 207:
                    message.averageCpv = reader.double();
                    break;
                case /* optional double average_page_views */ 208:
                    message.averagePageViews = reader.double();
                    break;
                case /* optional double average_time_on_site */ 209:
                    message.averageTimeOnSite = reader.double();
                    break;
                case /* optional double benchmark_average_max_cpc */ 210:
                    message.benchmarkAverageMaxCpc = reader.double();
                    break;
                case /* optional double biddable_app_install_conversions */ 254:
                    message.biddableAppInstallConversions = reader.double();
                    break;
                case /* optional double biddable_app_post_install_conversions */ 255:
                    message.biddableAppPostInstallConversions = reader.double();
                    break;
                case /* optional double benchmark_ctr */ 211:
                    message.benchmarkCtr = reader.double();
                    break;
                case /* optional double bounce_rate */ 212:
                    message.bounceRate = reader.double();
                    break;
                case /* optional int64 clicks */ 131:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 combined_clicks */ 156:
                    message.combinedClicks = reader.int64().toBigInt();
                    break;
                case /* optional double combined_clicks_per_query */ 157:
                    message.combinedClicksPerQuery = reader.double();
                    break;
                case /* optional int64 combined_queries */ 158:
                    message.combinedQueries = reader.int64().toBigInt();
                    break;
                case /* optional double content_budget_lost_impression_share */ 159:
                    message.contentBudgetLostImpressionShare = reader.double();
                    break;
                case /* optional double content_impression_share */ 160:
                    message.contentImpressionShare = reader.double();
                    break;
                case /* optional string conversion_last_received_request_date_time */ 161:
                    message.conversionLastReceivedRequestDateTime = reader.string();
                    break;
                case /* optional string conversion_last_conversion_date */ 162:
                    message.conversionLastConversionDate = reader.string();
                    break;
                case /* optional double content_rank_lost_impression_share */ 163:
                    message.contentRankLostImpressionShare = reader.double();
                    break;
                case /* optional double conversions_from_interactions_rate */ 164:
                    message.conversionsFromInteractionsRate = reader.double();
                    break;
                case /* optional double conversions_value */ 165:
                    message.conversionsValue = reader.double();
                    break;
                case /* double conversions_value_by_conversion_date */ 242:
                    message.conversionsValueByConversionDate = reader.double();
                    break;
                case /* optional double conversions_value_per_cost */ 166:
                    message.conversionsValuePerCost = reader.double();
                    break;
                case /* optional double conversions_from_interactions_value_per_interaction */ 167:
                    message.conversionsFromInteractionsValuePerInteraction = reader.double();
                    break;
                case /* optional double conversions */ 168:
                    message.conversions = reader.double();
                    break;
                case /* double conversions_by_conversion_date */ 243:
                    message.conversionsByConversionDate = reader.double();
                    break;
                case /* optional int64 cost_micros */ 169:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional double cost_per_all_conversions */ 170:
                    message.costPerAllConversions = reader.double();
                    break;
                case /* optional double cost_per_conversion */ 171:
                    message.costPerConversion = reader.double();
                    break;
                case /* optional double cost_per_current_model_attributed_conversion */ 172:
                    message.costPerCurrentModelAttributedConversion = reader.double();
                    break;
                case /* optional double cross_device_conversions */ 173:
                    message.crossDeviceConversions = reader.double();
                    break;
                case /* optional double ctr */ 174:
                    message.ctr = reader.double();
                    break;
                case /* optional double current_model_attributed_conversions */ 175:
                    message.currentModelAttributedConversions = reader.double();
                    break;
                case /* optional double current_model_attributed_conversions_from_interactions_rate */ 176:
                    message.currentModelAttributedConversionsFromInteractionsRate = reader.double();
                    break;
                case /* optional double current_model_attributed_conversions_from_interactions_value_per_interaction */ 177:
                    message.currentModelAttributedConversionsFromInteractionsValuePerInteraction = reader.double();
                    break;
                case /* optional double current_model_attributed_conversions_value */ 178:
                    message.currentModelAttributedConversionsValue = reader.double();
                    break;
                case /* optional double current_model_attributed_conversions_value_per_cost */ 179:
                    message.currentModelAttributedConversionsValuePerCost = reader.double();
                    break;
                case /* optional double engagement_rate */ 180:
                    message.engagementRate = reader.double();
                    break;
                case /* optional int64 engagements */ 181:
                    message.engagements = reader.int64().toBigInt();
                    break;
                case /* optional double hotel_average_lead_value_micros */ 213:
                    message.hotelAverageLeadValueMicros = reader.double();
                    break;
                case /* optional int64 hotel_commission_rate_micros */ 256:
                    message.hotelCommissionRateMicros = reader.int64().toBigInt();
                    break;
                case /* optional double hotel_expected_commission_cost */ 257:
                    message.hotelExpectedCommissionCost = reader.double();
                    break;
                case /* optional double hotel_price_difference_percentage */ 214:
                    message.hotelPriceDifferencePercentage = reader.double();
                    break;
                case /* optional int64 hotel_eligible_impressions */ 215:
                    message.hotelEligibleImpressions = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score */ 80:
                    message.historicalCreativeQualityScore = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score */ 81:
                    message.historicalLandingPageQualityScore = reader.int32();
                    break;
                case /* optional int64 historical_quality_score */ 216:
                    message.historicalQualityScore = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr */ 83:
                    message.historicalSearchPredictedCtr = reader.int32();
                    break;
                case /* optional int64 gmail_forwards */ 217:
                    message.gmailForwards = reader.int64().toBigInt();
                    break;
                case /* optional int64 gmail_saves */ 218:
                    message.gmailSaves = reader.int64().toBigInt();
                    break;
                case /* optional int64 gmail_secondary_clicks */ 219:
                    message.gmailSecondaryClicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions_from_store_reach */ 220:
                    message.impressionsFromStoreReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 221:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional double interaction_rate */ 222:
                    message.interactionRate = reader.double();
                    break;
                case /* optional int64 interactions */ 223:
                    message.interactions = reader.int64().toBigInt();
                    break;
                case /* repeated google.ads.googleads.v11.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types */ 100:
                    if (wireType === runtime_2.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.interactionEventTypes.push(reader.int32());
                    else
                        message.interactionEventTypes.push(reader.int32());
                    break;
                case /* optional double invalid_click_rate */ 224:
                    message.invalidClickRate = reader.double();
                    break;
                case /* optional int64 invalid_clicks */ 225:
                    message.invalidClicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 message_chats */ 226:
                    message.messageChats = reader.int64().toBigInt();
                    break;
                case /* optional int64 message_impressions */ 227:
                    message.messageImpressions = reader.int64().toBigInt();
                    break;
                case /* optional double message_chat_rate */ 228:
                    message.messageChatRate = reader.double();
                    break;
                case /* optional double mobile_friendly_clicks_percentage */ 229:
                    message.mobileFriendlyClicksPercentage = reader.double();
                    break;
                case /* optional double optimization_score_uplift */ 247:
                    message.optimizationScoreUplift = reader.double();
                    break;
                case /* optional string optimization_score_url */ 248:
                    message.optimizationScoreUrl = reader.string();
                    break;
                case /* optional int64 organic_clicks */ 230:
                    message.organicClicks = reader.int64().toBigInt();
                    break;
                case /* optional double organic_clicks_per_query */ 231:
                    message.organicClicksPerQuery = reader.double();
                    break;
                case /* optional int64 organic_impressions */ 232:
                    message.organicImpressions = reader.int64().toBigInt();
                    break;
                case /* optional double organic_impressions_per_query */ 233:
                    message.organicImpressionsPerQuery = reader.double();
                    break;
                case /* optional int64 organic_queries */ 234:
                    message.organicQueries = reader.int64().toBigInt();
                    break;
                case /* optional double percent_new_visitors */ 235:
                    message.percentNewVisitors = reader.double();
                    break;
                case /* optional int64 phone_calls */ 236:
                    message.phoneCalls = reader.int64().toBigInt();
                    break;
                case /* optional int64 phone_impressions */ 237:
                    message.phoneImpressions = reader.int64().toBigInt();
                    break;
                case /* optional double phone_through_rate */ 238:
                    message.phoneThroughRate = reader.double();
                    break;
                case /* optional double relative_ctr */ 239:
                    message.relativeCtr = reader.double();
                    break;
                case /* optional double search_absolute_top_impression_share */ 136:
                    message.searchAbsoluteTopImpressionShare = reader.double();
                    break;
                case /* optional double search_budget_lost_absolute_top_impression_share */ 137:
                    message.searchBudgetLostAbsoluteTopImpressionShare = reader.double();
                    break;
                case /* optional double search_budget_lost_impression_share */ 138:
                    message.searchBudgetLostImpressionShare = reader.double();
                    break;
                case /* optional double search_budget_lost_top_impression_share */ 139:
                    message.searchBudgetLostTopImpressionShare = reader.double();
                    break;
                case /* optional double search_click_share */ 140:
                    message.searchClickShare = reader.double();
                    break;
                case /* optional double search_exact_match_impression_share */ 141:
                    message.searchExactMatchImpressionShare = reader.double();
                    break;
                case /* optional double search_impression_share */ 142:
                    message.searchImpressionShare = reader.double();
                    break;
                case /* optional double search_rank_lost_absolute_top_impression_share */ 143:
                    message.searchRankLostAbsoluteTopImpressionShare = reader.double();
                    break;
                case /* optional double search_rank_lost_impression_share */ 144:
                    message.searchRankLostImpressionShare = reader.double();
                    break;
                case /* optional double search_rank_lost_top_impression_share */ 145:
                    message.searchRankLostTopImpressionShare = reader.double();
                    break;
                case /* optional double search_top_impression_share */ 146:
                    message.searchTopImpressionShare = reader.double();
                    break;
                case /* optional int64 speed_score */ 147:
                    message.speedScore = reader.int64().toBigInt();
                    break;
                case /* optional double top_impression_percentage */ 148:
                    message.topImpressionPercentage = reader.double();
                    break;
                case /* optional double valid_accelerated_mobile_pages_clicks_percentage */ 149:
                    message.validAcceleratedMobilePagesClicksPercentage = reader.double();
                    break;
                case /* optional double value_per_all_conversions */ 150:
                    message.valuePerAllConversions = reader.double();
                    break;
                case /* optional double value_per_all_conversions_by_conversion_date */ 244:
                    message.valuePerAllConversionsByConversionDate = reader.double();
                    break;
                case /* optional double value_per_conversion */ 151:
                    message.valuePerConversion = reader.double();
                    break;
                case /* optional double value_per_conversions_by_conversion_date */ 245:
                    message.valuePerConversionsByConversionDate = reader.double();
                    break;
                case /* optional double value_per_current_model_attributed_conversion */ 152:
                    message.valuePerCurrentModelAttributedConversion = reader.double();
                    break;
                case /* optional double video_quartile_p100_rate */ 132:
                    message.videoQuartileP100Rate = reader.double();
                    break;
                case /* optional double video_quartile_p25_rate */ 133:
                    message.videoQuartileP25Rate = reader.double();
                    break;
                case /* optional double video_quartile_p50_rate */ 134:
                    message.videoQuartileP50Rate = reader.double();
                    break;
                case /* optional double video_quartile_p75_rate */ 135:
                    message.videoQuartileP75Rate = reader.double();
                    break;
                case /* optional double video_view_rate */ 153:
                    message.videoViewRate = reader.double();
                    break;
                case /* optional int64 video_views */ 154:
                    message.videoViews = reader.int64().toBigInt();
                    break;
                case /* optional int64 view_through_conversions */ 155:
                    message.viewThroughConversions = reader.int64().toBigInt();
                    break;
                case /* int64 sk_ad_network_conversions */ 246:
                    message.skAdNetworkConversions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_1.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional double absolute_top_impression_percentage = 183; */
        if (message.absoluteTopImpressionPercentage !== undefined)
            writer.tag(183, runtime_2.WireType.Bit64).double(message.absoluteTopImpressionPercentage);
        /* optional double active_view_cpm = 184; */
        if (message.activeViewCpm !== undefined)
            writer.tag(184, runtime_2.WireType.Bit64).double(message.activeViewCpm);
        /* optional double active_view_ctr = 185; */
        if (message.activeViewCtr !== undefined)
            writer.tag(185, runtime_2.WireType.Bit64).double(message.activeViewCtr);
        /* optional int64 active_view_impressions = 186; */
        if (message.activeViewImpressions !== undefined)
            writer.tag(186, runtime_2.WireType.Varint).int64(message.activeViewImpressions);
        /* optional double active_view_measurability = 187; */
        if (message.activeViewMeasurability !== undefined)
            writer.tag(187, runtime_2.WireType.Bit64).double(message.activeViewMeasurability);
        /* optional int64 active_view_measurable_cost_micros = 188; */
        if (message.activeViewMeasurableCostMicros !== undefined)
            writer.tag(188, runtime_2.WireType.Varint).int64(message.activeViewMeasurableCostMicros);
        /* optional int64 active_view_measurable_impressions = 189; */
        if (message.activeViewMeasurableImpressions !== undefined)
            writer.tag(189, runtime_2.WireType.Varint).int64(message.activeViewMeasurableImpressions);
        /* optional double active_view_viewability = 190; */
        if (message.activeViewViewability !== undefined)
            writer.tag(190, runtime_2.WireType.Bit64).double(message.activeViewViewability);
        /* optional double all_conversions_from_interactions_rate = 191; */
        if (message.allConversionsFromInteractionsRate !== undefined)
            writer.tag(191, runtime_2.WireType.Bit64).double(message.allConversionsFromInteractionsRate);
        /* optional double all_conversions_value = 192; */
        if (message.allConversionsValue !== undefined)
            writer.tag(192, runtime_2.WireType.Bit64).double(message.allConversionsValue);
        /* double all_conversions_value_by_conversion_date = 240; */
        if (message.allConversionsValueByConversionDate !== 0)
            writer.tag(240, runtime_2.WireType.Bit64).double(message.allConversionsValueByConversionDate);
        /* optional double all_conversions = 193; */
        if (message.allConversions !== undefined)
            writer.tag(193, runtime_2.WireType.Bit64).double(message.allConversions);
        /* double all_conversions_by_conversion_date = 241; */
        if (message.allConversionsByConversionDate !== 0)
            writer.tag(241, runtime_2.WireType.Bit64).double(message.allConversionsByConversionDate);
        /* optional double all_conversions_value_per_cost = 194; */
        if (message.allConversionsValuePerCost !== undefined)
            writer.tag(194, runtime_2.WireType.Bit64).double(message.allConversionsValuePerCost);
        /* optional double all_conversions_from_click_to_call = 195; */
        if (message.allConversionsFromClickToCall !== undefined)
            writer.tag(195, runtime_2.WireType.Bit64).double(message.allConversionsFromClickToCall);
        /* optional double all_conversions_from_directions = 196; */
        if (message.allConversionsFromDirections !== undefined)
            writer.tag(196, runtime_2.WireType.Bit64).double(message.allConversionsFromDirections);
        /* optional double all_conversions_from_interactions_value_per_interaction = 197; */
        if (message.allConversionsFromInteractionsValuePerInteraction !== undefined)
            writer.tag(197, runtime_2.WireType.Bit64).double(message.allConversionsFromInteractionsValuePerInteraction);
        /* optional double all_conversions_from_menu = 198; */
        if (message.allConversionsFromMenu !== undefined)
            writer.tag(198, runtime_2.WireType.Bit64).double(message.allConversionsFromMenu);
        /* optional double all_conversions_from_order = 199; */
        if (message.allConversionsFromOrder !== undefined)
            writer.tag(199, runtime_2.WireType.Bit64).double(message.allConversionsFromOrder);
        /* optional double all_conversions_from_other_engagement = 200; */
        if (message.allConversionsFromOtherEngagement !== undefined)
            writer.tag(200, runtime_2.WireType.Bit64).double(message.allConversionsFromOtherEngagement);
        /* optional double all_conversions_from_store_visit = 201; */
        if (message.allConversionsFromStoreVisit !== undefined)
            writer.tag(201, runtime_2.WireType.Bit64).double(message.allConversionsFromStoreVisit);
        /* optional double all_conversions_from_store_website = 202; */
        if (message.allConversionsFromStoreWebsite !== undefined)
            writer.tag(202, runtime_2.WireType.Bit64).double(message.allConversionsFromStoreWebsite);
        /* optional double auction_insight_search_absolute_top_impression_percentage = 258; */
        if (message.auctionInsightSearchAbsoluteTopImpressionPercentage !== undefined)
            writer.tag(258, runtime_2.WireType.Bit64).double(message.auctionInsightSearchAbsoluteTopImpressionPercentage);
        /* optional double auction_insight_search_impression_share = 259; */
        if (message.auctionInsightSearchImpressionShare !== undefined)
            writer.tag(259, runtime_2.WireType.Bit64).double(message.auctionInsightSearchImpressionShare);
        /* optional double auction_insight_search_outranking_share = 260; */
        if (message.auctionInsightSearchOutrankingShare !== undefined)
            writer.tag(260, runtime_2.WireType.Bit64).double(message.auctionInsightSearchOutrankingShare);
        /* optional double auction_insight_search_overlap_rate = 261; */
        if (message.auctionInsightSearchOverlapRate !== undefined)
            writer.tag(261, runtime_2.WireType.Bit64).double(message.auctionInsightSearchOverlapRate);
        /* optional double auction_insight_search_position_above_rate = 262; */
        if (message.auctionInsightSearchPositionAboveRate !== undefined)
            writer.tag(262, runtime_2.WireType.Bit64).double(message.auctionInsightSearchPositionAboveRate);
        /* optional double auction_insight_search_top_impression_percentage = 263; */
        if (message.auctionInsightSearchTopImpressionPercentage !== undefined)
            writer.tag(263, runtime_2.WireType.Bit64).double(message.auctionInsightSearchTopImpressionPercentage);
        /* optional double average_cost = 203; */
        if (message.averageCost !== undefined)
            writer.tag(203, runtime_2.WireType.Bit64).double(message.averageCost);
        /* optional double average_cpc = 204; */
        if (message.averageCpc !== undefined)
            writer.tag(204, runtime_2.WireType.Bit64).double(message.averageCpc);
        /* optional double average_cpe = 205; */
        if (message.averageCpe !== undefined)
            writer.tag(205, runtime_2.WireType.Bit64).double(message.averageCpe);
        /* optional double average_cpm = 206; */
        if (message.averageCpm !== undefined)
            writer.tag(206, runtime_2.WireType.Bit64).double(message.averageCpm);
        /* optional double average_cpv = 207; */
        if (message.averageCpv !== undefined)
            writer.tag(207, runtime_2.WireType.Bit64).double(message.averageCpv);
        /* optional double average_page_views = 208; */
        if (message.averagePageViews !== undefined)
            writer.tag(208, runtime_2.WireType.Bit64).double(message.averagePageViews);
        /* optional double average_time_on_site = 209; */
        if (message.averageTimeOnSite !== undefined)
            writer.tag(209, runtime_2.WireType.Bit64).double(message.averageTimeOnSite);
        /* optional double benchmark_average_max_cpc = 210; */
        if (message.benchmarkAverageMaxCpc !== undefined)
            writer.tag(210, runtime_2.WireType.Bit64).double(message.benchmarkAverageMaxCpc);
        /* optional double biddable_app_install_conversions = 254; */
        if (message.biddableAppInstallConversions !== undefined)
            writer.tag(254, runtime_2.WireType.Bit64).double(message.biddableAppInstallConversions);
        /* optional double biddable_app_post_install_conversions = 255; */
        if (message.biddableAppPostInstallConversions !== undefined)
            writer.tag(255, runtime_2.WireType.Bit64).double(message.biddableAppPostInstallConversions);
        /* optional double benchmark_ctr = 211; */
        if (message.benchmarkCtr !== undefined)
            writer.tag(211, runtime_2.WireType.Bit64).double(message.benchmarkCtr);
        /* optional double bounce_rate = 212; */
        if (message.bounceRate !== undefined)
            writer.tag(212, runtime_2.WireType.Bit64).double(message.bounceRate);
        /* optional int64 clicks = 131; */
        if (message.clicks !== undefined)
            writer.tag(131, runtime_2.WireType.Varint).int64(message.clicks);
        /* optional int64 combined_clicks = 156; */
        if (message.combinedClicks !== undefined)
            writer.tag(156, runtime_2.WireType.Varint).int64(message.combinedClicks);
        /* optional double combined_clicks_per_query = 157; */
        if (message.combinedClicksPerQuery !== undefined)
            writer.tag(157, runtime_2.WireType.Bit64).double(message.combinedClicksPerQuery);
        /* optional int64 combined_queries = 158; */
        if (message.combinedQueries !== undefined)
            writer.tag(158, runtime_2.WireType.Varint).int64(message.combinedQueries);
        /* optional double content_budget_lost_impression_share = 159; */
        if (message.contentBudgetLostImpressionShare !== undefined)
            writer.tag(159, runtime_2.WireType.Bit64).double(message.contentBudgetLostImpressionShare);
        /* optional double content_impression_share = 160; */
        if (message.contentImpressionShare !== undefined)
            writer.tag(160, runtime_2.WireType.Bit64).double(message.contentImpressionShare);
        /* optional string conversion_last_received_request_date_time = 161; */
        if (message.conversionLastReceivedRequestDateTime !== undefined)
            writer.tag(161, runtime_2.WireType.LengthDelimited).string(message.conversionLastReceivedRequestDateTime);
        /* optional string conversion_last_conversion_date = 162; */
        if (message.conversionLastConversionDate !== undefined)
            writer.tag(162, runtime_2.WireType.LengthDelimited).string(message.conversionLastConversionDate);
        /* optional double content_rank_lost_impression_share = 163; */
        if (message.contentRankLostImpressionShare !== undefined)
            writer.tag(163, runtime_2.WireType.Bit64).double(message.contentRankLostImpressionShare);
        /* optional double conversions_from_interactions_rate = 164; */
        if (message.conversionsFromInteractionsRate !== undefined)
            writer.tag(164, runtime_2.WireType.Bit64).double(message.conversionsFromInteractionsRate);
        /* optional double conversions_value = 165; */
        if (message.conversionsValue !== undefined)
            writer.tag(165, runtime_2.WireType.Bit64).double(message.conversionsValue);
        /* double conversions_value_by_conversion_date = 242; */
        if (message.conversionsValueByConversionDate !== 0)
            writer.tag(242, runtime_2.WireType.Bit64).double(message.conversionsValueByConversionDate);
        /* optional double conversions_value_per_cost = 166; */
        if (message.conversionsValuePerCost !== undefined)
            writer.tag(166, runtime_2.WireType.Bit64).double(message.conversionsValuePerCost);
        /* optional double conversions_from_interactions_value_per_interaction = 167; */
        if (message.conversionsFromInteractionsValuePerInteraction !== undefined)
            writer.tag(167, runtime_2.WireType.Bit64).double(message.conversionsFromInteractionsValuePerInteraction);
        /* optional double conversions = 168; */
        if (message.conversions !== undefined)
            writer.tag(168, runtime_2.WireType.Bit64).double(message.conversions);
        /* double conversions_by_conversion_date = 243; */
        if (message.conversionsByConversionDate !== 0)
            writer.tag(243, runtime_2.WireType.Bit64).double(message.conversionsByConversionDate);
        /* optional int64 cost_micros = 169; */
        if (message.costMicros !== undefined)
            writer.tag(169, runtime_2.WireType.Varint).int64(message.costMicros);
        /* optional double cost_per_all_conversions = 170; */
        if (message.costPerAllConversions !== undefined)
            writer.tag(170, runtime_2.WireType.Bit64).double(message.costPerAllConversions);
        /* optional double cost_per_conversion = 171; */
        if (message.costPerConversion !== undefined)
            writer.tag(171, runtime_2.WireType.Bit64).double(message.costPerConversion);
        /* optional double cost_per_current_model_attributed_conversion = 172; */
        if (message.costPerCurrentModelAttributedConversion !== undefined)
            writer.tag(172, runtime_2.WireType.Bit64).double(message.costPerCurrentModelAttributedConversion);
        /* optional double cross_device_conversions = 173; */
        if (message.crossDeviceConversions !== undefined)
            writer.tag(173, runtime_2.WireType.Bit64).double(message.crossDeviceConversions);
        /* optional double ctr = 174; */
        if (message.ctr !== undefined)
            writer.tag(174, runtime_2.WireType.Bit64).double(message.ctr);
        /* optional double current_model_attributed_conversions = 175; */
        if (message.currentModelAttributedConversions !== undefined)
            writer.tag(175, runtime_2.WireType.Bit64).double(message.currentModelAttributedConversions);
        /* optional double current_model_attributed_conversions_from_interactions_rate = 176; */
        if (message.currentModelAttributedConversionsFromInteractionsRate !== undefined)
            writer.tag(176, runtime_2.WireType.Bit64).double(message.currentModelAttributedConversionsFromInteractionsRate);
        /* optional double current_model_attributed_conversions_from_interactions_value_per_interaction = 177; */
        if (message.currentModelAttributedConversionsFromInteractionsValuePerInteraction !== undefined)
            writer.tag(177, runtime_2.WireType.Bit64).double(message.currentModelAttributedConversionsFromInteractionsValuePerInteraction);
        /* optional double current_model_attributed_conversions_value = 178; */
        if (message.currentModelAttributedConversionsValue !== undefined)
            writer.tag(178, runtime_2.WireType.Bit64).double(message.currentModelAttributedConversionsValue);
        /* optional double current_model_attributed_conversions_value_per_cost = 179; */
        if (message.currentModelAttributedConversionsValuePerCost !== undefined)
            writer.tag(179, runtime_2.WireType.Bit64).double(message.currentModelAttributedConversionsValuePerCost);
        /* optional double engagement_rate = 180; */
        if (message.engagementRate !== undefined)
            writer.tag(180, runtime_2.WireType.Bit64).double(message.engagementRate);
        /* optional int64 engagements = 181; */
        if (message.engagements !== undefined)
            writer.tag(181, runtime_2.WireType.Varint).int64(message.engagements);
        /* optional double hotel_average_lead_value_micros = 213; */
        if (message.hotelAverageLeadValueMicros !== undefined)
            writer.tag(213, runtime_2.WireType.Bit64).double(message.hotelAverageLeadValueMicros);
        /* optional int64 hotel_commission_rate_micros = 256; */
        if (message.hotelCommissionRateMicros !== undefined)
            writer.tag(256, runtime_2.WireType.Varint).int64(message.hotelCommissionRateMicros);
        /* optional double hotel_expected_commission_cost = 257; */
        if (message.hotelExpectedCommissionCost !== undefined)
            writer.tag(257, runtime_2.WireType.Bit64).double(message.hotelExpectedCommissionCost);
        /* optional double hotel_price_difference_percentage = 214; */
        if (message.hotelPriceDifferencePercentage !== undefined)
            writer.tag(214, runtime_2.WireType.Bit64).double(message.hotelPriceDifferencePercentage);
        /* optional int64 hotel_eligible_impressions = 215; */
        if (message.hotelEligibleImpressions !== undefined)
            writer.tag(215, runtime_2.WireType.Varint).int64(message.hotelEligibleImpressions);
        /* google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80; */
        if (message.historicalCreativeQualityScore !== 0)
            writer.tag(80, runtime_2.WireType.Varint).int32(message.historicalCreativeQualityScore);
        /* google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81; */
        if (message.historicalLandingPageQualityScore !== 0)
            writer.tag(81, runtime_2.WireType.Varint).int32(message.historicalLandingPageQualityScore);
        /* optional int64 historical_quality_score = 216; */
        if (message.historicalQualityScore !== undefined)
            writer.tag(216, runtime_2.WireType.Varint).int64(message.historicalQualityScore);
        /* google.ads.googleads.v11.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83; */
        if (message.historicalSearchPredictedCtr !== 0)
            writer.tag(83, runtime_2.WireType.Varint).int32(message.historicalSearchPredictedCtr);
        /* optional int64 gmail_forwards = 217; */
        if (message.gmailForwards !== undefined)
            writer.tag(217, runtime_2.WireType.Varint).int64(message.gmailForwards);
        /* optional int64 gmail_saves = 218; */
        if (message.gmailSaves !== undefined)
            writer.tag(218, runtime_2.WireType.Varint).int64(message.gmailSaves);
        /* optional int64 gmail_secondary_clicks = 219; */
        if (message.gmailSecondaryClicks !== undefined)
            writer.tag(219, runtime_2.WireType.Varint).int64(message.gmailSecondaryClicks);
        /* optional int64 impressions_from_store_reach = 220; */
        if (message.impressionsFromStoreReach !== undefined)
            writer.tag(220, runtime_2.WireType.Varint).int64(message.impressionsFromStoreReach);
        /* optional int64 impressions = 221; */
        if (message.impressions !== undefined)
            writer.tag(221, runtime_2.WireType.Varint).int64(message.impressions);
        /* optional double interaction_rate = 222; */
        if (message.interactionRate !== undefined)
            writer.tag(222, runtime_2.WireType.Bit64).double(message.interactionRate);
        /* optional int64 interactions = 223; */
        if (message.interactions !== undefined)
            writer.tag(223, runtime_2.WireType.Varint).int64(message.interactions);
        /* repeated google.ads.googleads.v11.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100; */
        if (message.interactionEventTypes.length) {
            writer.tag(100, runtime_2.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.interactionEventTypes.length; i++)
                writer.int32(message.interactionEventTypes[i]);
            writer.join();
        }
        /* optional double invalid_click_rate = 224; */
        if (message.invalidClickRate !== undefined)
            writer.tag(224, runtime_2.WireType.Bit64).double(message.invalidClickRate);
        /* optional int64 invalid_clicks = 225; */
        if (message.invalidClicks !== undefined)
            writer.tag(225, runtime_2.WireType.Varint).int64(message.invalidClicks);
        /* optional int64 message_chats = 226; */
        if (message.messageChats !== undefined)
            writer.tag(226, runtime_2.WireType.Varint).int64(message.messageChats);
        /* optional int64 message_impressions = 227; */
        if (message.messageImpressions !== undefined)
            writer.tag(227, runtime_2.WireType.Varint).int64(message.messageImpressions);
        /* optional double message_chat_rate = 228; */
        if (message.messageChatRate !== undefined)
            writer.tag(228, runtime_2.WireType.Bit64).double(message.messageChatRate);
        /* optional double mobile_friendly_clicks_percentage = 229; */
        if (message.mobileFriendlyClicksPercentage !== undefined)
            writer.tag(229, runtime_2.WireType.Bit64).double(message.mobileFriendlyClicksPercentage);
        /* optional double optimization_score_uplift = 247; */
        if (message.optimizationScoreUplift !== undefined)
            writer.tag(247, runtime_2.WireType.Bit64).double(message.optimizationScoreUplift);
        /* optional string optimization_score_url = 248; */
        if (message.optimizationScoreUrl !== undefined)
            writer.tag(248, runtime_2.WireType.LengthDelimited).string(message.optimizationScoreUrl);
        /* optional int64 organic_clicks = 230; */
        if (message.organicClicks !== undefined)
            writer.tag(230, runtime_2.WireType.Varint).int64(message.organicClicks);
        /* optional double organic_clicks_per_query = 231; */
        if (message.organicClicksPerQuery !== undefined)
            writer.tag(231, runtime_2.WireType.Bit64).double(message.organicClicksPerQuery);
        /* optional int64 organic_impressions = 232; */
        if (message.organicImpressions !== undefined)
            writer.tag(232, runtime_2.WireType.Varint).int64(message.organicImpressions);
        /* optional double organic_impressions_per_query = 233; */
        if (message.organicImpressionsPerQuery !== undefined)
            writer.tag(233, runtime_2.WireType.Bit64).double(message.organicImpressionsPerQuery);
        /* optional int64 organic_queries = 234; */
        if (message.organicQueries !== undefined)
            writer.tag(234, runtime_2.WireType.Varint).int64(message.organicQueries);
        /* optional double percent_new_visitors = 235; */
        if (message.percentNewVisitors !== undefined)
            writer.tag(235, runtime_2.WireType.Bit64).double(message.percentNewVisitors);
        /* optional int64 phone_calls = 236; */
        if (message.phoneCalls !== undefined)
            writer.tag(236, runtime_2.WireType.Varint).int64(message.phoneCalls);
        /* optional int64 phone_impressions = 237; */
        if (message.phoneImpressions !== undefined)
            writer.tag(237, runtime_2.WireType.Varint).int64(message.phoneImpressions);
        /* optional double phone_through_rate = 238; */
        if (message.phoneThroughRate !== undefined)
            writer.tag(238, runtime_2.WireType.Bit64).double(message.phoneThroughRate);
        /* optional double relative_ctr = 239; */
        if (message.relativeCtr !== undefined)
            writer.tag(239, runtime_2.WireType.Bit64).double(message.relativeCtr);
        /* optional double search_absolute_top_impression_share = 136; */
        if (message.searchAbsoluteTopImpressionShare !== undefined)
            writer.tag(136, runtime_2.WireType.Bit64).double(message.searchAbsoluteTopImpressionShare);
        /* optional double search_budget_lost_absolute_top_impression_share = 137; */
        if (message.searchBudgetLostAbsoluteTopImpressionShare !== undefined)
            writer.tag(137, runtime_2.WireType.Bit64).double(message.searchBudgetLostAbsoluteTopImpressionShare);
        /* optional double search_budget_lost_impression_share = 138; */
        if (message.searchBudgetLostImpressionShare !== undefined)
            writer.tag(138, runtime_2.WireType.Bit64).double(message.searchBudgetLostImpressionShare);
        /* optional double search_budget_lost_top_impression_share = 139; */
        if (message.searchBudgetLostTopImpressionShare !== undefined)
            writer.tag(139, runtime_2.WireType.Bit64).double(message.searchBudgetLostTopImpressionShare);
        /* optional double search_click_share = 140; */
        if (message.searchClickShare !== undefined)
            writer.tag(140, runtime_2.WireType.Bit64).double(message.searchClickShare);
        /* optional double search_exact_match_impression_share = 141; */
        if (message.searchExactMatchImpressionShare !== undefined)
            writer.tag(141, runtime_2.WireType.Bit64).double(message.searchExactMatchImpressionShare);
        /* optional double search_impression_share = 142; */
        if (message.searchImpressionShare !== undefined)
            writer.tag(142, runtime_2.WireType.Bit64).double(message.searchImpressionShare);
        /* optional double search_rank_lost_absolute_top_impression_share = 143; */
        if (message.searchRankLostAbsoluteTopImpressionShare !== undefined)
            writer.tag(143, runtime_2.WireType.Bit64).double(message.searchRankLostAbsoluteTopImpressionShare);
        /* optional double search_rank_lost_impression_share = 144; */
        if (message.searchRankLostImpressionShare !== undefined)
            writer.tag(144, runtime_2.WireType.Bit64).double(message.searchRankLostImpressionShare);
        /* optional double search_rank_lost_top_impression_share = 145; */
        if (message.searchRankLostTopImpressionShare !== undefined)
            writer.tag(145, runtime_2.WireType.Bit64).double(message.searchRankLostTopImpressionShare);
        /* optional double search_top_impression_share = 146; */
        if (message.searchTopImpressionShare !== undefined)
            writer.tag(146, runtime_2.WireType.Bit64).double(message.searchTopImpressionShare);
        /* optional int64 speed_score = 147; */
        if (message.speedScore !== undefined)
            writer.tag(147, runtime_2.WireType.Varint).int64(message.speedScore);
        /* optional double top_impression_percentage = 148; */
        if (message.topImpressionPercentage !== undefined)
            writer.tag(148, runtime_2.WireType.Bit64).double(message.topImpressionPercentage);
        /* optional double valid_accelerated_mobile_pages_clicks_percentage = 149; */
        if (message.validAcceleratedMobilePagesClicksPercentage !== undefined)
            writer.tag(149, runtime_2.WireType.Bit64).double(message.validAcceleratedMobilePagesClicksPercentage);
        /* optional double value_per_all_conversions = 150; */
        if (message.valuePerAllConversions !== undefined)
            writer.tag(150, runtime_2.WireType.Bit64).double(message.valuePerAllConversions);
        /* optional double value_per_all_conversions_by_conversion_date = 244; */
        if (message.valuePerAllConversionsByConversionDate !== undefined)
            writer.tag(244, runtime_2.WireType.Bit64).double(message.valuePerAllConversionsByConversionDate);
        /* optional double value_per_conversion = 151; */
        if (message.valuePerConversion !== undefined)
            writer.tag(151, runtime_2.WireType.Bit64).double(message.valuePerConversion);
        /* optional double value_per_conversions_by_conversion_date = 245; */
        if (message.valuePerConversionsByConversionDate !== undefined)
            writer.tag(245, runtime_2.WireType.Bit64).double(message.valuePerConversionsByConversionDate);
        /* optional double value_per_current_model_attributed_conversion = 152; */
        if (message.valuePerCurrentModelAttributedConversion !== undefined)
            writer.tag(152, runtime_2.WireType.Bit64).double(message.valuePerCurrentModelAttributedConversion);
        /* optional double video_quartile_p100_rate = 132; */
        if (message.videoQuartileP100Rate !== undefined)
            writer.tag(132, runtime_2.WireType.Bit64).double(message.videoQuartileP100Rate);
        /* optional double video_quartile_p25_rate = 133; */
        if (message.videoQuartileP25Rate !== undefined)
            writer.tag(133, runtime_2.WireType.Bit64).double(message.videoQuartileP25Rate);
        /* optional double video_quartile_p50_rate = 134; */
        if (message.videoQuartileP50Rate !== undefined)
            writer.tag(134, runtime_2.WireType.Bit64).double(message.videoQuartileP50Rate);
        /* optional double video_quartile_p75_rate = 135; */
        if (message.videoQuartileP75Rate !== undefined)
            writer.tag(135, runtime_2.WireType.Bit64).double(message.videoQuartileP75Rate);
        /* optional double video_view_rate = 153; */
        if (message.videoViewRate !== undefined)
            writer.tag(153, runtime_2.WireType.Bit64).double(message.videoViewRate);
        /* optional int64 video_views = 154; */
        if (message.videoViews !== undefined)
            writer.tag(154, runtime_2.WireType.Varint).int64(message.videoViews);
        /* optional int64 view_through_conversions = 155; */
        if (message.viewThroughConversions !== undefined)
            writer.tag(155, runtime_2.WireType.Varint).int64(message.viewThroughConversions);
        /* int64 sk_ad_network_conversions = 246; */
        if (message.skAdNetworkConversions !== 0n)
            writer.tag(246, runtime_2.WireType.Varint).int64(message.skAdNetworkConversions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.Metrics
 */
exports.Metrics = new Metrics$Type();
//# sourceMappingURL=metrics.js.map
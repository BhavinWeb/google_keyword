import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ServedAssetFieldTypeEnum_ServedAssetFieldType } from "../enums/served_asset_field_type";
/**
 * Contains the usage information of the asset.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.AssetUsage
 */
export interface AssetUsage {
    /**
     * Resource name of the asset.
     *
     * @generated from protobuf field: string asset = 1;
     */
    asset: string;
    /**
     * The served field type of the asset.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ServedAssetFieldTypeEnum.ServedAssetFieldType served_asset_field_type = 2;
     */
    servedAssetFieldType: ServedAssetFieldTypeEnum_ServedAssetFieldType;
}
declare class AssetUsage$Type extends MessageType<AssetUsage> {
    constructor();
    create(value?: PartialMessage<AssetUsage>): AssetUsage;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssetUsage): AssetUsage;
    internalBinaryWrite(message: AssetUsage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.AssetUsage
 */
export declare const AssetUsage: AssetUsage$Type;
export {};

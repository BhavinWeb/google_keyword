"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PercentCpc = exports.TargetSpend = exports.TargetRoas = exports.TargetImpressionShare = exports.TargetCpm = exports.TargetCpa = exports.MaximizeConversionValue = exports.MaximizeConversions = exports.ManualCpv = exports.ManualCpm = exports.ManualCpc = exports.ManualCpa = exports.EnhancedCpc = exports.Commission = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const target_impression_share_location_1 = require("../enums/target_impression_share_location");
// @generated message type with reflection information, may provide speed optimized methods
class Commission$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.Commission", [
            { no: 2, name: "commission_rate_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 commission_rate_micros */ 2:
                    message.commissionRateMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 commission_rate_micros = 2; */
        if (message.commissionRateMicros !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.commissionRateMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.Commission
 */
exports.Commission = new Commission$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnhancedCpc$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.EnhancedCpc", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.EnhancedCpc
 */
exports.EnhancedCpc = new EnhancedCpc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManualCpa$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.ManualCpa", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.ManualCpa
 */
exports.ManualCpa = new ManualCpa$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManualCpc$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.ManualCpc", [
            { no: 2, name: "enhanced_cpc_enabled", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool enhanced_cpc_enabled */ 2:
                    message.enhancedCpcEnabled = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional bool enhanced_cpc_enabled = 2; */
        if (message.enhancedCpcEnabled !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).bool(message.enhancedCpcEnabled);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.ManualCpc
 */
exports.ManualCpc = new ManualCpc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManualCpm$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.ManualCpm", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.ManualCpm
 */
exports.ManualCpm = new ManualCpm$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ManualCpv$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.ManualCpv", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.ManualCpv
 */
exports.ManualCpv = new ManualCpv$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MaximizeConversions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.MaximizeConversions", [
            { no: 2, name: "cpc_bid_ceiling_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "cpc_bid_floor_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "target_cpa_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { cpcBidCeilingMicros: 0n, cpcBidFloorMicros: 0n, targetCpaMicros: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 cpc_bid_ceiling_micros */ 2:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* int64 cpc_bid_floor_micros */ 3:
                    message.cpcBidFloorMicros = reader.int64().toBigInt();
                    break;
                case /* int64 target_cpa_micros */ 4:
                    message.targetCpaMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 cpc_bid_ceiling_micros = 2; */
        if (message.cpcBidCeilingMicros !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        /* int64 cpc_bid_floor_micros = 3; */
        if (message.cpcBidFloorMicros !== 0n)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.cpcBidFloorMicros);
        /* int64 target_cpa_micros = 4; */
        if (message.targetCpaMicros !== 0n)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.targetCpaMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.MaximizeConversions
 */
exports.MaximizeConversions = new MaximizeConversions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MaximizeConversionValue$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.MaximizeConversionValue", [
            { no: 2, name: "target_roas", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "cpc_bid_ceiling_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "cpc_bid_floor_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { targetRoas: 0, cpcBidCeilingMicros: 0n, cpcBidFloorMicros: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* double target_roas */ 2:
                    message.targetRoas = reader.double();
                    break;
                case /* int64 cpc_bid_ceiling_micros */ 3:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* int64 cpc_bid_floor_micros */ 4:
                    message.cpcBidFloorMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* double target_roas = 2; */
        if (message.targetRoas !== 0)
            writer.tag(2, runtime_1.WireType.Bit64).double(message.targetRoas);
        /* int64 cpc_bid_ceiling_micros = 3; */
        if (message.cpcBidCeilingMicros !== 0n)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        /* int64 cpc_bid_floor_micros = 4; */
        if (message.cpcBidFloorMicros !== 0n)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.cpcBidFloorMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.MaximizeConversionValue
 */
exports.MaximizeConversionValue = new MaximizeConversionValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetCpa$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetCpa", [
            { no: 4, name: "target_cpa_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "cpc_bid_floor_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 target_cpa_micros */ 4:
                    message.targetCpaMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 5:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_floor_micros */ 6:
                    message.cpcBidFloorMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 target_cpa_micros = 4; */
        if (message.targetCpaMicros !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.targetCpaMicros);
        /* optional int64 cpc_bid_ceiling_micros = 5; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        /* optional int64 cpc_bid_floor_micros = 6; */
        if (message.cpcBidFloorMicros !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.cpcBidFloorMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetCpa
 */
exports.TargetCpa = new TargetCpa$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetCpm$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetCpm", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetCpm
 */
exports.TargetCpm = new TargetCpm$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetImpressionShare$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetImpressionShare", [
            { no: 1, name: "location", kind: "enum", T: () => ["google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation", target_impression_share_location_1.TargetImpressionShareLocationEnum_TargetImpressionShareLocation] },
            { no: 4, name: "location_fraction_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { location: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location */ 1:
                    message.location = reader.int32();
                    break;
                case /* optional int64 location_fraction_micros */ 4:
                    message.locationFractionMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 5:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location = 1; */
        if (message.location !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.location);
        /* optional int64 location_fraction_micros = 4; */
        if (message.locationFractionMicros !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.locationFractionMicros);
        /* optional int64 cpc_bid_ceiling_micros = 5; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetImpressionShare
 */
exports.TargetImpressionShare = new TargetImpressionShare$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetRoas$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetRoas", [
            { no: 4, name: "target_roas", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "cpc_bid_floor_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double target_roas */ 4:
                    message.targetRoas = reader.double();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 5:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_floor_micros */ 6:
                    message.cpcBidFloorMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional double target_roas = 4; */
        if (message.targetRoas !== undefined)
            writer.tag(4, runtime_1.WireType.Bit64).double(message.targetRoas);
        /* optional int64 cpc_bid_ceiling_micros = 5; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        /* optional int64 cpc_bid_floor_micros = 6; */
        if (message.cpcBidFloorMicros !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.cpcBidFloorMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetRoas
 */
exports.TargetRoas = new TargetRoas$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetSpend$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.TargetSpend", [
            { no: 3, name: "target_spend_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 target_spend_micros = 3 [deprecated = true];*/ 3:
                    message.targetSpendMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 4:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 target_spend_micros = 3 [deprecated = true]; */
        if (message.targetSpendMicros !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.targetSpendMicros);
        /* optional int64 cpc_bid_ceiling_micros = 4; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetSpend
 */
exports.TargetSpend = new TargetSpend$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentCpc$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.common.PercentCpc", [
            { no: 3, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "enhanced_cpc_enabled", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 cpc_bid_ceiling_micros */ 3:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* optional bool enhanced_cpc_enabled */ 4:
                    message.enhancedCpcEnabled = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 cpc_bid_ceiling_micros = 3; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        /* optional bool enhanced_cpc_enabled = 4; */
        if (message.enhancedCpcEnabled !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).bool(message.enhancedCpcEnabled);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PercentCpc
 */
exports.PercentCpc = new PercentCpc$Type();
//# sourceMappingURL=bidding.js.map
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing types of shared sets.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.SharedSetTypeEnum
 */
export interface SharedSetTypeEnum {
}
/**
 * Enum listing the possible shared set types.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.SharedSetTypeEnum.SharedSetType
 */
export declare enum SharedSetTypeEnum_SharedSetType {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * A set of keywords that can be excluded from targeting.
     *
     * @generated from protobuf enum value: NEGATIVE_KEYWORDS = 2;
     */
    NEGATIVE_KEYWORDS = 2,
    /**
     * A set of placements that can be excluded from targeting.
     *
     * @generated from protobuf enum value: NEGATIVE_PLACEMENTS = 3;
     */
    NEGATIVE_PLACEMENTS = 3
}
declare class SharedSetTypeEnum$Type extends MessageType<SharedSetTypeEnum> {
    constructor();
    create(value?: PartialMessage<SharedSetTypeEnum>): SharedSetTypeEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SharedSetTypeEnum): SharedSetTypeEnum;
    internalBinaryWrite(message: SharedSetTypeEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.SharedSetTypeEnum
 */
export declare const SharedSetTypeEnum: SharedSetTypeEnum$Type;
export {};

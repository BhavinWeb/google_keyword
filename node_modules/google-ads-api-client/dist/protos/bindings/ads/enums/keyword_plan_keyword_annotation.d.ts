import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enumeration of keyword plan keyword annotations.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum
 */
export interface KeywordPlanKeywordAnnotationEnum {
}
/**
 * Enumerates keyword plan annotations that can be requested.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum.KeywordPlanKeywordAnnotation
 */
export declare enum KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The value is unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Return the keyword concept and concept group data.
     *
     * @generated from protobuf enum value: KEYWORD_CONCEPT = 2;
     */
    KEYWORD_CONCEPT = 2
}
declare class KeywordPlanKeywordAnnotationEnum$Type extends MessageType<KeywordPlanKeywordAnnotationEnum> {
    constructor();
    create(value?: PartialMessage<KeywordPlanKeywordAnnotationEnum>): KeywordPlanKeywordAnnotationEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanKeywordAnnotationEnum): KeywordPlanKeywordAnnotationEnum;
    internalBinaryWrite(message: KeywordPlanKeywordAnnotationEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum
 */
export declare const KeywordPlanKeywordAnnotationEnum: KeywordPlanKeywordAnnotationEnum$Type;
export {};

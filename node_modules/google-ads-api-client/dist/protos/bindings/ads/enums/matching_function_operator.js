"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MatchingFunctionOperatorEnum = exports.MatchingFunctionOperatorEnum_MatchingFunctionOperator = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Possible operators in a matching function.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.MatchingFunctionOperatorEnum.MatchingFunctionOperator
 */
var MatchingFunctionOperatorEnum_MatchingFunctionOperator;
(function (MatchingFunctionOperatorEnum_MatchingFunctionOperator) {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    MatchingFunctionOperatorEnum_MatchingFunctionOperator[MatchingFunctionOperatorEnum_MatchingFunctionOperator["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    MatchingFunctionOperatorEnum_MatchingFunctionOperator[MatchingFunctionOperatorEnum_MatchingFunctionOperator["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The IN operator.
     *
     * @generated from protobuf enum value: IN = 2;
     */
    MatchingFunctionOperatorEnum_MatchingFunctionOperator[MatchingFunctionOperatorEnum_MatchingFunctionOperator["IN"] = 2] = "IN";
    /**
     * The IDENTITY operator.
     *
     * @generated from protobuf enum value: IDENTITY = 3;
     */
    MatchingFunctionOperatorEnum_MatchingFunctionOperator[MatchingFunctionOperatorEnum_MatchingFunctionOperator["IDENTITY"] = 3] = "IDENTITY";
    /**
     * The EQUALS operator
     *
     * @generated from protobuf enum value: EQUALS = 4;
     */
    MatchingFunctionOperatorEnum_MatchingFunctionOperator[MatchingFunctionOperatorEnum_MatchingFunctionOperator["EQUALS"] = 4] = "EQUALS";
    /**
     * Operator that takes two or more operands that are of type
     * FunctionOperand and checks that all the operands evaluate to true.
     * For functions related to ad formats, all the operands must be in
     * left_operands.
     *
     * @generated from protobuf enum value: AND = 5;
     */
    MatchingFunctionOperatorEnum_MatchingFunctionOperator[MatchingFunctionOperatorEnum_MatchingFunctionOperator["AND"] = 5] = "AND";
    /**
     * Operator that returns true if the elements in left_operands contain any
     * of the elements in right_operands. Otherwise, return false. The
     * right_operands must contain at least 1 and no more than 3
     * ConstantOperands.
     *
     * @generated from protobuf enum value: CONTAINS_ANY = 6;
     */
    MatchingFunctionOperatorEnum_MatchingFunctionOperator[MatchingFunctionOperatorEnum_MatchingFunctionOperator["CONTAINS_ANY"] = 6] = "CONTAINS_ANY";
})(MatchingFunctionOperatorEnum_MatchingFunctionOperator = exports.MatchingFunctionOperatorEnum_MatchingFunctionOperator || (exports.MatchingFunctionOperatorEnum_MatchingFunctionOperator = {}));
// @generated message type with reflection information, may provide speed optimized methods
class MatchingFunctionOperatorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.enums.MatchingFunctionOperatorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.MatchingFunctionOperatorEnum
 */
exports.MatchingFunctionOperatorEnum = new MatchingFunctionOperatorEnum$Type();
//# sourceMappingURL=matching_function_operator.js.map
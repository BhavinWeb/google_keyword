import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Rule based user list rule type.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.UserListRuleTypeEnum
 */
export interface UserListRuleTypeEnum {
}
/**
 * Enum describing possible user list rule types.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.UserListRuleTypeEnum.UserListRuleType
 */
export declare enum UserListRuleTypeEnum_UserListRuleType {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Conjunctive normal form.
     *
     * @generated from protobuf enum value: AND_OF_ORS = 2;
     */
    AND_OF_ORS = 2,
    /**
     * Disjunctive normal form.
     *
     * @generated from protobuf enum value: OR_OF_ANDS = 3;
     */
    OR_OF_ANDS = 3
}
declare class UserListRuleTypeEnum$Type extends MessageType<UserListRuleTypeEnum> {
    constructor();
    create(value?: PartialMessage<UserListRuleTypeEnum>): UserListRuleTypeEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListRuleTypeEnum): UserListRuleTypeEnum;
    internalBinaryWrite(message: UserListRuleTypeEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.UserListRuleTypeEnum
 */
export declare const UserListRuleTypeEnum: UserListRuleTypeEnum$Type;
export {};

import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing the type of invoices.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.InvoiceTypeEnum
 */
export interface InvoiceTypeEnum {
}
/**
 * The possible type of invoices.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.InvoiceTypeEnum.InvoiceType
 */
export declare enum InvoiceTypeEnum_InvoiceType {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * An invoice with a negative amount. The account receives a credit.
     *
     * @generated from protobuf enum value: CREDIT_MEMO = 2;
     */
    CREDIT_MEMO = 2,
    /**
     * An invoice with a positive amount. The account owes a balance.
     *
     * @generated from protobuf enum value: INVOICE = 3;
     */
    INVOICE = 3
}
declare class InvoiceTypeEnum$Type extends MessageType<InvoiceTypeEnum> {
    constructor();
    create(value?: PartialMessage<InvoiceTypeEnum>): InvoiceTypeEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InvoiceTypeEnum): InvoiceTypeEnum;
    internalBinaryWrite(message: InvoiceTypeEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.InvoiceTypeEnum
 */
export declare const InvoiceTypeEnum: InvoiceTypeEnum$Type;
export {};

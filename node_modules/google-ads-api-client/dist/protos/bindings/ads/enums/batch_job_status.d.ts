import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible batch job statuses.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.BatchJobStatusEnum
 */
export interface BatchJobStatusEnum {
}
/**
 * The batch job statuses.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.BatchJobStatusEnum.BatchJobStatus
 */
export declare enum BatchJobStatusEnum_BatchJobStatus {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The job is not currently running.
     *
     * @generated from protobuf enum value: PENDING = 2;
     */
    PENDING = 2,
    /**
     * The job is running.
     *
     * @generated from protobuf enum value: RUNNING = 3;
     */
    RUNNING = 3,
    /**
     * The job is done.
     *
     * @generated from protobuf enum value: DONE = 4;
     */
    DONE = 4
}
declare class BatchJobStatusEnum$Type extends MessageType<BatchJobStatusEnum> {
    constructor();
    create(value?: PartialMessage<BatchJobStatusEnum>): BatchJobStatusEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchJobStatusEnum): BatchJobStatusEnum;
    internalBinaryWrite(message: BatchJobStatusEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.BatchJobStatusEnum
 */
export declare const BatchJobStatusEnum: BatchJobStatusEnum$Type;
export {};

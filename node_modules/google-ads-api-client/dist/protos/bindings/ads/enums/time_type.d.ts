import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Message describing time types.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.TimeTypeEnum
 */
export interface TimeTypeEnum {
}
/**
 * The possible time types used by certain resources as an alternative to
 * absolute timestamps.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.TimeTypeEnum.TimeType
 */
export declare enum TimeTypeEnum_TimeType {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * As soon as possible.
     *
     * @generated from protobuf enum value: NOW = 2;
     */
    NOW = 2,
    /**
     * An infinite point in the future.
     *
     * @generated from protobuf enum value: FOREVER = 3;
     */
    FOREVER = 3
}
declare class TimeTypeEnum$Type extends MessageType<TimeTypeEnum> {
    constructor();
    create(value?: PartialMessage<TimeTypeEnum>): TimeTypeEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TimeTypeEnum): TimeTypeEnum;
    internalBinaryWrite(message: TimeTypeEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.TimeTypeEnum
 */
export declare const TimeTypeEnum: TimeTypeEnum$Type;
export {};

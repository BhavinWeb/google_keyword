import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible statuses of a feed.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.FeedStatusEnum
 */
export interface FeedStatusEnum {
}
/**
 * Possible statuses of a feed.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.FeedStatusEnum.FeedStatus
 */
export declare enum FeedStatusEnum_FeedStatus {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Feed is enabled.
     *
     * @generated from protobuf enum value: ENABLED = 2;
     */
    ENABLED = 2,
    /**
     * Feed has been removed.
     *
     * @generated from protobuf enum value: REMOVED = 3;
     */
    REMOVED = 3
}
declare class FeedStatusEnum$Type extends MessageType<FeedStatusEnum> {
    constructor();
    create(value?: PartialMessage<FeedStatusEnum>): FeedStatusEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedStatusEnum): FeedStatusEnum;
    internalBinaryWrite(message: FeedStatusEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.FeedStatusEnum
 */
export declare const FeedStatusEnum: FeedStatusEnum$Type;
export {};

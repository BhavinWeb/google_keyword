import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing the type of experiment metric direction.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.ExperimentMetricDirectionEnum
 */
export interface ExperimentMetricDirectionEnum {
}
/**
 * The type of experiment metric direction.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.ExperimentMetricDirectionEnum.ExperimentMetricDirection
 */
export declare enum ExperimentMetricDirectionEnum_ExperimentMetricDirection {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The value is unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The goal of the experiment is to not change the metric.
     *
     * @generated from protobuf enum value: NO_CHANGE = 2;
     */
    NO_CHANGE = 2,
    /**
     * The goal of the experiment is to increate the metric.
     *
     * @generated from protobuf enum value: INCREASE = 3;
     */
    INCREASE = 3,
    /**
     * The goal of the experiment is to decrease the metric.
     *
     * @generated from protobuf enum value: DECREASE = 4;
     */
    DECREASE = 4,
    /**
     * The goal of the experiment is to either not change or increase the
     * metric.
     *
     * @generated from protobuf enum value: NO_CHANGE_OR_INCREASE = 5;
     */
    NO_CHANGE_OR_INCREASE = 5,
    /**
     * The goal of the experiment is to either not change or decrease the
     * metric.
     *
     * @generated from protobuf enum value: NO_CHANGE_OR_DECREASE = 6;
     */
    NO_CHANGE_OR_DECREASE = 6
}
declare class ExperimentMetricDirectionEnum$Type extends MessageType<ExperimentMetricDirectionEnum> {
    constructor();
    create(value?: PartialMessage<ExperimentMetricDirectionEnum>): ExperimentMetricDirectionEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExperimentMetricDirectionEnum): ExperimentMetricDirectionEnum;
    internalBinaryWrite(message: ExperimentMetricDirectionEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.ExperimentMetricDirectionEnum
 */
export declare const ExperimentMetricDirectionEnum: ExperimentMetricDirectionEnum$Type;
export {};

import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum representing the conversion environment an uploaded
 * conversion was recorded on, for example, App or Web.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.ConversionEnvironmentEnum
 */
export interface ConversionEnvironmentEnum {
}
/**
 * Conversion environment of the uploaded conversion.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.ConversionEnvironmentEnum.ConversionEnvironment
 */
export declare enum ConversionEnvironmentEnum_ConversionEnvironment {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The conversion was recorded on an app.
     *
     * @generated from protobuf enum value: APP = 2;
     */
    APP = 2,
    /**
     * The conversion was recorded on a website.
     *
     * @generated from protobuf enum value: WEB = 3;
     */
    WEB = 3
}
declare class ConversionEnvironmentEnum$Type extends MessageType<ConversionEnvironmentEnum> {
    constructor();
    create(value?: PartialMessage<ConversionEnvironmentEnum>): ConversionEnvironmentEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConversionEnvironmentEnum): ConversionEnvironmentEnum;
    internalBinaryWrite(message: ConversionEnvironmentEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.ConversionEnvironmentEnum
 */
export declare const ConversionEnvironmentEnum: ConversionEnvironmentEnum$Type;
export {};

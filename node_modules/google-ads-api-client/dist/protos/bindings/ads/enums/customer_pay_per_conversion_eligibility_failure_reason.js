"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerPayPerConversionEligibilityFailureReasonEnum = exports.CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible reasons a customer is not eligible to use
 * PaymentMode.CONVERSIONS.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.CustomerPayPerConversionEligibilityFailureReasonEnum.CustomerPayPerConversionEligibilityFailureReason
 */
var CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason;
(function (CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason) {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * Customer does not have enough conversions.
     *
     * @generated from protobuf enum value: NOT_ENOUGH_CONVERSIONS = 2;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["NOT_ENOUGH_CONVERSIONS"] = 2] = "NOT_ENOUGH_CONVERSIONS";
    /**
     * Customer's conversion lag is too high.
     *
     * @generated from protobuf enum value: CONVERSION_LAG_TOO_HIGH = 3;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["CONVERSION_LAG_TOO_HIGH"] = 3] = "CONVERSION_LAG_TOO_HIGH";
    /**
     * Customer uses shared budgets.
     *
     * @generated from protobuf enum value: HAS_CAMPAIGN_WITH_SHARED_BUDGET = 4;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["HAS_CAMPAIGN_WITH_SHARED_BUDGET"] = 4] = "HAS_CAMPAIGN_WITH_SHARED_BUDGET";
    /**
     * Customer has conversions with ConversionActionType.UPLOAD_CLICKS.
     *
     * @generated from protobuf enum value: HAS_UPLOAD_CLICKS_CONVERSION = 5;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["HAS_UPLOAD_CLICKS_CONVERSION"] = 5] = "HAS_UPLOAD_CLICKS_CONVERSION";
    /**
     * Customer's average daily spend is too high.
     *
     * @generated from protobuf enum value: AVERAGE_DAILY_SPEND_TOO_HIGH = 6;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["AVERAGE_DAILY_SPEND_TOO_HIGH"] = 6] = "AVERAGE_DAILY_SPEND_TOO_HIGH";
    /**
     * Customer's eligibility has not yet been calculated by the Google Ads
     * backend. Check back soon.
     *
     * @generated from protobuf enum value: ANALYSIS_NOT_COMPLETE = 7;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["ANALYSIS_NOT_COMPLETE"] = 7] = "ANALYSIS_NOT_COMPLETE";
    /**
     * Customer is not eligible due to other reasons.
     *
     * @generated from protobuf enum value: OTHER = 8;
     */
    CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason["OTHER"] = 8] = "OTHER";
})(CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason = exports.CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason || (exports.CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason = {}));
// @generated message type with reflection information, may provide speed optimized methods
class CustomerPayPerConversionEligibilityFailureReasonEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.enums.CustomerPayPerConversionEligibilityFailureReasonEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.CustomerPayPerConversionEligibilityFailureReasonEnum
 */
exports.CustomerPayPerConversionEligibilityFailureReasonEnum = new CustomerPayPerConversionEligibilityFailureReasonEnum$Type();
//# sourceMappingURL=customer_pay_per_conversion_eligibility_failure_reason.js.map
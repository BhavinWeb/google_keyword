import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Condition of a product offer.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.ProductConditionEnum
 */
export interface ProductConditionEnum {
}
/**
 * Enum describing the condition of a product offer.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.ProductConditionEnum.ProductCondition
 */
export declare enum ProductConditionEnum_ProductCondition {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The product condition is new.
     *
     * @generated from protobuf enum value: NEW = 3;
     */
    NEW = 3,
    /**
     * The product condition is refurbished.
     *
     * @generated from protobuf enum value: REFURBISHED = 4;
     */
    REFURBISHED = 4,
    /**
     * The product condition is used.
     *
     * @generated from protobuf enum value: USED = 5;
     */
    USED = 5
}
declare class ProductConditionEnum$Type extends MessageType<ProductConditionEnum> {
    constructor();
    create(value?: PartialMessage<ProductConditionEnum>): ProductConditionEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProductConditionEnum): ProductConditionEnum;
    internalBinaryWrite(message: ProductConditionEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.ProductConditionEnum
 */
export declare const ProductConditionEnum: ProductConditionEnum$Type;
export {};

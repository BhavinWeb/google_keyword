import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Message describing spending limit types.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.SpendingLimitTypeEnum
 */
export interface SpendingLimitTypeEnum {
}
/**
 * The possible spending limit types used by certain resources as an
 * alternative to absolute money values in micros.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.SpendingLimitTypeEnum.SpendingLimitType
 */
export declare enum SpendingLimitTypeEnum_SpendingLimitType {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Infinite, indicates unlimited spending power.
     *
     * @generated from protobuf enum value: INFINITE = 2;
     */
    INFINITE = 2
}
declare class SpendingLimitTypeEnum$Type extends MessageType<SpendingLimitTypeEnum> {
    constructor();
    create(value?: PartialMessage<SpendingLimitTypeEnum>): SpendingLimitTypeEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SpendingLimitTypeEnum): SpendingLimitTypeEnum;
    internalBinaryWrite(message: SpendingLimitTypeEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.SpendingLimitTypeEnum
 */
export declare const SpendingLimitTypeEnum: SpendingLimitTypeEnum$Type;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssetSetLinkErrorEnum = exports.AssetSetLinkErrorEnum_AssetSetLinkError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible asset set link errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.AssetSetLinkErrorEnum.AssetSetLinkError
 */
var AssetSetLinkErrorEnum_AssetSetLinkError;
(function (AssetSetLinkErrorEnum_AssetSetLinkError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    AssetSetLinkErrorEnum_AssetSetLinkError[AssetSetLinkErrorEnum_AssetSetLinkError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    AssetSetLinkErrorEnum_AssetSetLinkError[AssetSetLinkErrorEnum_AssetSetLinkError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * Advertising channel type cannot be attached to the asset set due to
     * channel-based restrictions.
     *
     * @generated from protobuf enum value: INCOMPATIBLE_ADVERTISING_CHANNEL_TYPE = 2;
     */
    AssetSetLinkErrorEnum_AssetSetLinkError[AssetSetLinkErrorEnum_AssetSetLinkError["INCOMPATIBLE_ADVERTISING_CHANNEL_TYPE"] = 2] = "INCOMPATIBLE_ADVERTISING_CHANNEL_TYPE";
    /**
     * For this asset set type, only one campaign to feed linkage is allowed.
     *
     * @generated from protobuf enum value: DUPLICATE_FEED_LINK = 3;
     */
    AssetSetLinkErrorEnum_AssetSetLinkError[AssetSetLinkErrorEnum_AssetSetLinkError["DUPLICATE_FEED_LINK"] = 3] = "DUPLICATE_FEED_LINK";
    /**
     * The asset set type and campaign type are incompatible.
     *
     * @generated from protobuf enum value: INCOMPATIBLE_ASSET_SET_TYPE_WITH_CAMPAIGN_TYPE = 4;
     */
    AssetSetLinkErrorEnum_AssetSetLinkError[AssetSetLinkErrorEnum_AssetSetLinkError["INCOMPATIBLE_ASSET_SET_TYPE_WITH_CAMPAIGN_TYPE"] = 4] = "INCOMPATIBLE_ASSET_SET_TYPE_WITH_CAMPAIGN_TYPE";
    /**
     * Cannot link duplicate asset sets to the same campaign.
     *
     * @generated from protobuf enum value: DUPLICATE_ASSET_SET_LINK = 5;
     */
    AssetSetLinkErrorEnum_AssetSetLinkError[AssetSetLinkErrorEnum_AssetSetLinkError["DUPLICATE_ASSET_SET_LINK"] = 5] = "DUPLICATE_ASSET_SET_LINK";
    /**
     * Cannot remove the asset set link. If a campaign is linked with only one
     * asset set and you attempt to unlink them, this error will be triggered.
     *
     * @generated from protobuf enum value: ASSET_SET_LINK_CANNOT_BE_REMOVED = 6;
     */
    AssetSetLinkErrorEnum_AssetSetLinkError[AssetSetLinkErrorEnum_AssetSetLinkError["ASSET_SET_LINK_CANNOT_BE_REMOVED"] = 6] = "ASSET_SET_LINK_CANNOT_BE_REMOVED";
})(AssetSetLinkErrorEnum_AssetSetLinkError = exports.AssetSetLinkErrorEnum_AssetSetLinkError || (exports.AssetSetLinkErrorEnum_AssetSetLinkError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class AssetSetLinkErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.AssetSetLinkErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.AssetSetLinkErrorEnum
 */
exports.AssetSetLinkErrorEnum = new AssetSetLinkErrorEnum$Type();
//# sourceMappingURL=asset_set_link_error.js.map
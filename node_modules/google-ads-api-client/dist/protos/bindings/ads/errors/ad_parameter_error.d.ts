import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible ad parameter errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.AdParameterErrorEnum
 */
export interface AdParameterErrorEnum {
}
/**
 * Enum describing possible ad parameter errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.AdParameterErrorEnum.AdParameterError
 */
export declare enum AdParameterErrorEnum_AdParameterError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The ad group criterion must be a keyword criterion.
     *
     * @generated from protobuf enum value: AD_GROUP_CRITERION_MUST_BE_KEYWORD = 2;
     */
    AD_GROUP_CRITERION_MUST_BE_KEYWORD = 2,
    /**
     * The insertion text is invalid.
     *
     * @generated from protobuf enum value: INVALID_INSERTION_TEXT_FORMAT = 3;
     */
    INVALID_INSERTION_TEXT_FORMAT = 3
}
declare class AdParameterErrorEnum$Type extends MessageType<AdParameterErrorEnum> {
    constructor();
    create(value?: PartialMessage<AdParameterErrorEnum>): AdParameterErrorEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AdParameterErrorEnum): AdParameterErrorEnum;
    internalBinaryWrite(message: AdParameterErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.AdParameterErrorEnum
 */
export declare const AdParameterErrorEnum: AdParameterErrorEnum$Type;
export {};

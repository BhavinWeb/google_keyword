"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagerLinkErrorEnum = exports.ManagerLinkErrorEnum_ManagerLinkError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible ManagerLink errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.ManagerLinkErrorEnum.ManagerLinkError
 */
var ManagerLinkErrorEnum_ManagerLinkError;
(function (ManagerLinkErrorEnum_ManagerLinkError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The manager and client have incompatible account types.
     *
     * @generated from protobuf enum value: ACCOUNTS_NOT_COMPATIBLE_FOR_LINKING = 2;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["ACCOUNTS_NOT_COMPATIBLE_FOR_LINKING"] = 2] = "ACCOUNTS_NOT_COMPATIBLE_FOR_LINKING";
    /**
     * Client is already linked to too many managers.
     *
     * @generated from protobuf enum value: TOO_MANY_MANAGERS = 3;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["TOO_MANY_MANAGERS"] = 3] = "TOO_MANY_MANAGERS";
    /**
     * Manager has too many pending invitations.
     *
     * @generated from protobuf enum value: TOO_MANY_INVITES = 4;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["TOO_MANY_INVITES"] = 4] = "TOO_MANY_INVITES";
    /**
     * Client is already invited by this manager.
     *
     * @generated from protobuf enum value: ALREADY_INVITED_BY_THIS_MANAGER = 5;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["ALREADY_INVITED_BY_THIS_MANAGER"] = 5] = "ALREADY_INVITED_BY_THIS_MANAGER";
    /**
     * The client is already managed by this manager.
     *
     * @generated from protobuf enum value: ALREADY_MANAGED_BY_THIS_MANAGER = 6;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["ALREADY_MANAGED_BY_THIS_MANAGER"] = 6] = "ALREADY_MANAGED_BY_THIS_MANAGER";
    /**
     * Client is already managed in hierarchy.
     *
     * @generated from protobuf enum value: ALREADY_MANAGED_IN_HIERARCHY = 7;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["ALREADY_MANAGED_IN_HIERARCHY"] = 7] = "ALREADY_MANAGED_IN_HIERARCHY";
    /**
     * Manager and sub-manager to be linked have duplicate client.
     *
     * @generated from protobuf enum value: DUPLICATE_CHILD_FOUND = 8;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["DUPLICATE_CHILD_FOUND"] = 8] = "DUPLICATE_CHILD_FOUND";
    /**
     * Client has no active user that can access the client account.
     *
     * @generated from protobuf enum value: CLIENT_HAS_NO_ADMIN_USER = 9;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["CLIENT_HAS_NO_ADMIN_USER"] = 9] = "CLIENT_HAS_NO_ADMIN_USER";
    /**
     * Adding this link would exceed the maximum hierarchy depth.
     *
     * @generated from protobuf enum value: MAX_DEPTH_EXCEEDED = 10;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["MAX_DEPTH_EXCEEDED"] = 10] = "MAX_DEPTH_EXCEEDED";
    /**
     * Adding this link will create a cycle.
     *
     * @generated from protobuf enum value: CYCLE_NOT_ALLOWED = 11;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["CYCLE_NOT_ALLOWED"] = 11] = "CYCLE_NOT_ALLOWED";
    /**
     * Manager account has the maximum number of linked clients.
     *
     * @generated from protobuf enum value: TOO_MANY_ACCOUNTS = 12;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["TOO_MANY_ACCOUNTS"] = 12] = "TOO_MANY_ACCOUNTS";
    /**
     * Parent manager account has the maximum number of linked clients.
     *
     * @generated from protobuf enum value: TOO_MANY_ACCOUNTS_AT_MANAGER = 13;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["TOO_MANY_ACCOUNTS_AT_MANAGER"] = 13] = "TOO_MANY_ACCOUNTS_AT_MANAGER";
    /**
     * The account is not authorized owner.
     *
     * @generated from protobuf enum value: NON_OWNER_USER_CANNOT_MODIFY_LINK = 14;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["NON_OWNER_USER_CANNOT_MODIFY_LINK"] = 14] = "NON_OWNER_USER_CANNOT_MODIFY_LINK";
    /**
     * Your manager account is suspended, and you are no longer allowed to link
     * to clients.
     *
     * @generated from protobuf enum value: SUSPENDED_ACCOUNT_CANNOT_ADD_CLIENTS = 15;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["SUSPENDED_ACCOUNT_CANNOT_ADD_CLIENTS"] = 15] = "SUSPENDED_ACCOUNT_CANNOT_ADD_CLIENTS";
    /**
     * You are not allowed to move a client to a manager that is not under your
     * current hierarchy.
     *
     * @generated from protobuf enum value: CLIENT_OUTSIDE_TREE = 16;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["CLIENT_OUTSIDE_TREE"] = 16] = "CLIENT_OUTSIDE_TREE";
    /**
     * The changed status for mutate link is invalid.
     *
     * @generated from protobuf enum value: INVALID_STATUS_CHANGE = 17;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["INVALID_STATUS_CHANGE"] = 17] = "INVALID_STATUS_CHANGE";
    /**
     * The change for mutate link is invalid.
     *
     * @generated from protobuf enum value: INVALID_CHANGE = 18;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["INVALID_CHANGE"] = 18] = "INVALID_CHANGE";
    /**
     * You are not allowed to link a manager account to itself.
     *
     * @generated from protobuf enum value: CUSTOMER_CANNOT_MANAGE_SELF = 19;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["CUSTOMER_CANNOT_MANAGE_SELF"] = 19] = "CUSTOMER_CANNOT_MANAGE_SELF";
    /**
     * The link was created with status ACTIVE and not PENDING.
     *
     * @generated from protobuf enum value: CREATING_ENABLED_LINK_NOT_ALLOWED = 20;
     */
    ManagerLinkErrorEnum_ManagerLinkError[ManagerLinkErrorEnum_ManagerLinkError["CREATING_ENABLED_LINK_NOT_ALLOWED"] = 20] = "CREATING_ENABLED_LINK_NOT_ALLOWED";
})(ManagerLinkErrorEnum_ManagerLinkError = exports.ManagerLinkErrorEnum_ManagerLinkError || (exports.ManagerLinkErrorEnum_ManagerLinkError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ManagerLinkErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.ManagerLinkErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.ManagerLinkErrorEnum
 */
exports.ManagerLinkErrorEnum = new ManagerLinkErrorEnum$Type();
//# sourceMappingURL=manager_link_error.js.map
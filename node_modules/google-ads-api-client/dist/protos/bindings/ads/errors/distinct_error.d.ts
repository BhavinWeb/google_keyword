import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible distinct errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.DistinctErrorEnum
 */
export interface DistinctErrorEnum {
}
/**
 * Enum describing possible distinct errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.DistinctErrorEnum.DistinctError
 */
export declare enum DistinctErrorEnum_DistinctError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Duplicate element.
     *
     * @generated from protobuf enum value: DUPLICATE_ELEMENT = 2;
     */
    DUPLICATE_ELEMENT = 2,
    /**
     * Duplicate type.
     *
     * @generated from protobuf enum value: DUPLICATE_TYPE = 3;
     */
    DUPLICATE_TYPE = 3
}
declare class DistinctErrorEnum$Type extends MessageType<DistinctErrorEnum> {
    constructor();
    create(value?: PartialMessage<DistinctErrorEnum>): DistinctErrorEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DistinctErrorEnum): DistinctErrorEnum;
    internalBinaryWrite(message: DistinctErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.DistinctErrorEnum
 */
export declare const DistinctErrorEnum: DistinctErrorEnum$Type;
export {};

import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible shared criterion errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.SharedCriterionErrorEnum
 */
export interface SharedCriterionErrorEnum {
}
/**
 * Enum describing possible shared criterion errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.SharedCriterionErrorEnum.SharedCriterionError
 */
export declare enum SharedCriterionErrorEnum_SharedCriterionError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The criterion is not appropriate for the shared set type.
     *
     * @generated from protobuf enum value: CRITERION_TYPE_NOT_ALLOWED_FOR_SHARED_SET_TYPE = 2;
     */
    CRITERION_TYPE_NOT_ALLOWED_FOR_SHARED_SET_TYPE = 2
}
declare class SharedCriterionErrorEnum$Type extends MessageType<SharedCriterionErrorEnum> {
    constructor();
    create(value?: PartialMessage<SharedCriterionErrorEnum>): SharedCriterionErrorEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SharedCriterionErrorEnum): SharedCriterionErrorEnum;
    internalBinaryWrite(message: SharedCriterionErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.SharedCriterionErrorEnum
 */
export declare const SharedCriterionErrorEnum: SharedCriterionErrorEnum$Type;
export {};

import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible shared set errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.SharedSetErrorEnum
 */
export interface SharedSetErrorEnum {
}
/**
 * Enum describing possible shared set errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.SharedSetErrorEnum.SharedSetError
 */
export declare enum SharedSetErrorEnum_SharedSetError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The customer cannot create this type of shared set.
     *
     * @generated from protobuf enum value: CUSTOMER_CANNOT_CREATE_SHARED_SET_OF_THIS_TYPE = 2;
     */
    CUSTOMER_CANNOT_CREATE_SHARED_SET_OF_THIS_TYPE = 2,
    /**
     * A shared set with this name already exists.
     *
     * @generated from protobuf enum value: DUPLICATE_NAME = 3;
     */
    DUPLICATE_NAME = 3,
    /**
     * Removed shared sets cannot be mutated.
     *
     * @generated from protobuf enum value: SHARED_SET_REMOVED = 4;
     */
    SHARED_SET_REMOVED = 4,
    /**
     * The shared set cannot be removed because it is in use.
     *
     * @generated from protobuf enum value: SHARED_SET_IN_USE = 5;
     */
    SHARED_SET_IN_USE = 5
}
declare class SharedSetErrorEnum$Type extends MessageType<SharedSetErrorEnum> {
    constructor();
    create(value?: PartialMessage<SharedSetErrorEnum>): SharedSetErrorEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SharedSetErrorEnum): SharedSetErrorEnum;
    internalBinaryWrite(message: SharedSetErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.SharedSetErrorEnum
 */
export declare const SharedSetErrorEnum: SharedSetErrorEnum$Type;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionAdjustmentUploadErrorEnum = exports.ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible conversion adjustment upload errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.ConversionAdjustmentUploadErrorEnum.ConversionAdjustmentUploadError
 */
var ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError;
(function (ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError) {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The specified conversion action was created too recently.
     * Try the upload again after 4-6 hours have passed since the
     * conversion action was created.
     *
     * @generated from protobuf enum value: TOO_RECENT_CONVERSION_ACTION = 2;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["TOO_RECENT_CONVERSION_ACTION"] = 2] = "TOO_RECENT_CONVERSION_ACTION";
    /**
     * No conversion action of a supported ConversionActionType that matches the
     * provided information can be found for the customer.
     *
     * @generated from protobuf enum value: INVALID_CONVERSION_ACTION = 3;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["INVALID_CONVERSION_ACTION"] = 3] = "INVALID_CONVERSION_ACTION";
    /**
     * A retraction was already reported for this conversion.
     *
     * @generated from protobuf enum value: CONVERSION_ALREADY_RETRACTED = 4;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CONVERSION_ALREADY_RETRACTED"] = 4] = "CONVERSION_ALREADY_RETRACTED";
    /**
     * A conversion for the supplied combination of conversion
     * action and conversion identifier could not be found.
     *
     * @generated from protobuf enum value: CONVERSION_NOT_FOUND = 5;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CONVERSION_NOT_FOUND"] = 5] = "CONVERSION_NOT_FOUND";
    /**
     * The specified conversion has already expired. Conversions expire after 55
     * days, after which adjustments cannot be reported against them.
     *
     * @generated from protobuf enum value: CONVERSION_EXPIRED = 6;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CONVERSION_EXPIRED"] = 6] = "CONVERSION_EXPIRED";
    /**
     * The supplied adjustment date time precedes that of the original
     * conversion.
     *
     * @generated from protobuf enum value: ADJUSTMENT_PRECEDES_CONVERSION = 7;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["ADJUSTMENT_PRECEDES_CONVERSION"] = 7] = "ADJUSTMENT_PRECEDES_CONVERSION";
    /**
     * A restatement with a more recent adjustment date time was already
     * reported for this conversion.
     *
     * @generated from protobuf enum value: MORE_RECENT_RESTATEMENT_FOUND = 8;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["MORE_RECENT_RESTATEMENT_FOUND"] = 8] = "MORE_RECENT_RESTATEMENT_FOUND";
    /**
     * The conversion was created too recently.
     *
     * @generated from protobuf enum value: TOO_RECENT_CONVERSION = 9;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["TOO_RECENT_CONVERSION"] = 9] = "TOO_RECENT_CONVERSION";
    /**
     * Restatements cannot be reported for a conversion action that always uses
     * the default value.
     *
     * @generated from protobuf enum value: CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE = 10;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE"] = 10] = "CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE";
    /**
     * The request contained more than 2000 adjustments.
     *
     * @generated from protobuf enum value: TOO_MANY_ADJUSTMENTS_IN_REQUEST = 11;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["TOO_MANY_ADJUSTMENTS_IN_REQUEST"] = 11] = "TOO_MANY_ADJUSTMENTS_IN_REQUEST";
    /**
     * The conversion has been adjusted too many times.
     *
     * @generated from protobuf enum value: TOO_MANY_ADJUSTMENTS = 12;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["TOO_MANY_ADJUSTMENTS"] = 12] = "TOO_MANY_ADJUSTMENTS";
    /**
     * A restatement with this timestamp already exists for this conversion. To
     * upload another adjustment, use a different timestamp.
     *
     * @generated from protobuf enum value: RESTATEMENT_ALREADY_EXISTS = 13;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["RESTATEMENT_ALREADY_EXISTS"] = 13] = "RESTATEMENT_ALREADY_EXISTS";
    /**
     * This adjustment has the same timestamp as another adjustment in the
     * request for this conversion. To upload another adjustment, use a
     * different timestamp.
     *
     * @generated from protobuf enum value: DUPLICATE_ADJUSTMENT_IN_REQUEST = 14;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["DUPLICATE_ADJUSTMENT_IN_REQUEST"] = 14] = "DUPLICATE_ADJUSTMENT_IN_REQUEST";
    /**
     * The customer has not accepted the customer data terms in the conversion
     * settings page.
     *
     * @generated from protobuf enum value: CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS = 15;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS"] = 15] = "CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS";
    /**
     * The enhanced conversion settings of the conversion action supplied is
     * not eligible for enhancements.
     *
     * @generated from protobuf enum value: CONVERSION_ACTION_NOT_ELIGIBLE_FOR_ENHANCEMENT = 16;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CONVERSION_ACTION_NOT_ELIGIBLE_FOR_ENHANCEMENT"] = 16] = "CONVERSION_ACTION_NOT_ELIGIBLE_FOR_ENHANCEMENT";
    /**
     * The provided user identifier is not a SHA-256 hash. It is either unhashed
     * or hashed using a different hash function.
     *
     * @generated from protobuf enum value: INVALID_USER_IDENTIFIER = 17;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["INVALID_USER_IDENTIFIER"] = 17] = "INVALID_USER_IDENTIFIER";
    /**
     * The provided user identifier is not supported.
     * ConversionAdjustmentUploadService only supports hashed_email,
     * hashed_phone_number, and address_info.
     *
     * @generated from protobuf enum value: UNSUPPORTED_USER_IDENTIFIER = 18;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["UNSUPPORTED_USER_IDENTIFIER"] = 18] = "UNSUPPORTED_USER_IDENTIFIER";
    /**
     * Cannot set both gclid_date_time_pair and order_id.
     *
     * @generated from protobuf enum value: GCLID_DATE_TIME_PAIR_AND_ORDER_ID_BOTH_SET = 20;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["GCLID_DATE_TIME_PAIR_AND_ORDER_ID_BOTH_SET"] = 20] = "GCLID_DATE_TIME_PAIR_AND_ORDER_ID_BOTH_SET";
    /**
     * An enhancement with this conversion action and order_id already exists
     * for this conversion.
     *
     * @generated from protobuf enum value: CONVERSION_ALREADY_ENHANCED = 21;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CONVERSION_ALREADY_ENHANCED"] = 21] = "CONVERSION_ALREADY_ENHANCED";
    /**
     * This enhancement has the same conversion action and order_id as
     * another enhancement in the request.
     *
     * @generated from protobuf enum value: DUPLICATE_ENHANCEMENT_IN_REQUEST = 22;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["DUPLICATE_ENHANCEMENT_IN_REQUEST"] = 22] = "DUPLICATE_ENHANCEMENT_IN_REQUEST";
    /**
     * Per our customer data policies, enhancement has been prohibited in your
     * account. If you have any questions, contact your Google
     * representative.
     *
     * @generated from protobuf enum value: CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCEMENT = 23;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCEMENT"] = 23] = "CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCEMENT";
    /**
     * The conversion adjustment is for a conversion action of type WEBPAGE, but
     * does not have an order_id. The order_id is required for an adjustment for
     * a WEBPAGE conversion action.
     *
     * @generated from protobuf enum value: MISSING_ORDER_ID_FOR_WEBPAGE = 24;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["MISSING_ORDER_ID_FOR_WEBPAGE"] = 24] = "MISSING_ORDER_ID_FOR_WEBPAGE";
    /**
     * The order_id contains personally identifiable information (PII), such as
     * an email address or phone number.
     *
     * @generated from protobuf enum value: ORDER_ID_CONTAINS_PII = 25;
     */
    ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError[ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError["ORDER_ID_CONTAINS_PII"] = 25] = "ORDER_ID_CONTAINS_PII";
})(ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = exports.ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError || (exports.ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ConversionAdjustmentUploadErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.ConversionAdjustmentUploadErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.ConversionAdjustmentUploadErrorEnum
 */
exports.ConversionAdjustmentUploadErrorEnum = new ConversionAdjustmentUploadErrorEnum$Type();
//# sourceMappingURL=conversion_adjustment_upload_error.js.map
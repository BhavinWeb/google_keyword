"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeywordPlanErrorEnum = exports.KeywordPlanErrorEnum_KeywordPlanError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible errors from applying a keyword plan.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.KeywordPlanErrorEnum.KeywordPlanError
 */
var KeywordPlanErrorEnum_KeywordPlanError;
(function (KeywordPlanErrorEnum_KeywordPlanError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The plan's bid multiplier value is outside the valid range.
     *
     * @generated from protobuf enum value: BID_MULTIPLIER_OUT_OF_RANGE = 2;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["BID_MULTIPLIER_OUT_OF_RANGE"] = 2] = "BID_MULTIPLIER_OUT_OF_RANGE";
    /**
     * The plan's bid value is too high.
     *
     * @generated from protobuf enum value: BID_TOO_HIGH = 3;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["BID_TOO_HIGH"] = 3] = "BID_TOO_HIGH";
    /**
     * The plan's bid value is too low.
     *
     * @generated from protobuf enum value: BID_TOO_LOW = 4;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["BID_TOO_LOW"] = 4] = "BID_TOO_LOW";
    /**
     * The plan's cpc bid is not a multiple of the minimum billable unit.
     *
     * @generated from protobuf enum value: BID_TOO_MANY_FRACTIONAL_DIGITS = 5;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["BID_TOO_MANY_FRACTIONAL_DIGITS"] = 5] = "BID_TOO_MANY_FRACTIONAL_DIGITS";
    /**
     * The plan's daily budget value is too low.
     *
     * @generated from protobuf enum value: DAILY_BUDGET_TOO_LOW = 6;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["DAILY_BUDGET_TOO_LOW"] = 6] = "DAILY_BUDGET_TOO_LOW";
    /**
     * The plan's daily budget is not a multiple of the minimum billable unit.
     *
     * @generated from protobuf enum value: DAILY_BUDGET_TOO_MANY_FRACTIONAL_DIGITS = 7;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["DAILY_BUDGET_TOO_MANY_FRACTIONAL_DIGITS"] = 7] = "DAILY_BUDGET_TOO_MANY_FRACTIONAL_DIGITS";
    /**
     * The input has an invalid value.
     *
     * @generated from protobuf enum value: INVALID_VALUE = 8;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["INVALID_VALUE"] = 8] = "INVALID_VALUE";
    /**
     * The plan has no keyword.
     *
     * @generated from protobuf enum value: KEYWORD_PLAN_HAS_NO_KEYWORDS = 9;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["KEYWORD_PLAN_HAS_NO_KEYWORDS"] = 9] = "KEYWORD_PLAN_HAS_NO_KEYWORDS";
    /**
     * The plan is not enabled and API cannot provide mutation, forecast or
     * stats.
     *
     * @generated from protobuf enum value: KEYWORD_PLAN_NOT_ENABLED = 10;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["KEYWORD_PLAN_NOT_ENABLED"] = 10] = "KEYWORD_PLAN_NOT_ENABLED";
    /**
     * The requested plan cannot be found for providing forecast or stats.
     *
     * @generated from protobuf enum value: KEYWORD_PLAN_NOT_FOUND = 11;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["KEYWORD_PLAN_NOT_FOUND"] = 11] = "KEYWORD_PLAN_NOT_FOUND";
    /**
     * The plan is missing a cpc bid.
     *
     * @generated from protobuf enum value: MISSING_BID = 13;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["MISSING_BID"] = 13] = "MISSING_BID";
    /**
     * The plan is missing required forecast_period field.
     *
     * @generated from protobuf enum value: MISSING_FORECAST_PERIOD = 14;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["MISSING_FORECAST_PERIOD"] = 14] = "MISSING_FORECAST_PERIOD";
    /**
     * The plan's forecast_period has invalid forecast date range.
     *
     * @generated from protobuf enum value: INVALID_FORECAST_DATE_RANGE = 15;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["INVALID_FORECAST_DATE_RANGE"] = 15] = "INVALID_FORECAST_DATE_RANGE";
    /**
     * The plan's name is invalid.
     *
     * @generated from protobuf enum value: INVALID_NAME = 16;
     */
    KeywordPlanErrorEnum_KeywordPlanError[KeywordPlanErrorEnum_KeywordPlanError["INVALID_NAME"] = 16] = "INVALID_NAME";
})(KeywordPlanErrorEnum_KeywordPlanError = exports.KeywordPlanErrorEnum_KeywordPlanError || (exports.KeywordPlanErrorEnum_KeywordPlanError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.KeywordPlanErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.KeywordPlanErrorEnum
 */
exports.KeywordPlanErrorEnum = new KeywordPlanErrorEnum$Type();
//# sourceMappingURL=keyword_plan_error.js.map
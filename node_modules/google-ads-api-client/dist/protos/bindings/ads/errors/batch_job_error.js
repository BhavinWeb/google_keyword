"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchJobErrorEnum = exports.BatchJobErrorEnum_BatchJobError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible request errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.BatchJobErrorEnum.BatchJobError
 */
var BatchJobErrorEnum_BatchJobError;
(function (BatchJobErrorEnum_BatchJobError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The batch job cannot add more operations or run after it has started
     * running.
     *
     * @generated from protobuf enum value: CANNOT_MODIFY_JOB_AFTER_JOB_STARTS_RUNNING = 2;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["CANNOT_MODIFY_JOB_AFTER_JOB_STARTS_RUNNING"] = 2] = "CANNOT_MODIFY_JOB_AFTER_JOB_STARTS_RUNNING";
    /**
     * The operations for an AddBatchJobOperations request were empty.
     *
     * @generated from protobuf enum value: EMPTY_OPERATIONS = 3;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["EMPTY_OPERATIONS"] = 3] = "EMPTY_OPERATIONS";
    /**
     * The sequence token for an AddBatchJobOperations request was invalid.
     *
     * @generated from protobuf enum value: INVALID_SEQUENCE_TOKEN = 4;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["INVALID_SEQUENCE_TOKEN"] = 4] = "INVALID_SEQUENCE_TOKEN";
    /**
     * Batch job results can only be retrieved once the job is finished.
     *
     * @generated from protobuf enum value: RESULTS_NOT_READY = 5;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["RESULTS_NOT_READY"] = 5] = "RESULTS_NOT_READY";
    /**
     * The page size for ListBatchJobResults was invalid.
     *
     * @generated from protobuf enum value: INVALID_PAGE_SIZE = 6;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["INVALID_PAGE_SIZE"] = 6] = "INVALID_PAGE_SIZE";
    /**
     * The batch job cannot be removed because it has started running.
     *
     * @generated from protobuf enum value: CAN_ONLY_REMOVE_PENDING_JOB = 7;
     */
    BatchJobErrorEnum_BatchJobError[BatchJobErrorEnum_BatchJobError["CAN_ONLY_REMOVE_PENDING_JOB"] = 7] = "CAN_ONLY_REMOVE_PENDING_JOB";
})(BatchJobErrorEnum_BatchJobError = exports.BatchJobErrorEnum_BatchJobError || (exports.BatchJobErrorEnum_BatchJobError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class BatchJobErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.BatchJobErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.BatchJobErrorEnum
 */
exports.BatchJobErrorEnum = new BatchJobErrorEnum$Type();
//# sourceMappingURL=batch_job_error.js.map
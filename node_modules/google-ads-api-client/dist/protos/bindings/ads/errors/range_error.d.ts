import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible range errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.RangeErrorEnum
 */
export interface RangeErrorEnum {
}
/**
 * Enum describing possible range errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.RangeErrorEnum.RangeError
 */
export declare enum RangeErrorEnum_RangeError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Too low.
     *
     * @generated from protobuf enum value: TOO_LOW = 2;
     */
    TOO_LOW = 2,
    /**
     * Too high.
     *
     * @generated from protobuf enum value: TOO_HIGH = 3;
     */
    TOO_HIGH = 3
}
declare class RangeErrorEnum$Type extends MessageType<RangeErrorEnum> {
    constructor();
    create(value?: PartialMessage<RangeErrorEnum>): RangeErrorEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RangeErrorEnum): RangeErrorEnum;
    internalBinaryWrite(message: RangeErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.RangeErrorEnum
 */
export declare const RangeErrorEnum: RangeErrorEnum$Type;
export {};

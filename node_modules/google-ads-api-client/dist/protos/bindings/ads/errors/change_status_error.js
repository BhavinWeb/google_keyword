"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChangeStatusErrorEnum = exports.ChangeStatusErrorEnum_ChangeStatusError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible change status errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.ChangeStatusErrorEnum.ChangeStatusError
 */
var ChangeStatusErrorEnum_ChangeStatusError;
(function (ChangeStatusErrorEnum_ChangeStatusError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    ChangeStatusErrorEnum_ChangeStatusError[ChangeStatusErrorEnum_ChangeStatusError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    ChangeStatusErrorEnum_ChangeStatusError[ChangeStatusErrorEnum_ChangeStatusError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The requested start date is too old.
     *
     * @generated from protobuf enum value: START_DATE_TOO_OLD = 3;
     */
    ChangeStatusErrorEnum_ChangeStatusError[ChangeStatusErrorEnum_ChangeStatusError["START_DATE_TOO_OLD"] = 3] = "START_DATE_TOO_OLD";
    /**
     * The change_status search request must specify a finite range filter
     * on last_change_date_time.
     *
     * @generated from protobuf enum value: CHANGE_DATE_RANGE_INFINITE = 4;
     */
    ChangeStatusErrorEnum_ChangeStatusError[ChangeStatusErrorEnum_ChangeStatusError["CHANGE_DATE_RANGE_INFINITE"] = 4] = "CHANGE_DATE_RANGE_INFINITE";
    /**
     * The change status search request has specified invalid date time filters
     * that can never logically produce any valid results (for example, start
     * time after end time).
     *
     * @generated from protobuf enum value: CHANGE_DATE_RANGE_NEGATIVE = 5;
     */
    ChangeStatusErrorEnum_ChangeStatusError[ChangeStatusErrorEnum_ChangeStatusError["CHANGE_DATE_RANGE_NEGATIVE"] = 5] = "CHANGE_DATE_RANGE_NEGATIVE";
    /**
     * The change_status search request must specify a LIMIT.
     *
     * @generated from protobuf enum value: LIMIT_NOT_SPECIFIED = 6;
     */
    ChangeStatusErrorEnum_ChangeStatusError[ChangeStatusErrorEnum_ChangeStatusError["LIMIT_NOT_SPECIFIED"] = 6] = "LIMIT_NOT_SPECIFIED";
    /**
     * The LIMIT specified by change_status request should be less than or equal
     * to 10K.
     *
     * @generated from protobuf enum value: INVALID_LIMIT_CLAUSE = 7;
     */
    ChangeStatusErrorEnum_ChangeStatusError[ChangeStatusErrorEnum_ChangeStatusError["INVALID_LIMIT_CLAUSE"] = 7] = "INVALID_LIMIT_CLAUSE";
})(ChangeStatusErrorEnum_ChangeStatusError = exports.ChangeStatusErrorEnum_ChangeStatusError || (exports.ChangeStatusErrorEnum_ChangeStatusError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ChangeStatusErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.ChangeStatusErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.ChangeStatusErrorEnum
 */
exports.ChangeStatusErrorEnum = new ChangeStatusErrorEnum$Type();
//# sourceMappingURL=change_status_error.js.map
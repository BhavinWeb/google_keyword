"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeywordPlanAdGroupKeywordErrorEnum = exports.KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible errors from applying a keyword plan ad group
 * keyword or keyword plan campaign keyword.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordError
 */
var KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError;
(function (KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * A keyword or negative keyword has invalid match type.
     *
     * @generated from protobuf enum value: INVALID_KEYWORD_MATCH_TYPE = 2;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["INVALID_KEYWORD_MATCH_TYPE"] = 2] = "INVALID_KEYWORD_MATCH_TYPE";
    /**
     * A keyword or negative keyword with same text and match type already
     * exists.
     *
     * @generated from protobuf enum value: DUPLICATE_KEYWORD = 3;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["DUPLICATE_KEYWORD"] = 3] = "DUPLICATE_KEYWORD";
    /**
     * Keyword or negative keyword text exceeds the allowed limit.
     *
     * @generated from protobuf enum value: KEYWORD_TEXT_TOO_LONG = 4;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["KEYWORD_TEXT_TOO_LONG"] = 4] = "KEYWORD_TEXT_TOO_LONG";
    /**
     * Keyword or negative keyword text has invalid characters or symbols.
     *
     * @generated from protobuf enum value: KEYWORD_HAS_INVALID_CHARS = 5;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["KEYWORD_HAS_INVALID_CHARS"] = 5] = "KEYWORD_HAS_INVALID_CHARS";
    /**
     * Keyword or negative keyword text has too many words.
     *
     * @generated from protobuf enum value: KEYWORD_HAS_TOO_MANY_WORDS = 6;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["KEYWORD_HAS_TOO_MANY_WORDS"] = 6] = "KEYWORD_HAS_TOO_MANY_WORDS";
    /**
     * Keyword or negative keyword has invalid text.
     *
     * @generated from protobuf enum value: INVALID_KEYWORD_TEXT = 7;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["INVALID_KEYWORD_TEXT"] = 7] = "INVALID_KEYWORD_TEXT";
    /**
     * Cpc Bid set for negative keyword.
     *
     * @generated from protobuf enum value: NEGATIVE_KEYWORD_HAS_CPC_BID = 8;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["NEGATIVE_KEYWORD_HAS_CPC_BID"] = 8] = "NEGATIVE_KEYWORD_HAS_CPC_BID";
    /**
     * New broad match modifier (BMM) KpAdGroupKeywords are not allowed.
     *
     * @generated from protobuf enum value: NEW_BMM_KEYWORDS_NOT_ALLOWED = 9;
     */
    KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError[KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError["NEW_BMM_KEYWORDS_NOT_ALLOWED"] = 9] = "NEW_BMM_KEYWORDS_NOT_ALLOWED";
})(KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = exports.KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError || (exports.KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanAdGroupKeywordErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.KeywordPlanAdGroupKeywordErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.KeywordPlanAdGroupKeywordErrorEnum
 */
exports.KeywordPlanAdGroupKeywordErrorEnum = new KeywordPlanAdGroupKeywordErrorEnum$Type();
//# sourceMappingURL=keyword_plan_ad_group_keyword_error.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaFileErrorEnum = exports.MediaFileErrorEnum_MediaFileError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible media file errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.MediaFileErrorEnum.MediaFileError
 */
var MediaFileErrorEnum_MediaFileError;
(function (MediaFileErrorEnum_MediaFileError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * Cannot create a standard icon type.
     *
     * @generated from protobuf enum value: CANNOT_CREATE_STANDARD_ICON = 2;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["CANNOT_CREATE_STANDARD_ICON"] = 2] = "CANNOT_CREATE_STANDARD_ICON";
    /**
     * May only select Standard Icons alone.
     *
     * @generated from protobuf enum value: CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES = 3;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES"] = 3] = "CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES";
    /**
     * Image contains both a media file ID and data.
     *
     * @generated from protobuf enum value: CANNOT_SPECIFY_MEDIA_FILE_ID_AND_DATA = 4;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["CANNOT_SPECIFY_MEDIA_FILE_ID_AND_DATA"] = 4] = "CANNOT_SPECIFY_MEDIA_FILE_ID_AND_DATA";
    /**
     * A media file with given type and reference ID already exists.
     *
     * @generated from protobuf enum value: DUPLICATE_MEDIA = 5;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["DUPLICATE_MEDIA"] = 5] = "DUPLICATE_MEDIA";
    /**
     * A required field was not specified or is an empty string.
     *
     * @generated from protobuf enum value: EMPTY_FIELD = 6;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["EMPTY_FIELD"] = 6] = "EMPTY_FIELD";
    /**
     * A media file may only be modified once per call.
     *
     * @generated from protobuf enum value: RESOURCE_REFERENCED_IN_MULTIPLE_OPS = 7;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["RESOURCE_REFERENCED_IN_MULTIPLE_OPS"] = 7] = "RESOURCE_REFERENCED_IN_MULTIPLE_OPS";
    /**
     * Field is not supported for the media sub type.
     *
     * @generated from protobuf enum value: FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE = 8;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE"] = 8] = "FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE";
    /**
     * The media file ID is invalid.
     *
     * @generated from protobuf enum value: INVALID_MEDIA_FILE_ID = 9;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["INVALID_MEDIA_FILE_ID"] = 9] = "INVALID_MEDIA_FILE_ID";
    /**
     * The media subtype is invalid.
     *
     * @generated from protobuf enum value: INVALID_MEDIA_SUB_TYPE = 10;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["INVALID_MEDIA_SUB_TYPE"] = 10] = "INVALID_MEDIA_SUB_TYPE";
    /**
     * The media file type is invalid.
     *
     * @generated from protobuf enum value: INVALID_MEDIA_FILE_TYPE = 11;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["INVALID_MEDIA_FILE_TYPE"] = 11] = "INVALID_MEDIA_FILE_TYPE";
    /**
     * The mimetype is invalid.
     *
     * @generated from protobuf enum value: INVALID_MIME_TYPE = 12;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["INVALID_MIME_TYPE"] = 12] = "INVALID_MIME_TYPE";
    /**
     * The media reference ID is invalid.
     *
     * @generated from protobuf enum value: INVALID_REFERENCE_ID = 13;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["INVALID_REFERENCE_ID"] = 13] = "INVALID_REFERENCE_ID";
    /**
     * The YouTube video ID is invalid.
     *
     * @generated from protobuf enum value: INVALID_YOU_TUBE_ID = 14;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["INVALID_YOU_TUBE_ID"] = 14] = "INVALID_YOU_TUBE_ID";
    /**
     * Media file has failed transcoding
     *
     * @generated from protobuf enum value: MEDIA_FILE_FAILED_TRANSCODING = 15;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["MEDIA_FILE_FAILED_TRANSCODING"] = 15] = "MEDIA_FILE_FAILED_TRANSCODING";
    /**
     * Media file has not been transcoded.
     *
     * @generated from protobuf enum value: MEDIA_NOT_TRANSCODED = 16;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["MEDIA_NOT_TRANSCODED"] = 16] = "MEDIA_NOT_TRANSCODED";
    /**
     * The media type does not match the actual media file's type.
     *
     * @generated from protobuf enum value: MEDIA_TYPE_DOES_NOT_MATCH_MEDIA_FILE_TYPE = 17;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["MEDIA_TYPE_DOES_NOT_MATCH_MEDIA_FILE_TYPE"] = 17] = "MEDIA_TYPE_DOES_NOT_MATCH_MEDIA_FILE_TYPE";
    /**
     * None of the fields have been specified.
     *
     * @generated from protobuf enum value: NO_FIELDS_SPECIFIED = 18;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["NO_FIELDS_SPECIFIED"] = 18] = "NO_FIELDS_SPECIFIED";
    /**
     * One of reference ID or media file ID must be specified.
     *
     * @generated from protobuf enum value: NULL_REFERENCE_ID_AND_MEDIA_ID = 19;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["NULL_REFERENCE_ID_AND_MEDIA_ID"] = 19] = "NULL_REFERENCE_ID_AND_MEDIA_ID";
    /**
     * The string has too many characters.
     *
     * @generated from protobuf enum value: TOO_LONG = 20;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["TOO_LONG"] = 20] = "TOO_LONG";
    /**
     * The specified type is not supported.
     *
     * @generated from protobuf enum value: UNSUPPORTED_TYPE = 21;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["UNSUPPORTED_TYPE"] = 21] = "UNSUPPORTED_TYPE";
    /**
     * YouTube is unavailable for requesting video data.
     *
     * @generated from protobuf enum value: YOU_TUBE_SERVICE_UNAVAILABLE = 22;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["YOU_TUBE_SERVICE_UNAVAILABLE"] = 22] = "YOU_TUBE_SERVICE_UNAVAILABLE";
    /**
     * The YouTube video has a non positive duration.
     *
     * @generated from protobuf enum value: YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION = 23;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION"] = 23] = "YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION";
    /**
     * The YouTube video ID is syntactically valid but the video was not found.
     *
     * @generated from protobuf enum value: YOU_TUBE_VIDEO_NOT_FOUND = 24;
     */
    MediaFileErrorEnum_MediaFileError[MediaFileErrorEnum_MediaFileError["YOU_TUBE_VIDEO_NOT_FOUND"] = 24] = "YOU_TUBE_VIDEO_NOT_FOUND";
})(MediaFileErrorEnum_MediaFileError = exports.MediaFileErrorEnum_MediaFileError || (exports.MediaFileErrorEnum_MediaFileError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class MediaFileErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.MediaFileErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.MediaFileErrorEnum
 */
exports.MediaFileErrorEnum = new MediaFileErrorEnum$Type();
//# sourceMappingURL=media_file_error.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionValueRuleErrorEnum = exports.ConversionValueRuleErrorEnum_ConversionValueRuleError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible conversion value rule errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.ConversionValueRuleErrorEnum.ConversionValueRuleError
 */
var ConversionValueRuleErrorEnum_ConversionValueRuleError;
(function (ConversionValueRuleErrorEnum_ConversionValueRuleError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The value rule's geo location condition contains invalid geo target
     * constant(s), for example, there's no matching geo target.
     *
     * @generated from protobuf enum value: INVALID_GEO_TARGET_CONSTANT = 2;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["INVALID_GEO_TARGET_CONSTANT"] = 2] = "INVALID_GEO_TARGET_CONSTANT";
    /**
     * The value rule's geo location condition contains conflicting included and
     * excluded geo targets. Specifically, some of the excluded geo target(s)
     * are the same as or contain some of the included geo target(s). For
     * example, the geo location condition includes California but excludes U.S.
     *
     * @generated from protobuf enum value: CONFLICTING_INCLUDED_AND_EXCLUDED_GEO_TARGET = 3;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["CONFLICTING_INCLUDED_AND_EXCLUDED_GEO_TARGET"] = 3] = "CONFLICTING_INCLUDED_AND_EXCLUDED_GEO_TARGET";
    /**
     * User specified conflicting conditions for two value rules in the same
     * value rule set.
     *
     * @generated from protobuf enum value: CONFLICTING_CONDITIONS = 4;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["CONFLICTING_CONDITIONS"] = 4] = "CONFLICTING_CONDITIONS";
    /**
     * The value rule cannot be removed because it's still included in some
     * value rule set.
     *
     * @generated from protobuf enum value: CANNOT_REMOVE_IF_INCLUDED_IN_VALUE_RULE_SET = 5;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["CANNOT_REMOVE_IF_INCLUDED_IN_VALUE_RULE_SET"] = 5] = "CANNOT_REMOVE_IF_INCLUDED_IN_VALUE_RULE_SET";
    /**
     * The value rule contains a condition that's not allowed by the value rule
     * set including this value rule.
     *
     * @generated from protobuf enum value: CONDITION_NOT_ALLOWED = 6;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["CONDITION_NOT_ALLOWED"] = 6] = "CONDITION_NOT_ALLOWED";
    /**
     * The value rule contains a field that should be unset.
     *
     * @generated from protobuf enum value: FIELD_MUST_BE_UNSET = 7;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["FIELD_MUST_BE_UNSET"] = 7] = "FIELD_MUST_BE_UNSET";
    /**
     * Pausing the value rule requires pausing the value rule set because the
     * value rule is (one of) the last enabled in the value rule set.
     *
     * @generated from protobuf enum value: CANNOT_PAUSE_UNLESS_VALUE_RULE_SET_IS_PAUSED = 8;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["CANNOT_PAUSE_UNLESS_VALUE_RULE_SET_IS_PAUSED"] = 8] = "CANNOT_PAUSE_UNLESS_VALUE_RULE_SET_IS_PAUSED";
    /**
     * The value rule's geo location condition contains untargetable geo target
     * constant(s).
     *
     * @generated from protobuf enum value: UNTARGETABLE_GEO_TARGET = 9;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["UNTARGETABLE_GEO_TARGET"] = 9] = "UNTARGETABLE_GEO_TARGET";
    /**
     * The value rule's audience condition contains invalid user list(s). In
     * another word, there's no matching user list.
     *
     * @generated from protobuf enum value: INVALID_AUDIENCE_USER_LIST = 10;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["INVALID_AUDIENCE_USER_LIST"] = 10] = "INVALID_AUDIENCE_USER_LIST";
    /**
     * The value rule's audience condition contains inaccessible user list(s).
     *
     * @generated from protobuf enum value: INACCESSIBLE_USER_LIST = 11;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["INACCESSIBLE_USER_LIST"] = 11] = "INACCESSIBLE_USER_LIST";
    /**
     * The value rule's audience condition contains invalid user_interest(s).
     * This might be because there is no matching user interest, or the user
     * interest is not visible.
     *
     * @generated from protobuf enum value: INVALID_AUDIENCE_USER_INTEREST = 12;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["INVALID_AUDIENCE_USER_INTEREST"] = 12] = "INVALID_AUDIENCE_USER_INTEREST";
    /**
     * When a value rule is created, it shouldn't have REMOVED status.
     *
     * @generated from protobuf enum value: CANNOT_ADD_RULE_WITH_STATUS_REMOVED = 13;
     */
    ConversionValueRuleErrorEnum_ConversionValueRuleError[ConversionValueRuleErrorEnum_ConversionValueRuleError["CANNOT_ADD_RULE_WITH_STATUS_REMOVED"] = 13] = "CANNOT_ADD_RULE_WITH_STATUS_REMOVED";
})(ConversionValueRuleErrorEnum_ConversionValueRuleError = exports.ConversionValueRuleErrorEnum_ConversionValueRuleError || (exports.ConversionValueRuleErrorEnum_ConversionValueRuleError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ConversionValueRuleErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.ConversionValueRuleErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.ConversionValueRuleErrorEnum
 */
exports.ConversionValueRuleErrorEnum = new ConversionValueRuleErrorEnum$Type();
//# sourceMappingURL=conversion_value_rule_error.js.map
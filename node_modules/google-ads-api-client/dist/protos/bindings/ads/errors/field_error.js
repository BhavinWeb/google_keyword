"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FieldErrorEnum = exports.FieldErrorEnum_FieldError = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
/**
 * Enum describing possible field errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.FieldErrorEnum.FieldError
 */
var FieldErrorEnum_FieldError;
(function (FieldErrorEnum_FieldError) {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["UNKNOWN"] = 1] = "UNKNOWN";
    /**
     * The required field was not present.
     *
     * @generated from protobuf enum value: REQUIRED = 2;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["REQUIRED"] = 2] = "REQUIRED";
    /**
     * The field attempted to be mutated is immutable.
     *
     * @generated from protobuf enum value: IMMUTABLE_FIELD = 3;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["IMMUTABLE_FIELD"] = 3] = "IMMUTABLE_FIELD";
    /**
     * The field's value is invalid.
     *
     * @generated from protobuf enum value: INVALID_VALUE = 4;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["INVALID_VALUE"] = 4] = "INVALID_VALUE";
    /**
     * The field cannot be set.
     *
     * @generated from protobuf enum value: VALUE_MUST_BE_UNSET = 5;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["VALUE_MUST_BE_UNSET"] = 5] = "VALUE_MUST_BE_UNSET";
    /**
     * The required repeated field was empty.
     *
     * @generated from protobuf enum value: REQUIRED_NONEMPTY_LIST = 6;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["REQUIRED_NONEMPTY_LIST"] = 6] = "REQUIRED_NONEMPTY_LIST";
    /**
     * The field cannot be cleared.
     *
     * @generated from protobuf enum value: FIELD_CANNOT_BE_CLEARED = 7;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["FIELD_CANNOT_BE_CLEARED"] = 7] = "FIELD_CANNOT_BE_CLEARED";
    /**
     * The field's value is on a deny-list for this field.
     *
     * @generated from protobuf enum value: BLOCKED_VALUE = 9;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["BLOCKED_VALUE"] = 9] = "BLOCKED_VALUE";
    /**
     * The field's value cannot be modified, except for clearing.
     *
     * @generated from protobuf enum value: FIELD_CAN_ONLY_BE_CLEARED = 10;
     */
    FieldErrorEnum_FieldError[FieldErrorEnum_FieldError["FIELD_CAN_ONLY_BE_CLEARED"] = 10] = "FIELD_CAN_ONLY_BE_CLEARED";
})(FieldErrorEnum_FieldError = exports.FieldErrorEnum_FieldError || (exports.FieldErrorEnum_FieldError = {}));
// @generated message type with reflection information, may provide speed optimized methods
class FieldErrorEnum$Type extends runtime_4.MessageType {
    constructor() {
        super("google.ads.googleads.v11.errors.FieldErrorEnum", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_3.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_2.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.FieldErrorEnum
 */
exports.FieldErrorEnum = new FieldErrorEnum$Type();
//# sourceMappingURL=field_error.js.map
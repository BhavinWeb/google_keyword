import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible header errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.HeaderErrorEnum
 */
export interface HeaderErrorEnum {
}
/**
 * Enum describing possible header errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.HeaderErrorEnum.HeaderError
 */
export declare enum HeaderErrorEnum_HeaderError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The login customer ID could not be validated.
     *
     * @generated from protobuf enum value: INVALID_LOGIN_CUSTOMER_ID = 3;
     */
    INVALID_LOGIN_CUSTOMER_ID = 3,
    /**
     * The linked customer ID could not be validated.
     *
     * @generated from protobuf enum value: INVALID_LINKED_CUSTOMER_ID = 7;
     */
    INVALID_LINKED_CUSTOMER_ID = 7
}
declare class HeaderErrorEnum$Type extends MessageType<HeaderErrorEnum> {
    constructor();
    create(value?: PartialMessage<HeaderErrorEnum>): HeaderErrorEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HeaderErrorEnum): HeaderErrorEnum;
    internalBinaryWrite(message: HeaderErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.HeaderErrorEnum
 */
export declare const HeaderErrorEnum: HeaderErrorEnum$Type;
export {};

import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Container for enum describing possible function errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.FunctionErrorEnum
 */
export interface FunctionErrorEnum {
}
/**
 * Enum describing possible function errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.FunctionErrorEnum.FunctionError
 */
export declare enum FunctionErrorEnum_FunctionError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * The format of the function is not recognized as a supported function
     * format.
     *
     * @generated from protobuf enum value: INVALID_FUNCTION_FORMAT = 2;
     */
    INVALID_FUNCTION_FORMAT = 2,
    /**
     * Operand data types do not match.
     *
     * @generated from protobuf enum value: DATA_TYPE_MISMATCH = 3;
     */
    DATA_TYPE_MISMATCH = 3,
    /**
     * The operands cannot be used together in a conjunction.
     *
     * @generated from protobuf enum value: INVALID_CONJUNCTION_OPERANDS = 4;
     */
    INVALID_CONJUNCTION_OPERANDS = 4,
    /**
     * Invalid numer of Operands.
     *
     * @generated from protobuf enum value: INVALID_NUMBER_OF_OPERANDS = 5;
     */
    INVALID_NUMBER_OF_OPERANDS = 5,
    /**
     * Operand Type not supported.
     *
     * @generated from protobuf enum value: INVALID_OPERAND_TYPE = 6;
     */
    INVALID_OPERAND_TYPE = 6,
    /**
     * Operator not supported.
     *
     * @generated from protobuf enum value: INVALID_OPERATOR = 7;
     */
    INVALID_OPERATOR = 7,
    /**
     * Request context type not supported.
     *
     * @generated from protobuf enum value: INVALID_REQUEST_CONTEXT_TYPE = 8;
     */
    INVALID_REQUEST_CONTEXT_TYPE = 8,
    /**
     * The matching function is not allowed for call placeholders
     *
     * @generated from protobuf enum value: INVALID_FUNCTION_FOR_CALL_PLACEHOLDER = 9;
     */
    INVALID_FUNCTION_FOR_CALL_PLACEHOLDER = 9,
    /**
     * The matching function is not allowed for the specified placeholder
     *
     * @generated from protobuf enum value: INVALID_FUNCTION_FOR_PLACEHOLDER = 10;
     */
    INVALID_FUNCTION_FOR_PLACEHOLDER = 10,
    /**
     * Invalid operand.
     *
     * @generated from protobuf enum value: INVALID_OPERAND = 11;
     */
    INVALID_OPERAND = 11,
    /**
     * Missing value for the constant operand.
     *
     * @generated from protobuf enum value: MISSING_CONSTANT_OPERAND_VALUE = 12;
     */
    MISSING_CONSTANT_OPERAND_VALUE = 12,
    /**
     * The value of the constant operand is invalid.
     *
     * @generated from protobuf enum value: INVALID_CONSTANT_OPERAND_VALUE = 13;
     */
    INVALID_CONSTANT_OPERAND_VALUE = 13,
    /**
     * Invalid function nesting.
     *
     * @generated from protobuf enum value: INVALID_NESTING = 14;
     */
    INVALID_NESTING = 14,
    /**
     * The Feed ID was different from another Feed ID in the same function.
     *
     * @generated from protobuf enum value: MULTIPLE_FEED_IDS_NOT_SUPPORTED = 15;
     */
    MULTIPLE_FEED_IDS_NOT_SUPPORTED = 15,
    /**
     * The matching function is invalid for use with a feed with a fixed schema.
     *
     * @generated from protobuf enum value: INVALID_FUNCTION_FOR_FEED_WITH_FIXED_SCHEMA = 16;
     */
    INVALID_FUNCTION_FOR_FEED_WITH_FIXED_SCHEMA = 16,
    /**
     * Invalid attribute name.
     *
     * @generated from protobuf enum value: INVALID_ATTRIBUTE_NAME = 17;
     */
    INVALID_ATTRIBUTE_NAME = 17
}
declare class FunctionErrorEnum$Type extends MessageType<FunctionErrorEnum> {
    constructor();
    create(value?: PartialMessage<FunctionErrorEnum>): FunctionErrorEnum;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FunctionErrorEnum): FunctionErrorEnum;
    internalBinaryWrite(message: FunctionErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.FunctionErrorEnum
 */
export declare const FunctionErrorEnum: FunctionErrorEnum$Type;
export {};

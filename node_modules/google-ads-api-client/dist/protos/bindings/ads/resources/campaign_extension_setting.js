"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CampaignExtensionSetting = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const extension_setting_device_1 = require("../enums/extension_setting_device");
const extension_type_1 = require("../enums/extension_type");
// @generated message type with reflection information, may provide speed optimized methods
class CampaignExtensionSetting$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.CampaignExtensionSetting", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/CampaignExtensionSetting" } } },
            { no: 2, name: "extension_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ExtensionTypeEnum.ExtensionType", extension_type_1.ExtensionTypeEnum_ExtensionType], options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 6, name: "campaign", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 7, name: "extension_feed_items", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/ExtensionFeedItem" } } },
            { no: 5, name: "device", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ExtensionSettingDeviceEnum.ExtensionSettingDevice", extension_setting_device_1.ExtensionSettingDeviceEnum_ExtensionSettingDevice] }
        ], { "google.api.resource": { type: "googleads.googleapis.com/CampaignExtensionSetting", pattern: ["customers/{customer_id}/campaignExtensionSettings/{campaign_id}~{extension_type}"] } });
    }
    create(value) {
        const message = { resourceName: "", extensionType: 0, extensionFeedItems: [], device: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.ExtensionTypeEnum.ExtensionType extension_type */ 2:
                    message.extensionType = reader.int32();
                    break;
                case /* optional string campaign */ 6:
                    message.campaign = reader.string();
                    break;
                case /* repeated string extension_feed_items */ 7:
                    message.extensionFeedItems.push(reader.string());
                    break;
                case /* google.ads.googleads.v11.enums.ExtensionSettingDeviceEnum.ExtensionSettingDevice device */ 5:
                    message.device = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* google.ads.googleads.v11.enums.ExtensionTypeEnum.ExtensionType extension_type = 2; */
        if (message.extensionType !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.extensionType);
        /* optional string campaign = 6; */
        if (message.campaign !== undefined)
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.campaign);
        /* repeated string extension_feed_items = 7; */
        for (let i = 0; i < message.extensionFeedItems.length; i++)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.extensionFeedItems[i]);
        /* google.ads.googleads.v11.enums.ExtensionSettingDeviceEnum.ExtensionSettingDevice device = 5; */
        if (message.device !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.device);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.CampaignExtensionSetting
 */
exports.CampaignExtensionSetting = new CampaignExtensionSetting$Type();
//# sourceMappingURL=campaign_extension_setting.js.map
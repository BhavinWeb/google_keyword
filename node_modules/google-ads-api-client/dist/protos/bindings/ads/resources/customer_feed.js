"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerFeed = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const feed_link_status_1 = require("../enums/feed_link_status");
const matching_function_1 = require("../common/matching_function");
const placeholder_type_1 = require("../enums/placeholder_type");
// @generated message type with reflection information, may provide speed optimized methods
class CustomerFeed$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.CustomerFeed", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/CustomerFeed" } } },
            { no: 6, name: "feed", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Feed" } } },
            { no: 3, name: "placeholder_types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType", placeholder_type_1.PlaceholderTypeEnum_PlaceholderType] },
            { no: 4, name: "matching_function", kind: "message", T: () => matching_function_1.MatchingFunction },
            { no: 5, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedLinkStatusEnum.FeedLinkStatus", feed_link_status_1.FeedLinkStatusEnum_FeedLinkStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/CustomerFeed", pattern: ["customers/{customer_id}/customerFeeds/{feed_id}"] } });
    }
    create(value) {
        const message = { resourceName: "", placeholderTypes: [], status: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional string feed */ 6:
                    message.feed = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_types */ 3:
                    if (wireType === runtime_2.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.placeholderTypes.push(reader.int32());
                    else
                        message.placeholderTypes.push(reader.int32());
                    break;
                case /* google.ads.googleads.v11.common.MatchingFunction matching_function */ 4:
                    message.matchingFunction = matching_function_1.MatchingFunction.internalBinaryRead(reader, reader.uint32(), options, message.matchingFunction);
                    break;
                case /* google.ads.googleads.v11.enums.FeedLinkStatusEnum.FeedLinkStatus status */ 5:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_1.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_2.WireType.LengthDelimited).string(message.resourceName);
        /* optional string feed = 6; */
        if (message.feed !== undefined)
            writer.tag(6, runtime_2.WireType.LengthDelimited).string(message.feed);
        /* repeated google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_types = 3; */
        if (message.placeholderTypes.length) {
            writer.tag(3, runtime_2.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.placeholderTypes.length; i++)
                writer.int32(message.placeholderTypes[i]);
            writer.join();
        }
        /* google.ads.googleads.v11.common.MatchingFunction matching_function = 4; */
        if (message.matchingFunction)
            matching_function_1.MatchingFunction.internalBinaryWrite(message.matchingFunction, writer.tag(4, runtime_2.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.FeedLinkStatusEnum.FeedLinkStatus status = 5; */
        if (message.status !== 0)
            writer.tag(5, runtime_2.WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_1.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.CustomerFeed
 */
exports.CustomerFeed = new CustomerFeed$Type();
//# sourceMappingURL=customer_feed.js.map
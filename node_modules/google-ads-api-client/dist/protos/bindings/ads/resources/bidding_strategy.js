"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BiddingStrategy = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const bidding_1 = require("../common/bidding");
const bidding_2 = require("../common/bidding");
const bidding_3 = require("../common/bidding");
const bidding_4 = require("../common/bidding");
const bidding_5 = require("../common/bidding");
const bidding_6 = require("../common/bidding");
const bidding_7 = require("../common/bidding");
const bidding_strategy_type_1 = require("../enums/bidding_strategy_type");
const bidding_strategy_status_1 = require("../enums/bidding_strategy_status");
// @generated message type with reflection information, may provide speed optimized methods
class BiddingStrategy$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.BiddingStrategy", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/BiddingStrategy" } } },
            { no: 16, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 17, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.BiddingStrategyStatusEnum.BiddingStrategyStatus", bidding_strategy_status_1.BiddingStrategyStatusEnum_BiddingStrategyStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType", bidding_strategy_type_1.BiddingStrategyTypeEnum_BiddingStrategyType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 23, name: "currency_code", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 20, name: "effective_currency_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 18, name: "campaign_count", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 19, name: "non_removed_campaign_count", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "enhanced_cpc", kind: "message", oneof: "scheme", T: () => bidding_7.EnhancedCpc },
            { no: 21, name: "maximize_conversion_value", kind: "message", oneof: "scheme", T: () => bidding_6.MaximizeConversionValue },
            { no: 22, name: "maximize_conversions", kind: "message", oneof: "scheme", T: () => bidding_5.MaximizeConversions },
            { no: 9, name: "target_cpa", kind: "message", oneof: "scheme", T: () => bidding_4.TargetCpa },
            { no: 48, name: "target_impression_share", kind: "message", oneof: "scheme", T: () => bidding_3.TargetImpressionShare },
            { no: 11, name: "target_roas", kind: "message", oneof: "scheme", T: () => bidding_2.TargetRoas },
            { no: 12, name: "target_spend", kind: "message", oneof: "scheme", T: () => bidding_1.TargetSpend }
        ], { "google.api.resource": { type: "googleads.googleapis.com/BiddingStrategy", pattern: ["customers/{customer_id}/biddingStrategies/{bidding_strategy_id}"] } });
    }
    create(value) {
        const message = { resourceName: "", status: 0, type: 0, currencyCode: "", scheme: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 16:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string name */ 17:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.BiddingStrategyStatusEnum.BiddingStrategyStatus status */ 15:
                    message.status = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType type */ 5:
                    message.type = reader.int32();
                    break;
                case /* string currency_code */ 23:
                    message.currencyCode = reader.string();
                    break;
                case /* optional string effective_currency_code */ 20:
                    message.effectiveCurrencyCode = reader.string();
                    break;
                case /* optional int64 campaign_count */ 18:
                    message.campaignCount = reader.int64().toBigInt();
                    break;
                case /* optional int64 non_removed_campaign_count */ 19:
                    message.nonRemovedCampaignCount = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.common.EnhancedCpc enhanced_cpc */ 7:
                    message.scheme = {
                        oneofKind: "enhancedCpc",
                        enhancedCpc: bidding_7.EnhancedCpc.internalBinaryRead(reader, reader.uint32(), options, message.scheme.enhancedCpc)
                    };
                    break;
                case /* google.ads.googleads.v11.common.MaximizeConversionValue maximize_conversion_value */ 21:
                    message.scheme = {
                        oneofKind: "maximizeConversionValue",
                        maximizeConversionValue: bidding_6.MaximizeConversionValue.internalBinaryRead(reader, reader.uint32(), options, message.scheme.maximizeConversionValue)
                    };
                    break;
                case /* google.ads.googleads.v11.common.MaximizeConversions maximize_conversions */ 22:
                    message.scheme = {
                        oneofKind: "maximizeConversions",
                        maximizeConversions: bidding_5.MaximizeConversions.internalBinaryRead(reader, reader.uint32(), options, message.scheme.maximizeConversions)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetCpa target_cpa */ 9:
                    message.scheme = {
                        oneofKind: "targetCpa",
                        targetCpa: bidding_4.TargetCpa.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetCpa)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetImpressionShare target_impression_share */ 48:
                    message.scheme = {
                        oneofKind: "targetImpressionShare",
                        targetImpressionShare: bidding_3.TargetImpressionShare.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetImpressionShare)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetRoas target_roas */ 11:
                    message.scheme = {
                        oneofKind: "targetRoas",
                        targetRoas: bidding_2.TargetRoas.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetRoas)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetSpend target_spend */ 12:
                    message.scheme = {
                        oneofKind: "targetSpend",
                        targetSpend: bidding_1.TargetSpend.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetSpend)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 16; */
        if (message.id !== undefined)
            writer.tag(16, runtime_1.WireType.Varint).int64(message.id);
        /* optional string name = 17; */
        if (message.name !== undefined)
            writer.tag(17, runtime_1.WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.BiddingStrategyStatusEnum.BiddingStrategyStatus status = 15; */
        if (message.status !== 0)
            writer.tag(15, runtime_1.WireType.Varint).int32(message.status);
        /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 5; */
        if (message.type !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.type);
        /* string currency_code = 23; */
        if (message.currencyCode !== "")
            writer.tag(23, runtime_1.WireType.LengthDelimited).string(message.currencyCode);
        /* optional string effective_currency_code = 20; */
        if (message.effectiveCurrencyCode !== undefined)
            writer.tag(20, runtime_1.WireType.LengthDelimited).string(message.effectiveCurrencyCode);
        /* optional int64 campaign_count = 18; */
        if (message.campaignCount !== undefined)
            writer.tag(18, runtime_1.WireType.Varint).int64(message.campaignCount);
        /* optional int64 non_removed_campaign_count = 19; */
        if (message.nonRemovedCampaignCount !== undefined)
            writer.tag(19, runtime_1.WireType.Varint).int64(message.nonRemovedCampaignCount);
        /* google.ads.googleads.v11.common.EnhancedCpc enhanced_cpc = 7; */
        if (message.scheme.oneofKind === "enhancedCpc")
            bidding_7.EnhancedCpc.internalBinaryWrite(message.scheme.enhancedCpc, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.MaximizeConversionValue maximize_conversion_value = 21; */
        if (message.scheme.oneofKind === "maximizeConversionValue")
            bidding_6.MaximizeConversionValue.internalBinaryWrite(message.scheme.maximizeConversionValue, writer.tag(21, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.MaximizeConversions maximize_conversions = 22; */
        if (message.scheme.oneofKind === "maximizeConversions")
            bidding_5.MaximizeConversions.internalBinaryWrite(message.scheme.maximizeConversions, writer.tag(22, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetCpa target_cpa = 9; */
        if (message.scheme.oneofKind === "targetCpa")
            bidding_4.TargetCpa.internalBinaryWrite(message.scheme.targetCpa, writer.tag(9, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetImpressionShare target_impression_share = 48; */
        if (message.scheme.oneofKind === "targetImpressionShare")
            bidding_3.TargetImpressionShare.internalBinaryWrite(message.scheme.targetImpressionShare, writer.tag(48, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetRoas target_roas = 11; */
        if (message.scheme.oneofKind === "targetRoas")
            bidding_2.TargetRoas.internalBinaryWrite(message.scheme.targetRoas, writer.tag(11, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetSpend target_spend = 12; */
        if (message.scheme.oneofKind === "targetSpend")
            bidding_1.TargetSpend.internalBinaryWrite(message.scheme.targetSpend, writer.tag(12, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.BiddingStrategy
 */
exports.BiddingStrategy = new BiddingStrategy$Type();
//# sourceMappingURL=bidding_strategy.js.map
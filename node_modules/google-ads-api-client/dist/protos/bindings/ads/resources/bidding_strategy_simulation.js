"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BiddingStrategySimulation = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const simulation_1 = require("../common/simulation");
const simulation_2 = require("../common/simulation");
const simulation_modification_method_1 = require("../enums/simulation_modification_method");
const simulation_type_1 = require("../enums/simulation_type");
// @generated message type with reflection information, may provide speed optimized methods
class BiddingStrategySimulation$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.BiddingStrategySimulation", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/BiddingStrategySimulation" } } },
            { no: 2, name: "bidding_strategy_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.SimulationTypeEnum.SimulationType", simulation_type_1.SimulationTypeEnum_SimulationType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 4, name: "modification_method", kind: "enum", T: () => ["google.ads.googleads.v11.enums.SimulationModificationMethodEnum.SimulationModificationMethod", simulation_modification_method_1.SimulationModificationMethodEnum_SimulationModificationMethod], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "start_date", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "end_date", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "target_cpa_point_list", kind: "message", oneof: "pointList", T: () => simulation_2.TargetCpaSimulationPointList, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "target_roas_point_list", kind: "message", oneof: "pointList", T: () => simulation_1.TargetRoasSimulationPointList, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/BiddingStrategySimulation", pattern: ["customers/{customer_id}/biddingStrategySimulations/{bidding_strategy_id}~{type}~{modification_method}~{start_date}~{end_date}"] } });
    }
    create(value) {
        const message = { resourceName: "", biddingStrategyId: 0n, type: 0, modificationMethod: 0, startDate: "", endDate: "", pointList: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* int64 bidding_strategy_id */ 2:
                    message.biddingStrategyId = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.SimulationTypeEnum.SimulationType type */ 3:
                    message.type = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.SimulationModificationMethodEnum.SimulationModificationMethod modification_method */ 4:
                    message.modificationMethod = reader.int32();
                    break;
                case /* string start_date */ 5:
                    message.startDate = reader.string();
                    break;
                case /* string end_date */ 6:
                    message.endDate = reader.string();
                    break;
                case /* google.ads.googleads.v11.common.TargetCpaSimulationPointList target_cpa_point_list */ 7:
                    message.pointList = {
                        oneofKind: "targetCpaPointList",
                        targetCpaPointList: simulation_2.TargetCpaSimulationPointList.internalBinaryRead(reader, reader.uint32(), options, message.pointList.targetCpaPointList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetRoasSimulationPointList target_roas_point_list */ 8:
                    message.pointList = {
                        oneofKind: "targetRoasPointList",
                        targetRoasPointList: simulation_1.TargetRoasSimulationPointList.internalBinaryRead(reader, reader.uint32(), options, message.pointList.targetRoasPointList)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* int64 bidding_strategy_id = 2; */
        if (message.biddingStrategyId !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.biddingStrategyId);
        /* google.ads.googleads.v11.enums.SimulationTypeEnum.SimulationType type = 3; */
        if (message.type !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.type);
        /* google.ads.googleads.v11.enums.SimulationModificationMethodEnum.SimulationModificationMethod modification_method = 4; */
        if (message.modificationMethod !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.modificationMethod);
        /* string start_date = 5; */
        if (message.startDate !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.startDate);
        /* string end_date = 6; */
        if (message.endDate !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.endDate);
        /* google.ads.googleads.v11.common.TargetCpaSimulationPointList target_cpa_point_list = 7; */
        if (message.pointList.oneofKind === "targetCpaPointList")
            simulation_2.TargetCpaSimulationPointList.internalBinaryWrite(message.pointList.targetCpaPointList, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetRoasSimulationPointList target_roas_point_list = 8; */
        if (message.pointList.oneofKind === "targetRoasPointList")
            simulation_1.TargetRoasSimulationPointList.internalBinaryWrite(message.pointList.targetRoasPointList, writer.tag(8, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.BiddingStrategySimulation
 */
exports.BiddingStrategySimulation = new BiddingStrategySimulation$Type();
//# sourceMappingURL=bidding_strategy_simulation.js.map
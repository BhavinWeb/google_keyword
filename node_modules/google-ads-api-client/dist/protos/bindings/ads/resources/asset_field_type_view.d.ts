import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AssetFieldTypeEnum_AssetFieldType } from "../enums/asset_field_type";
/**
 * An asset field type view.
 * This view reports non-overcounted metrics for each asset field type when the
 * asset is used as extension.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AssetFieldTypeView
 */
export interface AssetFieldTypeView {
    /**
     * Output only. The resource name of the asset field type view.
     * Asset field type view resource names have the form:
     *
     * `customers/{customer_id}/assetFieldTypeViews/{field_type}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The asset field type of the asset field type view.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType field_type = 3;
     */
    fieldType: AssetFieldTypeEnum_AssetFieldType;
}
declare class AssetFieldTypeView$Type extends MessageType<AssetFieldTypeView> {
    constructor();
    create(value?: PartialMessage<AssetFieldTypeView>): AssetFieldTypeView;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssetFieldTypeView): AssetFieldTypeView;
    internalBinaryWrite(message: AssetFieldTypeView, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AssetFieldTypeView
 */
export declare const AssetFieldTypeView: AssetFieldTypeView$Type;
export {};

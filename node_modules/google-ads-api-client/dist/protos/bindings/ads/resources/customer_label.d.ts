import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Represents a relationship between a customer and a label. This customer may
 * not have access to all the labels attached to it. Additional CustomerLabels
 * may be returned by increasing permissions with login-customer-id.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.CustomerLabel
 */
export interface CustomerLabel {
    /**
     * Immutable. Name of the resource.
     * Customer label resource names have the form:
     * `customers/{customer_id}/customerLabels/{label_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The resource name of the customer to which the label is attached.
     * Read only.
     *
     * @generated from protobuf field: optional string customer = 4;
     */
    customer?: string;
    /**
     * Output only. The resource name of the label assigned to the customer.
     *
     * Note: the Customer ID portion of the label resource name is not
     * validated when creating a new CustomerLabel.
     *
     * @generated from protobuf field: optional string label = 5;
     */
    label?: string;
}
declare class CustomerLabel$Type extends MessageType<CustomerLabel> {
    constructor();
    create(value?: PartialMessage<CustomerLabel>): CustomerLabel;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomerLabel): CustomerLabel;
    internalBinaryWrite(message: CustomerLabel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.CustomerLabel
 */
export declare const CustomerLabel: CustomerLabel$Type;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdGroupAdAssetPolicySummary = exports.AdGroupAdAssetView = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const policy_approval_status_1 = require("../enums/policy_approval_status");
const policy_review_status_1 = require("../enums/policy_review_status");
const policy_1 = require("../common/policy");
const asset_performance_label_1 = require("../enums/asset_performance_label");
const asset_field_type_1 = require("../enums/asset_field_type");
// @generated message type with reflection information, may provide speed optimized methods
class AdGroupAdAssetView$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AdGroupAdAssetView", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/AdGroupAdAssetView" } } },
            { no: 9, name: "ad_group_ad", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/AdGroupAd" } } },
            { no: 10, name: "asset", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/Asset" } } },
            { no: 2, name: "field_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType", asset_field_type_1.AssetFieldTypeEnum_AssetFieldType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "enabled", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "policy_summary", kind: "message", T: () => exports.AdGroupAdAssetPolicySummary, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 4, name: "performance_label", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AssetPerformanceLabelEnum.AssetPerformanceLabel", asset_performance_label_1.AssetPerformanceLabelEnum_AssetPerformanceLabel], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/AdGroupAdAssetView", pattern: ["customers/{customer_id}/adGroupAdAssetViews/{ad_group_id}~{ad_id}~{asset_id}~{field_type}"] } });
    }
    create(value) {
        const message = { resourceName: "", fieldType: 0, performanceLabel: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional string ad_group_ad */ 9:
                    message.adGroupAd = reader.string();
                    break;
                case /* optional string asset */ 10:
                    message.asset = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType field_type */ 2:
                    message.fieldType = reader.int32();
                    break;
                case /* optional bool enabled */ 8:
                    message.enabled = reader.bool();
                    break;
                case /* google.ads.googleads.v11.resources.AdGroupAdAssetPolicySummary policy_summary */ 3:
                    message.policySummary = exports.AdGroupAdAssetPolicySummary.internalBinaryRead(reader, reader.uint32(), options, message.policySummary);
                    break;
                case /* google.ads.googleads.v11.enums.AssetPerformanceLabelEnum.AssetPerformanceLabel performance_label */ 4:
                    message.performanceLabel = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* optional string ad_group_ad = 9; */
        if (message.adGroupAd !== undefined)
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.adGroupAd);
        /* optional string asset = 10; */
        if (message.asset !== undefined)
            writer.tag(10, runtime_1.WireType.LengthDelimited).string(message.asset);
        /* google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType field_type = 2; */
        if (message.fieldType !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.fieldType);
        /* optional bool enabled = 8; */
        if (message.enabled !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).bool(message.enabled);
        /* google.ads.googleads.v11.resources.AdGroupAdAssetPolicySummary policy_summary = 3; */
        if (message.policySummary)
            exports.AdGroupAdAssetPolicySummary.internalBinaryWrite(message.policySummary, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.AssetPerformanceLabelEnum.AssetPerformanceLabel performance_label = 4; */
        if (message.performanceLabel !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.performanceLabel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AdGroupAdAssetView
 */
exports.AdGroupAdAssetView = new AdGroupAdAssetView$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdGroupAdAssetPolicySummary$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AdGroupAdAssetPolicySummary", [
            { no: 1, name: "policy_topic_entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => policy_1.PolicyTopicEntry, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 2, name: "review_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PolicyReviewStatusEnum.PolicyReviewStatus", policy_review_status_1.PolicyReviewStatusEnum_PolicyReviewStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "approval_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus", policy_approval_status_1.PolicyApprovalStatusEnum_PolicyApprovalStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = { policyTopicEntries: [], reviewStatus: 0, approvalStatus: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.PolicyTopicEntry policy_topic_entries */ 1:
                    message.policyTopicEntries.push(policy_1.PolicyTopicEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.PolicyReviewStatusEnum.PolicyReviewStatus review_status */ 2:
                    message.reviewStatus = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus approval_status */ 3:
                    message.approvalStatus = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.PolicyTopicEntry policy_topic_entries = 1; */
        for (let i = 0; i < message.policyTopicEntries.length; i++)
            policy_1.PolicyTopicEntry.internalBinaryWrite(message.policyTopicEntries[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.PolicyReviewStatusEnum.PolicyReviewStatus review_status = 2; */
        if (message.reviewStatus !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.reviewStatus);
        /* google.ads.googleads.v11.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus approval_status = 3; */
        if (message.approvalStatus !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.approvalStatus);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AdGroupAdAssetPolicySummary
 */
exports.AdGroupAdAssetPolicySummary = new AdGroupAdAssetPolicySummary$Type();
//# sourceMappingURL=ad_group_ad_asset_view.js.map
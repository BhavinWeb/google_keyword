"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessibleBiddingStrategy_TargetSpend = exports.AccessibleBiddingStrategy_TargetRoas = exports.AccessibleBiddingStrategy_TargetImpressionShare = exports.AccessibleBiddingStrategy_TargetCpa = exports.AccessibleBiddingStrategy_MaximizeConversions = exports.AccessibleBiddingStrategy_MaximizeConversionValue = exports.AccessibleBiddingStrategy = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const target_impression_share_location_1 = require("../enums/target_impression_share_location");
const bidding_strategy_type_1 = require("../enums/bidding_strategy_type");
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/AccessibleBiddingStrategy" } } },
            { no: 2, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 4, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType", bidding_strategy_type_1.BiddingStrategyTypeEnum_BiddingStrategyType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "owner_customer_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "owner_descriptive_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "maximize_conversion_value", kind: "message", oneof: "scheme", T: () => exports.AccessibleBiddingStrategy_MaximizeConversionValue, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "maximize_conversions", kind: "message", oneof: "scheme", T: () => exports.AccessibleBiddingStrategy_MaximizeConversions, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 9, name: "target_cpa", kind: "message", oneof: "scheme", T: () => exports.AccessibleBiddingStrategy_TargetCpa, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "target_impression_share", kind: "message", oneof: "scheme", T: () => exports.AccessibleBiddingStrategy_TargetImpressionShare, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 11, name: "target_roas", kind: "message", oneof: "scheme", T: () => exports.AccessibleBiddingStrategy_TargetRoas, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 12, name: "target_spend", kind: "message", oneof: "scheme", T: () => exports.AccessibleBiddingStrategy_TargetSpend, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/AccessibleBiddingStrategy", pattern: ["customers/{customer_id}/accessibleBiddingStrategies/{bidding_strategy_id}"] } });
    }
    create(value) {
        const message = { resourceName: "", id: 0n, name: "", type: 0, ownerCustomerId: 0n, ownerDescriptiveName: "", scheme: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* int64 id */ 2:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType type */ 4:
                    message.type = reader.int32();
                    break;
                case /* int64 owner_customer_id */ 5:
                    message.ownerCustomerId = reader.int64().toBigInt();
                    break;
                case /* string owner_descriptive_name */ 6:
                    message.ownerDescriptiveName = reader.string();
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue maximize_conversion_value */ 7:
                    message.scheme = {
                        oneofKind: "maximizeConversionValue",
                        maximizeConversionValue: exports.AccessibleBiddingStrategy_MaximizeConversionValue.internalBinaryRead(reader, reader.uint32(), options, message.scheme.maximizeConversionValue)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions maximize_conversions */ 8:
                    message.scheme = {
                        oneofKind: "maximizeConversions",
                        maximizeConversions: exports.AccessibleBiddingStrategy_MaximizeConversions.internalBinaryRead(reader, reader.uint32(), options, message.scheme.maximizeConversions)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa target_cpa */ 9:
                    message.scheme = {
                        oneofKind: "targetCpa",
                        targetCpa: exports.AccessibleBiddingStrategy_TargetCpa.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetCpa)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare target_impression_share */ 10:
                    message.scheme = {
                        oneofKind: "targetImpressionShare",
                        targetImpressionShare: exports.AccessibleBiddingStrategy_TargetImpressionShare.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetImpressionShare)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas target_roas */ 11:
                    message.scheme = {
                        oneofKind: "targetRoas",
                        targetRoas: exports.AccessibleBiddingStrategy_TargetRoas.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetRoas)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend target_spend */ 12:
                    message.scheme = {
                        oneofKind: "targetSpend",
                        targetSpend: exports.AccessibleBiddingStrategy_TargetSpend.internalBinaryRead(reader, reader.uint32(), options, message.scheme.targetSpend)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* int64 id = 2; */
        if (message.id !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.id);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 4; */
        if (message.type !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.type);
        /* int64 owner_customer_id = 5; */
        if (message.ownerCustomerId !== 0n)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.ownerCustomerId);
        /* string owner_descriptive_name = 6; */
        if (message.ownerDescriptiveName !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.ownerDescriptiveName);
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue maximize_conversion_value = 7; */
        if (message.scheme.oneofKind === "maximizeConversionValue")
            exports.AccessibleBiddingStrategy_MaximizeConversionValue.internalBinaryWrite(message.scheme.maximizeConversionValue, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions maximize_conversions = 8; */
        if (message.scheme.oneofKind === "maximizeConversions")
            exports.AccessibleBiddingStrategy_MaximizeConversions.internalBinaryWrite(message.scheme.maximizeConversions, writer.tag(8, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa target_cpa = 9; */
        if (message.scheme.oneofKind === "targetCpa")
            exports.AccessibleBiddingStrategy_TargetCpa.internalBinaryWrite(message.scheme.targetCpa, writer.tag(9, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare target_impression_share = 10; */
        if (message.scheme.oneofKind === "targetImpressionShare")
            exports.AccessibleBiddingStrategy_TargetImpressionShare.internalBinaryWrite(message.scheme.targetImpressionShare, writer.tag(10, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas target_roas = 11; */
        if (message.scheme.oneofKind === "targetRoas")
            exports.AccessibleBiddingStrategy_TargetRoas.internalBinaryWrite(message.scheme.targetRoas, writer.tag(11, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend target_spend = 12; */
        if (message.scheme.oneofKind === "targetSpend")
            exports.AccessibleBiddingStrategy_TargetSpend.internalBinaryWrite(message.scheme.targetSpend, writer.tag(12, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy
 */
exports.AccessibleBiddingStrategy = new AccessibleBiddingStrategy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_MaximizeConversionValue$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue", [
            { no: 1, name: "target_roas", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = { targetRoas: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* double target_roas */ 1:
                    message.targetRoas = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* double target_roas = 1; */
        if (message.targetRoas !== 0)
            writer.tag(1, runtime_1.WireType.Bit64).double(message.targetRoas);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue
 */
exports.AccessibleBiddingStrategy_MaximizeConversionValue = new AccessibleBiddingStrategy_MaximizeConversionValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_MaximizeConversions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions", [
            { no: 2, name: "target_cpa_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = { targetCpaMicros: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 target_cpa_micros */ 2:
                    message.targetCpaMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 target_cpa_micros = 2; */
        if (message.targetCpaMicros !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.targetCpaMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions
 */
exports.AccessibleBiddingStrategy_MaximizeConversions = new AccessibleBiddingStrategy_MaximizeConversions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetCpa$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa", [
            { no: 1, name: "target_cpa_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 target_cpa_micros */ 1:
                    message.targetCpaMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 target_cpa_micros = 1; */
        if (message.targetCpaMicros !== undefined)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.targetCpaMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa
 */
exports.AccessibleBiddingStrategy_TargetCpa = new AccessibleBiddingStrategy_TargetCpa$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetImpressionShare$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare", [
            { no: 1, name: "location", kind: "enum", T: () => ["google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation", target_impression_share_location_1.TargetImpressionShareLocationEnum_TargetImpressionShareLocation], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 2, name: "location_fraction_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = { location: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location */ 1:
                    message.location = reader.int32();
                    break;
                case /* optional int64 location_fraction_micros */ 2:
                    message.locationFractionMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 3:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location = 1; */
        if (message.location !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.location);
        /* optional int64 location_fraction_micros = 2; */
        if (message.locationFractionMicros !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.locationFractionMicros);
        /* optional int64 cpc_bid_ceiling_micros = 3; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare
 */
exports.AccessibleBiddingStrategy_TargetImpressionShare = new AccessibleBiddingStrategy_TargetImpressionShare$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetRoas$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas", [
            { no: 1, name: "target_roas", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double target_roas */ 1:
                    message.targetRoas = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional double target_roas = 1; */
        if (message.targetRoas !== undefined)
            writer.tag(1, runtime_1.WireType.Bit64).double(message.targetRoas);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas
 */
exports.AccessibleBiddingStrategy_TargetRoas = new AccessibleBiddingStrategy_TargetRoas$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetSpend$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend", [
            { no: 1, name: "target_spend_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 2, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 target_spend_micros = 1 [deprecated = true];*/ 1:
                    message.targetSpendMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 2:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 target_spend_micros = 1 [deprecated = true]; */
        if (message.targetSpendMicros !== undefined)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.targetSpendMicros);
        /* optional int64 cpc_bid_ceiling_micros = 2; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.cpcBidCeilingMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend
 */
exports.AccessibleBiddingStrategy_TargetSpend = new AccessibleBiddingStrategy_TargetSpend$Type();
//# sourceMappingURL=accessible_bidding_strategy.js.map
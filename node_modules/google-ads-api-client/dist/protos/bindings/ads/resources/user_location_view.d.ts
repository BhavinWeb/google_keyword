import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * A user location view.
 *
 * User Location View includes all metrics aggregated at the country level,
 * one row per country. It reports metrics at the actual physical location of
 * the user by targeted or not targeted location. If other segment fields are
 * used, you may get more than one row per country.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.UserLocationView
 */
export interface UserLocationView {
    /**
     * Output only. The resource name of the user location view.
     * UserLocation view resource names have the form:
     *
     * `customers/{customer_id}/userLocationViews/{country_criterion_id}~{targeting_location}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. Criterion Id for the country.
     *
     * @generated from protobuf field: optional int64 country_criterion_id = 4;
     */
    countryCriterionId?: bigint;
    /**
     * Output only. Indicates whether location was targeted or not.
     *
     * @generated from protobuf field: optional bool targeting_location = 5;
     */
    targetingLocation?: boolean;
}
declare class UserLocationView$Type extends MessageType<UserLocationView> {
    constructor();
    create(value?: PartialMessage<UserLocationView>): UserLocationView;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserLocationView): UserLocationView;
    internalBinaryWrite(message: UserLocationView, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.UserLocationView
 */
export declare const UserLocationView: UserLocationView$Type;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaVideo = exports.MediaAudio = exports.MediaBundle = exports.MediaImage = exports.MediaFile = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const mime_type_1 = require("../enums/mime_type");
const media_type_1 = require("../enums/media_type");
// @generated message type with reflection information, may provide speed optimized methods
class MediaFile$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaFile", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/MediaFile" } } },
            { no: 12, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.MediaTypeEnum.MediaType", media_type_1.MediaTypeEnum_MediaType], options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 6, name: "mime_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.MimeTypeEnum.MimeType", mime_type_1.MimeTypeEnum_MimeType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 13, name: "source_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 14, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 15, name: "file_size", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "image", kind: "message", oneof: "mediatype", T: () => exports.MediaImage, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 4, name: "media_bundle", kind: "message", oneof: "mediatype", T: () => exports.MediaBundle, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 10, name: "audio", kind: "message", oneof: "mediatype", T: () => exports.MediaAudio, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 11, name: "video", kind: "message", oneof: "mediatype", T: () => exports.MediaVideo, options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/MediaFile", pattern: ["customers/{customer_id}/mediaFiles/{media_file_id}"] } });
    }
    create(value) {
        const message = { resourceName: "", type: 0, mimeType: 0, mediatype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 12:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.MediaTypeEnum.MediaType type */ 5:
                    message.type = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.MimeTypeEnum.MimeType mime_type */ 6:
                    message.mimeType = reader.int32();
                    break;
                case /* optional string source_url */ 13:
                    message.sourceUrl = reader.string();
                    break;
                case /* optional string name */ 14:
                    message.name = reader.string();
                    break;
                case /* optional int64 file_size */ 15:
                    message.fileSize = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.resources.MediaImage image */ 3:
                    message.mediatype = {
                        oneofKind: "image",
                        image: exports.MediaImage.internalBinaryRead(reader, reader.uint32(), options, message.mediatype.image)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.MediaBundle media_bundle */ 4:
                    message.mediatype = {
                        oneofKind: "mediaBundle",
                        mediaBundle: exports.MediaBundle.internalBinaryRead(reader, reader.uint32(), options, message.mediatype.mediaBundle)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.MediaAudio audio */ 10:
                    message.mediatype = {
                        oneofKind: "audio",
                        audio: exports.MediaAudio.internalBinaryRead(reader, reader.uint32(), options, message.mediatype.audio)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.MediaVideo video */ 11:
                    message.mediatype = {
                        oneofKind: "video",
                        video: exports.MediaVideo.internalBinaryRead(reader, reader.uint32(), options, message.mediatype.video)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 12; */
        if (message.id !== undefined)
            writer.tag(12, runtime_1.WireType.Varint).int64(message.id);
        /* google.ads.googleads.v11.enums.MediaTypeEnum.MediaType type = 5; */
        if (message.type !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.type);
        /* google.ads.googleads.v11.enums.MimeTypeEnum.MimeType mime_type = 6; */
        if (message.mimeType !== 0)
            writer.tag(6, runtime_1.WireType.Varint).int32(message.mimeType);
        /* optional string source_url = 13; */
        if (message.sourceUrl !== undefined)
            writer.tag(13, runtime_1.WireType.LengthDelimited).string(message.sourceUrl);
        /* optional string name = 14; */
        if (message.name !== undefined)
            writer.tag(14, runtime_1.WireType.LengthDelimited).string(message.name);
        /* optional int64 file_size = 15; */
        if (message.fileSize !== undefined)
            writer.tag(15, runtime_1.WireType.Varint).int64(message.fileSize);
        /* google.ads.googleads.v11.resources.MediaImage image = 3; */
        if (message.mediatype.oneofKind === "image")
            exports.MediaImage.internalBinaryWrite(message.mediatype.image, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.MediaBundle media_bundle = 4; */
        if (message.mediatype.oneofKind === "mediaBundle")
            exports.MediaBundle.internalBinaryWrite(message.mediatype.mediaBundle, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.MediaAudio audio = 10; */
        if (message.mediatype.oneofKind === "audio")
            exports.MediaAudio.internalBinaryWrite(message.mediatype.audio, writer.tag(10, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.MediaVideo video = 11; */
        if (message.mediatype.oneofKind === "video")
            exports.MediaVideo.internalBinaryWrite(message.mediatype.video, writer.tag(11, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaFile
 */
exports.MediaFile = new MediaFile$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaImage$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaImage", [
            { no: 4, name: "data", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 2, name: "full_size_image_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "preview_size_image_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bytes data */ 4:
                    message.data = reader.bytes();
                    break;
                case /* optional string full_size_image_url */ 2:
                    message.fullSizeImageUrl = reader.string();
                    break;
                case /* optional string preview_size_image_url */ 3:
                    message.previewSizeImageUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional bytes data = 4; */
        if (message.data !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).bytes(message.data);
        /* optional string full_size_image_url = 2; */
        if (message.fullSizeImageUrl !== undefined)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.fullSizeImageUrl);
        /* optional string preview_size_image_url = 3; */
        if (message.previewSizeImageUrl !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.previewSizeImageUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaImage
 */
exports.MediaImage = new MediaImage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaBundle$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaBundle", [
            { no: 3, name: "data", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 2, name: "url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bytes data */ 3:
                    message.data = reader.bytes();
                    break;
                case /* optional string url */ 2:
                    message.url = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional bytes data = 3; */
        if (message.data !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).bytes(message.data);
        /* optional string url = 2; */
        if (message.url !== undefined)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.url);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaBundle
 */
exports.MediaBundle = new MediaBundle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaAudio$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaAudio", [
            { no: 2, name: "ad_duration_millis", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 ad_duration_millis */ 2:
                    message.adDurationMillis = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 ad_duration_millis = 2; */
        if (message.adDurationMillis !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.adDurationMillis);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaAudio
 */
exports.MediaAudio = new MediaAudio$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaVideo$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaVideo", [
            { no: 5, name: "ad_duration_millis", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "youtube_video_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 7, name: "advertising_id_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "isci_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 ad_duration_millis */ 5:
                    message.adDurationMillis = reader.int64().toBigInt();
                    break;
                case /* optional string youtube_video_id */ 6:
                    message.youtubeVideoId = reader.string();
                    break;
                case /* optional string advertising_id_code */ 7:
                    message.advertisingIdCode = reader.string();
                    break;
                case /* optional string isci_code */ 8:
                    message.isciCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 ad_duration_millis = 5; */
        if (message.adDurationMillis !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.adDurationMillis);
        /* optional string youtube_video_id = 6; */
        if (message.youtubeVideoId !== undefined)
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.youtubeVideoId);
        /* optional string advertising_id_code = 7; */
        if (message.advertisingIdCode !== undefined)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.advertisingIdCode);
        /* optional string isci_code = 8; */
        if (message.isciCode !== undefined)
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.isciCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaVideo
 */
exports.MediaVideo = new MediaVideo$Type();
//# sourceMappingURL=media_file.js.map
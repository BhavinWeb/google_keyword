import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CriterionCategoryAvailability } from "../common/criterion_category_availability";
/**
 * A life event: a particular interest-based vertical to be targeted to reach
 * users when they are in the midst of important life milestones.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.LifeEvent
 */
export interface LifeEvent {
    /**
     * Output only. The resource name of the life event.
     * Life event resource names have the form:
     *
     * `customers/{customer_id}/lifeEvents/{life_event_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The ID of the life event.
     *
     * @generated from protobuf field: int64 id = 2;
     */
    id: bigint;
    /**
     * Output only. The name of the life event, for example,"Recently Moved"
     *
     * @generated from protobuf field: string name = 3;
     */
    name: string;
    /**
     * Output only. The parent of the life_event.
     *
     * @generated from protobuf field: string parent = 4;
     */
    parent: string;
    /**
     * Output only. True if the life event is launched to all channels and locales.
     *
     * @generated from protobuf field: bool launched_to_all = 5;
     */
    launchedToAll: boolean;
    /**
     * Output only. Availability information of the life event.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.CriterionCategoryAvailability availabilities = 6;
     */
    availabilities: CriterionCategoryAvailability[];
}
declare class LifeEvent$Type extends MessageType<LifeEvent> {
    constructor();
    create(value?: PartialMessage<LifeEvent>): LifeEvent;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LifeEvent): LifeEvent;
    internalBinaryWrite(message: LifeEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.LifeEvent
 */
export declare const LifeEvent: LifeEvent$Type;
export {};

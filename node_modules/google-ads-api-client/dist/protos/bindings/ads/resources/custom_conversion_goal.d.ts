import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CustomConversionGoalStatusEnum_CustomConversionGoalStatus } from "../enums/custom_conversion_goal_status";
/**
 * Custom conversion goal that can make arbitrary conversion actions biddable.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.CustomConversionGoal
 */
export interface CustomConversionGoal {
    /**
     * Immutable. The resource name of the custom conversion goal.
     * Custom conversion goal resource names have the form:
     *
     * `customers/{customer_id}/customConversionGoals/{goal_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Immutable. The ID for this custom conversion goal.
     *
     * @generated from protobuf field: int64 id = 2;
     */
    id: bigint;
    /**
     * The name for this custom conversion goal.
     *
     * @generated from protobuf field: string name = 3;
     */
    name: string;
    /**
     * Conversion actions that the custom conversion goal makes biddable.
     *
     * @generated from protobuf field: repeated string conversion_actions = 4;
     */
    conversionActions: string[];
    /**
     * The status of the custom conversion goal.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CustomConversionGoalStatusEnum.CustomConversionGoalStatus status = 5;
     */
    status: CustomConversionGoalStatusEnum_CustomConversionGoalStatus;
}
declare class CustomConversionGoal$Type extends MessageType<CustomConversionGoal> {
    constructor();
    create(value?: PartialMessage<CustomConversionGoal>): CustomConversionGoal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomConversionGoal): CustomConversionGoal;
    internalBinaryWrite(message: CustomConversionGoal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.CustomConversionGoal
 */
export declare const CustomConversionGoal: CustomConversionGoal$Type;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HotelReconciliation = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const hotel_reconciliation_status_1 = require("../enums/hotel_reconciliation_status");
// @generated message type with reflection information, may provide speed optimized methods
class HotelReconciliation$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.resources.HotelReconciliation", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/HotelReconciliation" } } },
            { no: 2, name: "commission_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED", "OUTPUT_ONLY"] } },
            { no: 3, name: "order_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 11, name: "campaign", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 4, name: "hotel_center_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "hotel_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "check_in_date", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "check_out_date", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "reconciled_value_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["REQUIRED", "OUTPUT_ONLY"] } },
            { no: 9, name: "billed", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.HotelReconciliationStatusEnum.HotelReconciliationStatus", hotel_reconciliation_status_1.HotelReconciliationStatusEnum_HotelReconciliationStatus], options: { "google.api.field_behavior": ["REQUIRED", "OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/HotelReconciliation", pattern: ["customers/{customer_id}/hotelReconciliations/{commission_id}"] } });
    }
    create(value) {
        const message = { resourceName: "", commissionId: "", orderId: "", campaign: "", hotelCenterId: 0n, hotelId: "", checkInDate: "", checkOutDate: "", reconciledValueMicros: 0n, billed: false, status: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* string commission_id */ 2:
                    message.commissionId = reader.string();
                    break;
                case /* string order_id */ 3:
                    message.orderId = reader.string();
                    break;
                case /* string campaign */ 11:
                    message.campaign = reader.string();
                    break;
                case /* int64 hotel_center_id */ 4:
                    message.hotelCenterId = reader.int64().toBigInt();
                    break;
                case /* string hotel_id */ 5:
                    message.hotelId = reader.string();
                    break;
                case /* string check_in_date */ 6:
                    message.checkInDate = reader.string();
                    break;
                case /* string check_out_date */ 7:
                    message.checkOutDate = reader.string();
                    break;
                case /* int64 reconciled_value_micros */ 8:
                    message.reconciledValueMicros = reader.int64().toBigInt();
                    break;
                case /* bool billed */ 9:
                    message.billed = reader.bool();
                    break;
                case /* google.ads.googleads.v11.enums.HotelReconciliationStatusEnum.HotelReconciliationStatus status */ 10:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* string commission_id = 2; */
        if (message.commissionId !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.commissionId);
        /* string order_id = 3; */
        if (message.orderId !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.orderId);
        /* string campaign = 11; */
        if (message.campaign !== "")
            writer.tag(11, runtime_1.WireType.LengthDelimited).string(message.campaign);
        /* int64 hotel_center_id = 4; */
        if (message.hotelCenterId !== 0n)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.hotelCenterId);
        /* string hotel_id = 5; */
        if (message.hotelId !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.hotelId);
        /* string check_in_date = 6; */
        if (message.checkInDate !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.checkInDate);
        /* string check_out_date = 7; */
        if (message.checkOutDate !== "")
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.checkOutDate);
        /* int64 reconciled_value_micros = 8; */
        if (message.reconciledValueMicros !== 0n)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.reconciledValueMicros);
        /* bool billed = 9; */
        if (message.billed !== false)
            writer.tag(9, runtime_1.WireType.Varint).bool(message.billed);
        /* google.ads.googleads.v11.enums.HotelReconciliationStatusEnum.HotelReconciliationStatus status = 10; */
        if (message.status !== 0)
            writer.tag(10, runtime_1.WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.HotelReconciliation
 */
exports.HotelReconciliation = new HotelReconciliation$Type();
//# sourceMappingURL=hotel_reconciliation.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerNegativeCriterionServiceClient = void 0;
const customer_negative_criterion_service_1 = require("./customer_negative_criterion_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the Customer Negative Criterion service.
/**
 * Service to manage customer negative criteria.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.CustomerNegativeCriterionService
 */
class CustomerNegativeCriterionServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = customer_negative_criterion_service_1.CustomerNegativeCriterionService.typeName;
        this.methods = customer_negative_criterion_service_1.CustomerNegativeCriterionService.methods;
        this.options = customer_negative_criterion_service_1.CustomerNegativeCriterionService.options;
    }
    /**
     * Creates or removes criteria. Operation statuses are returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [CriterionError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: MutateCustomerNegativeCriteria(google.ads.googleads.v11.services.MutateCustomerNegativeCriteriaRequest) returns (google.ads.googleads.v11.services.MutateCustomerNegativeCriteriaResponse);
     */
    mutateCustomerNegativeCriteria(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.CustomerNegativeCriterionServiceClient = CustomerNegativeCriterionServiceClient;
//# sourceMappingURL=customer_negative_criterion_service.client.js.map
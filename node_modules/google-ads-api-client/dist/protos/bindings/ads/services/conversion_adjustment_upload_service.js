"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionAdjustmentUploadService = exports.ConversionAdjustmentResult = exports.GclidDateTimePair = exports.RestatementValue = exports.ConversionAdjustment = exports.UploadConversionAdjustmentsResponse = exports.UploadConversionAdjustmentsRequest = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/conversion_adjustment_upload_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const offline_user_data_1 = require("../common/offline_user_data");
const conversion_adjustment_type_1 = require("../enums/conversion_adjustment_type");
const status_1 = require("../../google/rpc/status");
// @generated message type with reflection information, may provide speed optimized methods
class UploadConversionAdjustmentsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadConversionAdjustmentsRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "conversion_adjustments", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ConversionAdjustment, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "partial_failure", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 4, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { customerId: "", conversionAdjustments: [], partialFailure: false, validateOnly: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.ConversionAdjustment conversion_adjustments */ 2:
                    message.conversionAdjustments.push(exports.ConversionAdjustment.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool partial_failure */ 3:
                    message.partialFailure = reader.bool();
                    break;
                case /* bool validate_only */ 4:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.ConversionAdjustment conversion_adjustments = 2; */
        for (let i = 0; i < message.conversionAdjustments.length; i++)
            exports.ConversionAdjustment.internalBinaryWrite(message.conversionAdjustments[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool partial_failure = 3; */
        if (message.partialFailure !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.partialFailure);
        /* bool validate_only = 4; */
        if (message.validateOnly !== false)
            writer.tag(4, runtime_1.WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadConversionAdjustmentsRequest
 */
exports.UploadConversionAdjustmentsRequest = new UploadConversionAdjustmentsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadConversionAdjustmentsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadConversionAdjustmentsResponse", [
            { no: 1, name: "partial_failure_error", kind: "message", T: () => status_1.Status },
            { no: 2, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ConversionAdjustmentResult }
        ]);
    }
    create(value) {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.rpc.Status partial_failure_error */ 1:
                    message.partialFailureError = status_1.Status.internalBinaryRead(reader, reader.uint32(), options, message.partialFailureError);
                    break;
                case /* repeated google.ads.googleads.v11.services.ConversionAdjustmentResult results */ 2:
                    message.results.push(exports.ConversionAdjustmentResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.rpc.Status partial_failure_error = 1; */
        if (message.partialFailureError)
            status_1.Status.internalBinaryWrite(message.partialFailureError, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.ConversionAdjustmentResult results = 2; */
        for (let i = 0; i < message.results.length; i++)
            exports.ConversionAdjustmentResult.internalBinaryWrite(message.results[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadConversionAdjustmentsResponse
 */
exports.UploadConversionAdjustmentsResponse = new UploadConversionAdjustmentsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConversionAdjustment$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ConversionAdjustment", [
            { no: 12, name: "gclid_date_time_pair", kind: "message", T: () => exports.GclidDateTimePair },
            { no: 13, name: "order_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "conversion_action", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "adjustment_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "adjustment_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType", conversion_adjustment_type_1.ConversionAdjustmentTypeEnum_ConversionAdjustmentType] },
            { no: 6, name: "restatement_value", kind: "message", T: () => exports.RestatementValue },
            { no: 10, name: "user_identifiers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => offline_user_data_1.UserIdentifier },
            { no: 11, name: "user_agent", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { adjustmentType: 0, userIdentifiers: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.services.GclidDateTimePair gclid_date_time_pair */ 12:
                    message.gclidDateTimePair = exports.GclidDateTimePair.internalBinaryRead(reader, reader.uint32(), options, message.gclidDateTimePair);
                    break;
                case /* optional string order_id */ 13:
                    message.orderId = reader.string();
                    break;
                case /* optional string conversion_action */ 8:
                    message.conversionAction = reader.string();
                    break;
                case /* optional string adjustment_date_time */ 9:
                    message.adjustmentDateTime = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType adjustment_type */ 5:
                    message.adjustmentType = reader.int32();
                    break;
                case /* google.ads.googleads.v11.services.RestatementValue restatement_value */ 6:
                    message.restatementValue = exports.RestatementValue.internalBinaryRead(reader, reader.uint32(), options, message.restatementValue);
                    break;
                case /* repeated google.ads.googleads.v11.common.UserIdentifier user_identifiers */ 10:
                    message.userIdentifiers.push(offline_user_data_1.UserIdentifier.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional string user_agent */ 11:
                    message.userAgent = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.services.GclidDateTimePair gclid_date_time_pair = 12; */
        if (message.gclidDateTimePair)
            exports.GclidDateTimePair.internalBinaryWrite(message.gclidDateTimePair, writer.tag(12, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* optional string order_id = 13; */
        if (message.orderId !== undefined)
            writer.tag(13, runtime_1.WireType.LengthDelimited).string(message.orderId);
        /* optional string conversion_action = 8; */
        if (message.conversionAction !== undefined)
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.conversionAction);
        /* optional string adjustment_date_time = 9; */
        if (message.adjustmentDateTime !== undefined)
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.adjustmentDateTime);
        /* google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType adjustment_type = 5; */
        if (message.adjustmentType !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.adjustmentType);
        /* google.ads.googleads.v11.services.RestatementValue restatement_value = 6; */
        if (message.restatementValue)
            exports.RestatementValue.internalBinaryWrite(message.restatementValue, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.UserIdentifier user_identifiers = 10; */
        for (let i = 0; i < message.userIdentifiers.length; i++)
            offline_user_data_1.UserIdentifier.internalBinaryWrite(message.userIdentifiers[i], writer.tag(10, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* optional string user_agent = 11; */
        if (message.userAgent !== undefined)
            writer.tag(11, runtime_1.WireType.LengthDelimited).string(message.userAgent);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ConversionAdjustment
 */
exports.ConversionAdjustment = new ConversionAdjustment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RestatementValue$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.RestatementValue", [
            { no: 3, name: "adjusted_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "currency_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double adjusted_value */ 3:
                    message.adjustedValue = reader.double();
                    break;
                case /* optional string currency_code */ 4:
                    message.currencyCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional double adjusted_value = 3; */
        if (message.adjustedValue !== undefined)
            writer.tag(3, runtime_1.WireType.Bit64).double(message.adjustedValue);
        /* optional string currency_code = 4; */
        if (message.currencyCode !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.currencyCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.RestatementValue
 */
exports.RestatementValue = new RestatementValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GclidDateTimePair$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.GclidDateTimePair", [
            { no: 3, name: "gclid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "conversion_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string gclid */ 3:
                    message.gclid = reader.string();
                    break;
                case /* optional string conversion_date_time */ 4:
                    message.conversionDateTime = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string gclid = 3; */
        if (message.gclid !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.gclid);
        /* optional string conversion_date_time = 4; */
        if (message.conversionDateTime !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.conversionDateTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GclidDateTimePair
 */
exports.GclidDateTimePair = new GclidDateTimePair$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConversionAdjustmentResult$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ConversionAdjustmentResult", [
            { no: 9, name: "gclid_date_time_pair", kind: "message", T: () => exports.GclidDateTimePair },
            { no: 10, name: "order_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "conversion_action", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "adjustment_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "adjustment_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType", conversion_adjustment_type_1.ConversionAdjustmentTypeEnum_ConversionAdjustmentType] }
        ]);
    }
    create(value) {
        const message = { orderId: "", adjustmentType: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.services.GclidDateTimePair gclid_date_time_pair */ 9:
                    message.gclidDateTimePair = exports.GclidDateTimePair.internalBinaryRead(reader, reader.uint32(), options, message.gclidDateTimePair);
                    break;
                case /* string order_id */ 10:
                    message.orderId = reader.string();
                    break;
                case /* optional string conversion_action */ 7:
                    message.conversionAction = reader.string();
                    break;
                case /* optional string adjustment_date_time */ 8:
                    message.adjustmentDateTime = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType adjustment_type */ 5:
                    message.adjustmentType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.services.GclidDateTimePair gclid_date_time_pair = 9; */
        if (message.gclidDateTimePair)
            exports.GclidDateTimePair.internalBinaryWrite(message.gclidDateTimePair, writer.tag(9, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string order_id = 10; */
        if (message.orderId !== "")
            writer.tag(10, runtime_1.WireType.LengthDelimited).string(message.orderId);
        /* optional string conversion_action = 7; */
        if (message.conversionAction !== undefined)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.conversionAction);
        /* optional string adjustment_date_time = 8; */
        if (message.adjustmentDateTime !== undefined)
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.adjustmentDateTime);
        /* google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType adjustment_type = 5; */
        if (message.adjustmentType !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.adjustmentType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ConversionAdjustmentResult
 */
exports.ConversionAdjustmentResult = new ConversionAdjustmentResult$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.ConversionAdjustmentUploadService
 */
exports.ConversionAdjustmentUploadService = new runtime_rpc_1.ServiceType("google.ads.googleads.v11.services.ConversionAdjustmentUploadService", [
    { name: "UploadConversionAdjustments", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}:uploadConversionAdjustments", body: "*" }, "google.api.method_signature": ["customer_id,conversion_adjustments,partial_failure"] }, I: exports.UploadConversionAdjustmentsRequest, O: exports.UploadConversionAdjustmentsResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
//# sourceMappingURL=conversion_adjustment_upload_service.js.map
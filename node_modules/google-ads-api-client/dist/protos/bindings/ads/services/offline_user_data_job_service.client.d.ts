import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { Operation } from "../../google/longrunning/operations";
import type { RunOfflineUserDataJobRequest } from "./offline_user_data_job_service";
import type { AddOfflineUserDataJobOperationsResponse } from "./offline_user_data_job_service";
import type { AddOfflineUserDataJobOperationsRequest } from "./offline_user_data_job_service";
import type { CreateOfflineUserDataJobResponse } from "./offline_user_data_job_service";
import type { CreateOfflineUserDataJobRequest } from "./offline_user_data_job_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Service to manage offline user data jobs.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.OfflineUserDataJobService
 */
export interface IOfflineUserDataJobServiceClient {
    /**
     * Creates an offline user data job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [NotAllowlistedError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: CreateOfflineUserDataJob(google.ads.googleads.v11.services.CreateOfflineUserDataJobRequest) returns (google.ads.googleads.v11.services.CreateOfflineUserDataJobResponse);
     */
    createOfflineUserDataJob(input: CreateOfflineUserDataJobRequest, options?: RpcOptions): UnaryCall<CreateOfflineUserDataJobRequest, CreateOfflineUserDataJobResponse>;
    /**
     * Adds operations to the offline user data job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: AddOfflineUserDataJobOperations(google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsRequest) returns (google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsResponse);
     */
    addOfflineUserDataJobOperations(input: AddOfflineUserDataJobOperationsRequest, options?: RpcOptions): UnaryCall<AddOfflineUserDataJobOperationsRequest, AddOfflineUserDataJobOperationsResponse>;
    /**
     * Runs the offline user data job.
     *
     * When finished, the long running operation will contain the processing
     * result or failure information, if any.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: RunOfflineUserDataJob(google.ads.googleads.v11.services.RunOfflineUserDataJobRequest) returns (google.longrunning.Operation);
     */
    runOfflineUserDataJob(input: RunOfflineUserDataJobRequest, options?: RpcOptions): UnaryCall<RunOfflineUserDataJobRequest, Operation>;
}
/**
 * Service to manage offline user data jobs.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.OfflineUserDataJobService
 */
export declare class OfflineUserDataJobServiceClient implements IOfflineUserDataJobServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: string;
    methods: import("@protobuf-ts/runtime-rpc").MethodInfo<any, any>[];
    options: {
        [extensionName: string]: import("@protobuf-ts/runtime").JsonValue;
    };
    constructor(_transport: RpcTransport);
    /**
     * Creates an offline user data job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [NotAllowlistedError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: CreateOfflineUserDataJob(google.ads.googleads.v11.services.CreateOfflineUserDataJobRequest) returns (google.ads.googleads.v11.services.CreateOfflineUserDataJobResponse);
     */
    createOfflineUserDataJob(input: CreateOfflineUserDataJobRequest, options?: RpcOptions): UnaryCall<CreateOfflineUserDataJobRequest, CreateOfflineUserDataJobResponse>;
    /**
     * Adds operations to the offline user data job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: AddOfflineUserDataJobOperations(google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsRequest) returns (google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsResponse);
     */
    addOfflineUserDataJobOperations(input: AddOfflineUserDataJobOperationsRequest, options?: RpcOptions): UnaryCall<AddOfflineUserDataJobOperationsRequest, AddOfflineUserDataJobOperationsResponse>;
    /**
     * Runs the offline user data job.
     *
     * When finished, the long running operation will contain the processing
     * result or failure information, if any.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: RunOfflineUserDataJob(google.ads.googleads.v11.services.RunOfflineUserDataJobRequest) returns (google.longrunning.Operation);
     */
    runOfflineUserDataJob(input: RunOfflineUserDataJobRequest, options?: RpcOptions): UnaryCall<RunOfflineUserDataJobRequest, Operation>;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MerchantCenterLinkServiceClient = void 0;
const merchant_center_link_service_1 = require("./merchant_center_link_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the MerchantCenterLink service.
/**
 * This service allows management of links between Google Ads and Google
 * Merchant Center.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.MerchantCenterLinkService
 */
class MerchantCenterLinkServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = merchant_center_link_service_1.MerchantCenterLinkService.typeName;
        this.methods = merchant_center_link_service_1.MerchantCenterLinkService.methods;
        this.options = merchant_center_link_service_1.MerchantCenterLinkService.options;
    }
    /**
     * Returns Merchant Center links available for this customer.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: ListMerchantCenterLinks(google.ads.googleads.v11.services.ListMerchantCenterLinksRequest) returns (google.ads.googleads.v11.services.ListMerchantCenterLinksResponse);
     */
    listMerchantCenterLinks(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
    /**
     * Returns the Merchant Center link in full detail.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GetMerchantCenterLink(google.ads.googleads.v11.services.GetMerchantCenterLinkRequest) returns (google.ads.googleads.v11.resources.MerchantCenterLink);
     */
    getMerchantCenterLink(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
    /**
     * Updates status or removes a Merchant Center link.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [FieldMaskError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: MutateMerchantCenterLink(google.ads.googleads.v11.services.MutateMerchantCenterLinkRequest) returns (google.ads.googleads.v11.services.MutateMerchantCenterLinkResponse);
     */
    mutateMerchantCenterLink(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.MerchantCenterLinkServiceClient = MerchantCenterLinkServiceClient;
//# sourceMappingURL=merchant_center_link_service.client.js.map
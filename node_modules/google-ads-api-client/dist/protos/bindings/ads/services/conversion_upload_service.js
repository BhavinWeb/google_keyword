"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionUploadService = exports.CartData_Item = exports.CartData = exports.CustomVariable = exports.CallConversionResult = exports.ClickConversionResult = exports.ExternalAttributionData = exports.CallConversion = exports.ClickConversion = exports.UploadCallConversionsResponse = exports.UploadCallConversionsRequest = exports.UploadClickConversionsResponse = exports.UploadClickConversionsRequest = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/conversion_upload_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const conversion_environment_enum_1 = require("../enums/conversion_environment_enum");
const offline_user_data_1 = require("../common/offline_user_data");
const status_1 = require("../../google/rpc/status");
// @generated message type with reflection information, may provide speed optimized methods
class UploadClickConversionsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadClickConversionsRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "conversions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ClickConversion, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "partial_failure", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 4, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { customerId: "", conversions: [], partialFailure: false, validateOnly: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.ClickConversion conversions */ 2:
                    message.conversions.push(exports.ClickConversion.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool partial_failure */ 3:
                    message.partialFailure = reader.bool();
                    break;
                case /* bool validate_only */ 4:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.ClickConversion conversions = 2; */
        for (let i = 0; i < message.conversions.length; i++)
            exports.ClickConversion.internalBinaryWrite(message.conversions[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool partial_failure = 3; */
        if (message.partialFailure !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.partialFailure);
        /* bool validate_only = 4; */
        if (message.validateOnly !== false)
            writer.tag(4, runtime_1.WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadClickConversionsRequest
 */
exports.UploadClickConversionsRequest = new UploadClickConversionsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadClickConversionsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadClickConversionsResponse", [
            { no: 1, name: "partial_failure_error", kind: "message", T: () => status_1.Status },
            { no: 2, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ClickConversionResult }
        ]);
    }
    create(value) {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.rpc.Status partial_failure_error */ 1:
                    message.partialFailureError = status_1.Status.internalBinaryRead(reader, reader.uint32(), options, message.partialFailureError);
                    break;
                case /* repeated google.ads.googleads.v11.services.ClickConversionResult results */ 2:
                    message.results.push(exports.ClickConversionResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.rpc.Status partial_failure_error = 1; */
        if (message.partialFailureError)
            status_1.Status.internalBinaryWrite(message.partialFailureError, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.ClickConversionResult results = 2; */
        for (let i = 0; i < message.results.length; i++)
            exports.ClickConversionResult.internalBinaryWrite(message.results[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadClickConversionsResponse
 */
exports.UploadClickConversionsResponse = new UploadClickConversionsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadCallConversionsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadCallConversionsRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "conversions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CallConversion, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "partial_failure", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 4, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { customerId: "", conversions: [], partialFailure: false, validateOnly: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.CallConversion conversions */ 2:
                    message.conversions.push(exports.CallConversion.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool partial_failure */ 3:
                    message.partialFailure = reader.bool();
                    break;
                case /* bool validate_only */ 4:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.CallConversion conversions = 2; */
        for (let i = 0; i < message.conversions.length; i++)
            exports.CallConversion.internalBinaryWrite(message.conversions[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool partial_failure = 3; */
        if (message.partialFailure !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.partialFailure);
        /* bool validate_only = 4; */
        if (message.validateOnly !== false)
            writer.tag(4, runtime_1.WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadCallConversionsRequest
 */
exports.UploadCallConversionsRequest = new UploadCallConversionsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadCallConversionsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadCallConversionsResponse", [
            { no: 1, name: "partial_failure_error", kind: "message", T: () => status_1.Status },
            { no: 2, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CallConversionResult }
        ]);
    }
    create(value) {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.rpc.Status partial_failure_error */ 1:
                    message.partialFailureError = status_1.Status.internalBinaryRead(reader, reader.uint32(), options, message.partialFailureError);
                    break;
                case /* repeated google.ads.googleads.v11.services.CallConversionResult results */ 2:
                    message.results.push(exports.CallConversionResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.rpc.Status partial_failure_error = 1; */
        if (message.partialFailureError)
            status_1.Status.internalBinaryWrite(message.partialFailureError, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.CallConversionResult results = 2; */
        for (let i = 0; i < message.results.length; i++)
            exports.CallConversionResult.internalBinaryWrite(message.results[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadCallConversionsResponse
 */
exports.UploadCallConversionsResponse = new UploadCallConversionsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClickConversion$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ClickConversion", [
            { no: 9, name: "gclid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "gbraid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "wbraid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "conversion_action", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "conversion_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "conversion_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 13, name: "currency_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "order_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "external_attribution_data", kind: "message", T: () => exports.ExternalAttributionData },
            { no: 15, name: "custom_variables", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CustomVariable },
            { no: 16, name: "cart_data", kind: "message", T: () => exports.CartData },
            { no: 17, name: "user_identifiers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => offline_user_data_1.UserIdentifier },
            { no: 20, name: "conversion_environment", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ConversionEnvironmentEnum.ConversionEnvironment", conversion_environment_enum_1.ConversionEnvironmentEnum_ConversionEnvironment] }
        ]);
    }
    create(value) {
        const message = { gbraid: "", wbraid: "", customVariables: [], userIdentifiers: [], conversionEnvironment: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string gclid */ 9:
                    message.gclid = reader.string();
                    break;
                case /* string gbraid */ 18:
                    message.gbraid = reader.string();
                    break;
                case /* string wbraid */ 19:
                    message.wbraid = reader.string();
                    break;
                case /* optional string conversion_action */ 10:
                    message.conversionAction = reader.string();
                    break;
                case /* optional string conversion_date_time */ 11:
                    message.conversionDateTime = reader.string();
                    break;
                case /* optional double conversion_value */ 12:
                    message.conversionValue = reader.double();
                    break;
                case /* optional string currency_code */ 13:
                    message.currencyCode = reader.string();
                    break;
                case /* optional string order_id */ 14:
                    message.orderId = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.ExternalAttributionData external_attribution_data */ 7:
                    message.externalAttributionData = exports.ExternalAttributionData.internalBinaryRead(reader, reader.uint32(), options, message.externalAttributionData);
                    break;
                case /* repeated google.ads.googleads.v11.services.CustomVariable custom_variables */ 15:
                    message.customVariables.push(exports.CustomVariable.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.services.CartData cart_data */ 16:
                    message.cartData = exports.CartData.internalBinaryRead(reader, reader.uint32(), options, message.cartData);
                    break;
                case /* repeated google.ads.googleads.v11.common.UserIdentifier user_identifiers */ 17:
                    message.userIdentifiers.push(offline_user_data_1.UserIdentifier.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.ConversionEnvironmentEnum.ConversionEnvironment conversion_environment */ 20:
                    message.conversionEnvironment = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string gclid = 9; */
        if (message.gclid !== undefined)
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.gclid);
        /* string gbraid = 18; */
        if (message.gbraid !== "")
            writer.tag(18, runtime_1.WireType.LengthDelimited).string(message.gbraid);
        /* string wbraid = 19; */
        if (message.wbraid !== "")
            writer.tag(19, runtime_1.WireType.LengthDelimited).string(message.wbraid);
        /* optional string conversion_action = 10; */
        if (message.conversionAction !== undefined)
            writer.tag(10, runtime_1.WireType.LengthDelimited).string(message.conversionAction);
        /* optional string conversion_date_time = 11; */
        if (message.conversionDateTime !== undefined)
            writer.tag(11, runtime_1.WireType.LengthDelimited).string(message.conversionDateTime);
        /* optional double conversion_value = 12; */
        if (message.conversionValue !== undefined)
            writer.tag(12, runtime_1.WireType.Bit64).double(message.conversionValue);
        /* optional string currency_code = 13; */
        if (message.currencyCode !== undefined)
            writer.tag(13, runtime_1.WireType.LengthDelimited).string(message.currencyCode);
        /* optional string order_id = 14; */
        if (message.orderId !== undefined)
            writer.tag(14, runtime_1.WireType.LengthDelimited).string(message.orderId);
        /* google.ads.googleads.v11.services.ExternalAttributionData external_attribution_data = 7; */
        if (message.externalAttributionData)
            exports.ExternalAttributionData.internalBinaryWrite(message.externalAttributionData, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.CustomVariable custom_variables = 15; */
        for (let i = 0; i < message.customVariables.length; i++)
            exports.CustomVariable.internalBinaryWrite(message.customVariables[i], writer.tag(15, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.services.CartData cart_data = 16; */
        if (message.cartData)
            exports.CartData.internalBinaryWrite(message.cartData, writer.tag(16, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.UserIdentifier user_identifiers = 17; */
        for (let i = 0; i < message.userIdentifiers.length; i++)
            offline_user_data_1.UserIdentifier.internalBinaryWrite(message.userIdentifiers[i], writer.tag(17, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.ConversionEnvironmentEnum.ConversionEnvironment conversion_environment = 20; */
        if (message.conversionEnvironment !== 0)
            writer.tag(20, runtime_1.WireType.Varint).int32(message.conversionEnvironment);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ClickConversion
 */
exports.ClickConversion = new ClickConversion$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CallConversion$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.CallConversion", [
            { no: 7, name: "caller_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "call_start_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "conversion_action", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "conversion_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "conversion_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 12, name: "currency_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "custom_variables", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CustomVariable }
        ]);
    }
    create(value) {
        const message = { customVariables: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string caller_id */ 7:
                    message.callerId = reader.string();
                    break;
                case /* optional string call_start_date_time */ 8:
                    message.callStartDateTime = reader.string();
                    break;
                case /* optional string conversion_action */ 9:
                    message.conversionAction = reader.string();
                    break;
                case /* optional string conversion_date_time */ 10:
                    message.conversionDateTime = reader.string();
                    break;
                case /* optional double conversion_value */ 11:
                    message.conversionValue = reader.double();
                    break;
                case /* optional string currency_code */ 12:
                    message.currencyCode = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.CustomVariable custom_variables */ 13:
                    message.customVariables.push(exports.CustomVariable.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string caller_id = 7; */
        if (message.callerId !== undefined)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.callerId);
        /* optional string call_start_date_time = 8; */
        if (message.callStartDateTime !== undefined)
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.callStartDateTime);
        /* optional string conversion_action = 9; */
        if (message.conversionAction !== undefined)
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.conversionAction);
        /* optional string conversion_date_time = 10; */
        if (message.conversionDateTime !== undefined)
            writer.tag(10, runtime_1.WireType.LengthDelimited).string(message.conversionDateTime);
        /* optional double conversion_value = 11; */
        if (message.conversionValue !== undefined)
            writer.tag(11, runtime_1.WireType.Bit64).double(message.conversionValue);
        /* optional string currency_code = 12; */
        if (message.currencyCode !== undefined)
            writer.tag(12, runtime_1.WireType.LengthDelimited).string(message.currencyCode);
        /* repeated google.ads.googleads.v11.services.CustomVariable custom_variables = 13; */
        for (let i = 0; i < message.customVariables.length; i++)
            exports.CustomVariable.internalBinaryWrite(message.customVariables[i], writer.tag(13, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CallConversion
 */
exports.CallConversion = new CallConversion$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExternalAttributionData$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ExternalAttributionData", [
            { no: 3, name: "external_attribution_credit", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "external_attribution_model", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double external_attribution_credit */ 3:
                    message.externalAttributionCredit = reader.double();
                    break;
                case /* optional string external_attribution_model */ 4:
                    message.externalAttributionModel = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional double external_attribution_credit = 3; */
        if (message.externalAttributionCredit !== undefined)
            writer.tag(3, runtime_1.WireType.Bit64).double(message.externalAttributionCredit);
        /* optional string external_attribution_model = 4; */
        if (message.externalAttributionModel !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.externalAttributionModel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ExternalAttributionData
 */
exports.ExternalAttributionData = new ExternalAttributionData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClickConversionResult$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ClickConversionResult", [
            { no: 4, name: "gclid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "gbraid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "wbraid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "conversion_action", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "conversion_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "user_identifiers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => offline_user_data_1.UserIdentifier }
        ]);
    }
    create(value) {
        const message = { gbraid: "", wbraid: "", userIdentifiers: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string gclid */ 4:
                    message.gclid = reader.string();
                    break;
                case /* string gbraid */ 8:
                    message.gbraid = reader.string();
                    break;
                case /* string wbraid */ 9:
                    message.wbraid = reader.string();
                    break;
                case /* optional string conversion_action */ 5:
                    message.conversionAction = reader.string();
                    break;
                case /* optional string conversion_date_time */ 6:
                    message.conversionDateTime = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.common.UserIdentifier user_identifiers */ 7:
                    message.userIdentifiers.push(offline_user_data_1.UserIdentifier.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string gclid = 4; */
        if (message.gclid !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.gclid);
        /* string gbraid = 8; */
        if (message.gbraid !== "")
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.gbraid);
        /* string wbraid = 9; */
        if (message.wbraid !== "")
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.wbraid);
        /* optional string conversion_action = 5; */
        if (message.conversionAction !== undefined)
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.conversionAction);
        /* optional string conversion_date_time = 6; */
        if (message.conversionDateTime !== undefined)
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.conversionDateTime);
        /* repeated google.ads.googleads.v11.common.UserIdentifier user_identifiers = 7; */
        for (let i = 0; i < message.userIdentifiers.length; i++)
            offline_user_data_1.UserIdentifier.internalBinaryWrite(message.userIdentifiers[i], writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ClickConversionResult
 */
exports.ClickConversionResult = new ClickConversionResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CallConversionResult$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.CallConversionResult", [
            { no: 5, name: "caller_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "call_start_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "conversion_action", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "conversion_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string caller_id */ 5:
                    message.callerId = reader.string();
                    break;
                case /* optional string call_start_date_time */ 6:
                    message.callStartDateTime = reader.string();
                    break;
                case /* optional string conversion_action */ 7:
                    message.conversionAction = reader.string();
                    break;
                case /* optional string conversion_date_time */ 8:
                    message.conversionDateTime = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string caller_id = 5; */
        if (message.callerId !== undefined)
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.callerId);
        /* optional string call_start_date_time = 6; */
        if (message.callStartDateTime !== undefined)
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.callStartDateTime);
        /* optional string conversion_action = 7; */
        if (message.conversionAction !== undefined)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.conversionAction);
        /* optional string conversion_date_time = 8; */
        if (message.conversionDateTime !== undefined)
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.conversionDateTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CallConversionResult
 */
exports.CallConversionResult = new CallConversionResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomVariable$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.CustomVariable", [
            { no: 1, name: "conversion_custom_variable", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/ConversionCustomVariable" } } },
            { no: 2, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { conversionCustomVariable: "", value: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string conversion_custom_variable */ 1:
                    message.conversionCustomVariable = reader.string();
                    break;
                case /* string value */ 2:
                    message.value = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string conversion_custom_variable = 1; */
        if (message.conversionCustomVariable !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.conversionCustomVariable);
        /* string value = 2; */
        if (message.value !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CustomVariable
 */
exports.CustomVariable = new CustomVariable$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CartData$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.CartData", [
            { no: 6, name: "merchant_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "feed_country_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "feed_language_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "local_transaction_cost", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.CartData_Item }
        ]);
    }
    create(value) {
        const message = { merchantId: 0n, feedCountryCode: "", feedLanguageCode: "", localTransactionCost: 0, items: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 merchant_id */ 6:
                    message.merchantId = reader.int64().toBigInt();
                    break;
                case /* string feed_country_code */ 2:
                    message.feedCountryCode = reader.string();
                    break;
                case /* string feed_language_code */ 3:
                    message.feedLanguageCode = reader.string();
                    break;
                case /* double local_transaction_cost */ 4:
                    message.localTransactionCost = reader.double();
                    break;
                case /* repeated google.ads.googleads.v11.services.CartData.Item items */ 5:
                    message.items.push(exports.CartData_Item.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 merchant_id = 6; */
        if (message.merchantId !== 0n)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.merchantId);
        /* string feed_country_code = 2; */
        if (message.feedCountryCode !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.feedCountryCode);
        /* string feed_language_code = 3; */
        if (message.feedLanguageCode !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.feedLanguageCode);
        /* double local_transaction_cost = 4; */
        if (message.localTransactionCost !== 0)
            writer.tag(4, runtime_1.WireType.Bit64).double(message.localTransactionCost);
        /* repeated google.ads.googleads.v11.services.CartData.Item items = 5; */
        for (let i = 0; i < message.items.length; i++)
            exports.CartData_Item.internalBinaryWrite(message.items[i], writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CartData
 */
exports.CartData = new CartData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CartData_Item$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.CartData.Item", [
            { no: 1, name: "product_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "quantity", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "unit_price", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value) {
        const message = { productId: "", quantity: 0, unitPrice: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string product_id */ 1:
                    message.productId = reader.string();
                    break;
                case /* int32 quantity */ 2:
                    message.quantity = reader.int32();
                    break;
                case /* double unit_price */ 3:
                    message.unitPrice = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string product_id = 1; */
        if (message.productId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.productId);
        /* int32 quantity = 2; */
        if (message.quantity !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.quantity);
        /* double unit_price = 3; */
        if (message.unitPrice !== 0)
            writer.tag(3, runtime_1.WireType.Bit64).double(message.unitPrice);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CartData.Item
 */
exports.CartData_Item = new CartData_Item$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.ConversionUploadService
 */
exports.ConversionUploadService = new runtime_rpc_1.ServiceType("google.ads.googleads.v11.services.ConversionUploadService", [
    { name: "UploadClickConversions", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}:uploadClickConversions", body: "*" }, "google.api.method_signature": ["customer_id,conversions,partial_failure"] }, I: exports.UploadClickConversionsRequest, O: exports.UploadClickConversionsResponse },
    { name: "UploadCallConversions", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}:uploadCallConversions", body: "*" }, "google.api.method_signature": ["customer_id,conversions,partial_failure"] }, I: exports.UploadCallConversionsRequest, O: exports.UploadCallConversionsResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
//# sourceMappingURL=conversion_upload_service.js.map
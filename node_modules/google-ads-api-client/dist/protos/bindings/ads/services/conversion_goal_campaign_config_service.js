"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionGoalCampaignConfigService = exports.MutateConversionGoalCampaignConfigResult = exports.MutateConversionGoalCampaignConfigsResponse = exports.ConversionGoalCampaignConfigOperation = exports.MutateConversionGoalCampaignConfigsRequest = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/conversion_goal_campaign_config_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const conversion_goal_campaign_config_1 = require("../resources/conversion_goal_campaign_config");
const field_mask_1 = require("../../google/protobuf/field_mask");
const response_content_type_1 = require("../enums/response_content_type");
// @generated message type with reflection information, may provide speed optimized methods
class MutateConversionGoalCampaignConfigsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigsRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ConversionGoalCampaignConfigOperation, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "response_content_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType", response_content_type_1.ResponseContentTypeEnum_ResponseContentType] }
        ]);
    }
    create(value) {
        const message = { customerId: "", operations: [], validateOnly: false, responseContentType: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.ConversionGoalCampaignConfigOperation operations */ 2:
                    message.operations.push(exports.ConversionGoalCampaignConfigOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool validate_only */ 3:
                    message.validateOnly = reader.bool();
                    break;
                case /* google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type */ 4:
                    message.responseContentType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.ConversionGoalCampaignConfigOperation operations = 2; */
        for (let i = 0; i < message.operations.length; i++)
            exports.ConversionGoalCampaignConfigOperation.internalBinaryWrite(message.operations[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool validate_only = 3; */
        if (message.validateOnly !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.validateOnly);
        /* google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 4; */
        if (message.responseContentType !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.responseContentType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigsRequest
 */
exports.MutateConversionGoalCampaignConfigsRequest = new MutateConversionGoalCampaignConfigsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConversionGoalCampaignConfigOperation$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ConversionGoalCampaignConfigOperation", [
            { no: 2, name: "update_mask", kind: "message", T: () => field_mask_1.FieldMask },
            { no: 1, name: "update", kind: "message", oneof: "operation", T: () => conversion_goal_campaign_config_1.ConversionGoalCampaignConfig }
        ]);
    }
    create(value) {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.FieldMask update_mask */ 2:
                    message.updateMask = field_mask_1.FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                case /* google.ads.googleads.v11.resources.ConversionGoalCampaignConfig update */ 1:
                    message.operation = {
                        oneofKind: "update",
                        update: conversion_goal_campaign_config_1.ConversionGoalCampaignConfig.internalBinaryRead(reader, reader.uint32(), options, message.operation.update)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.protobuf.FieldMask update_mask = 2; */
        if (message.updateMask)
            field_mask_1.FieldMask.internalBinaryWrite(message.updateMask, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.ConversionGoalCampaignConfig update = 1; */
        if (message.operation.oneofKind === "update")
            conversion_goal_campaign_config_1.ConversionGoalCampaignConfig.internalBinaryWrite(message.operation.update, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ConversionGoalCampaignConfigOperation
 */
exports.ConversionGoalCampaignConfigOperation = new ConversionGoalCampaignConfigOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateConversionGoalCampaignConfigsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigsResponse", [
            { no: 1, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.MutateConversionGoalCampaignConfigResult }
        ]);
    }
    create(value) {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigResult results */ 1:
                    message.results.push(exports.MutateConversionGoalCampaignConfigResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigResult results = 1; */
        for (let i = 0; i < message.results.length; i++)
            exports.MutateConversionGoalCampaignConfigResult.internalBinaryWrite(message.results[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigsResponse
 */
exports.MutateConversionGoalCampaignConfigsResponse = new MutateConversionGoalCampaignConfigsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateConversionGoalCampaignConfigResult$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigResult", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/ConversionGoalCampaignConfig" } } },
            { no: 2, name: "conversion_goal_campaign_config", kind: "message", T: () => conversion_goal_campaign_config_1.ConversionGoalCampaignConfig }
        ]);
    }
    create(value) {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* google.ads.googleads.v11.resources.ConversionGoalCampaignConfig conversion_goal_campaign_config */ 2:
                    message.conversionGoalCampaignConfig = conversion_goal_campaign_config_1.ConversionGoalCampaignConfig.internalBinaryRead(reader, reader.uint32(), options, message.conversionGoalCampaignConfig);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceName);
        /* google.ads.googleads.v11.resources.ConversionGoalCampaignConfig conversion_goal_campaign_config = 2; */
        if (message.conversionGoalCampaignConfig)
            conversion_goal_campaign_config_1.ConversionGoalCampaignConfig.internalBinaryWrite(message.conversionGoalCampaignConfig, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigResult
 */
exports.MutateConversionGoalCampaignConfigResult = new MutateConversionGoalCampaignConfigResult$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.ConversionGoalCampaignConfigService
 */
exports.ConversionGoalCampaignConfigService = new runtime_rpc_1.ServiceType("google.ads.googleads.v11.services.ConversionGoalCampaignConfigService", [
    { name: "MutateConversionGoalCampaignConfigs", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/conversionGoalCampaignConfigs:mutate", body: "*" }, "google.api.method_signature": ["customer_id,operations"] }, I: exports.MutateConversionGoalCampaignConfigsRequest, O: exports.MutateConversionGoalCampaignConfigsResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
//# sourceMappingURL=conversion_goal_campaign_config_service.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentsAccountServiceClient = void 0;
const payments_account_service_1 = require("./payments_account_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the payments account service.
/**
 * Service to provide payments accounts that can be used to set up consolidated
 * billing.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.PaymentsAccountService
 */
class PaymentsAccountServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = payments_account_service_1.PaymentsAccountService.typeName;
        this.methods = payments_account_service_1.PaymentsAccountService.methods;
        this.options = payments_account_service_1.PaymentsAccountService.options;
    }
    /**
     * Returns all payments accounts associated with all managers
     * between the login customer ID and specified serving customer in the
     * hierarchy, inclusive.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [PaymentsAccountError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: ListPaymentsAccounts(google.ads.googleads.v11.services.ListPaymentsAccountsRequest) returns (google.ads.googleads.v11.services.ListPaymentsAccountsResponse);
     */
    listPaymentsAccounts(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.PaymentsAccountServiceClient = PaymentsAccountServiceClient;
//# sourceMappingURL=payments_account_service.client.js.map
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { FieldMask } from "../../google/protobuf/field_mask";
import { SmartCampaignSetting } from "../resources/smart_campaign_setting";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for
 * [SmartCampaignSettingService.MutateSmartCampaignSetting][].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateSmartCampaignSettingsRequest
 */
export interface MutateSmartCampaignSettingsRequest {
    /**
     * Required. The ID of the customer whose Smart campaign settings are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual Smart campaign settings.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.SmartCampaignSettingOperation operations = 2;
     */
    operations: SmartCampaignSettingOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 5;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
}
/**
 * A single operation to update Smart campaign settings for a campaign.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.SmartCampaignSettingOperation
 */
export interface SmartCampaignSettingOperation {
    /**
     * Update operation: The Smart campaign setting must specify a valid
     * resource name.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.SmartCampaignSetting update = 1;
     */
    update?: SmartCampaignSetting;
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 2;
     */
    updateMask?: FieldMask;
}
/**
 * Response message for campaign mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateSmartCampaignSettingsResponse
 */
export interface MutateSmartCampaignSettingsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 1;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateSmartCampaignSettingResult results = 2;
     */
    results: MutateSmartCampaignSettingResult[];
}
/**
 * The result for the Smart campaign setting mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateSmartCampaignSettingResult
 */
export interface MutateSmartCampaignSettingResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated Smart campaign setting with only mutable fields after mutate.
     * The field will only be returned when response_content_type is set to
     * "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.SmartCampaignSetting smart_campaign_setting = 2;
     */
    smartCampaignSetting?: SmartCampaignSetting;
}
declare class MutateSmartCampaignSettingsRequest$Type extends MessageType<MutateSmartCampaignSettingsRequest> {
    constructor();
    create(value?: PartialMessage<MutateSmartCampaignSettingsRequest>): MutateSmartCampaignSettingsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateSmartCampaignSettingsRequest): MutateSmartCampaignSettingsRequest;
    internalBinaryWrite(message: MutateSmartCampaignSettingsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateSmartCampaignSettingsRequest
 */
export declare const MutateSmartCampaignSettingsRequest: MutateSmartCampaignSettingsRequest$Type;
declare class SmartCampaignSettingOperation$Type extends MessageType<SmartCampaignSettingOperation> {
    constructor();
    create(value?: PartialMessage<SmartCampaignSettingOperation>): SmartCampaignSettingOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SmartCampaignSettingOperation): SmartCampaignSettingOperation;
    internalBinaryWrite(message: SmartCampaignSettingOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.SmartCampaignSettingOperation
 */
export declare const SmartCampaignSettingOperation: SmartCampaignSettingOperation$Type;
declare class MutateSmartCampaignSettingsResponse$Type extends MessageType<MutateSmartCampaignSettingsResponse> {
    constructor();
    create(value?: PartialMessage<MutateSmartCampaignSettingsResponse>): MutateSmartCampaignSettingsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateSmartCampaignSettingsResponse): MutateSmartCampaignSettingsResponse;
    internalBinaryWrite(message: MutateSmartCampaignSettingsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateSmartCampaignSettingsResponse
 */
export declare const MutateSmartCampaignSettingsResponse: MutateSmartCampaignSettingsResponse$Type;
declare class MutateSmartCampaignSettingResult$Type extends MessageType<MutateSmartCampaignSettingResult> {
    constructor();
    create(value?: PartialMessage<MutateSmartCampaignSettingResult>): MutateSmartCampaignSettingResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateSmartCampaignSettingResult): MutateSmartCampaignSettingResult;
    internalBinaryWrite(message: MutateSmartCampaignSettingResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateSmartCampaignSettingResult
 */
export declare const MutateSmartCampaignSettingResult: MutateSmartCampaignSettingResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.SmartCampaignSettingService
 */
export declare const SmartCampaignSettingService: ServiceType;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CampaignLabelServiceClient = void 0;
const campaign_label_service_1 = require("./campaign_label_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the Campaign Label service.
/**
 * Service to manage labels on campaigns.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.CampaignLabelService
 */
class CampaignLabelServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = campaign_label_service_1.CampaignLabelService.typeName;
        this.methods = campaign_label_service_1.CampaignLabelService.methods;
        this.options = campaign_label_service_1.CampaignLabelService.options;
    }
    /**
     * Creates and removes campaign-label relationships.
     * Operation statuses are returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [LabelError]()
     *   [MutateError]()
     *   [NewResourceCreationError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: MutateCampaignLabels(google.ads.googleads.v11.services.MutateCampaignLabelsRequest) returns (google.ads.googleads.v11.services.MutateCampaignLabelsResponse);
     */
    mutateCampaignLabels(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.CampaignLabelServiceClient = CampaignLabelServiceClient;
//# sourceMappingURL=campaign_label_service.client.js.map
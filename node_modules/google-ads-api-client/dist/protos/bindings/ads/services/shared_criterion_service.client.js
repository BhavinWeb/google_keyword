"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedCriterionServiceClient = void 0;
const shared_criterion_service_1 = require("./shared_criterion_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the Shared Criterion service.
/**
 * Service to manage shared criteria.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.SharedCriterionService
 */
class SharedCriterionServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = shared_criterion_service_1.SharedCriterionService.typeName;
        this.methods = shared_criterion_service_1.SharedCriterionService.methods;
        this.options = shared_criterion_service_1.SharedCriterionService.options;
    }
    /**
     * Creates or removes shared criteria. Operation statuses are returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [CriterionError]()
     *   [DatabaseError]()
     *   [DistinctError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [IdError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [NotEmptyError]()
     *   [NullError]()
     *   [OperatorError]()
     *   [QuotaError]()
     *   [RangeError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *   [SizeLimitError]()
     *   [StringFormatError]()
     *   [StringLengthError]()
     *
     * @generated from protobuf rpc: MutateSharedCriteria(google.ads.googleads.v11.services.MutateSharedCriteriaRequest) returns (google.ads.googleads.v11.services.MutateSharedCriteriaResponse);
     */
    mutateSharedCriteria(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.SharedCriterionServiceClient = SharedCriterionServiceClient;
//# sourceMappingURL=shared_criterion_service.client.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomInterestServiceClient = void 0;
const custom_interest_service_1 = require("./custom_interest_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the Custom Interest service.
/**
 * Service to manage custom interests.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.CustomInterestService
 */
class CustomInterestServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = custom_interest_service_1.CustomInterestService.typeName;
        this.methods = custom_interest_service_1.CustomInterestService.methods;
        this.options = custom_interest_service_1.CustomInterestService.options;
    }
    /**
     * Creates or updates custom interests. Operation statuses are returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [CriterionError]()
     *   [CustomInterestError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [PolicyViolationError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [StringLengthError]()
     *
     * @generated from protobuf rpc: MutateCustomInterests(google.ads.googleads.v11.services.MutateCustomInterestsRequest) returns (google.ads.googleads.v11.services.MutateCustomInterestsResponse);
     */
    mutateCustomInterests(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.CustomInterestServiceClient = CustomInterestServiceClient;
//# sourceMappingURL=custom_interest_service.client.js.map
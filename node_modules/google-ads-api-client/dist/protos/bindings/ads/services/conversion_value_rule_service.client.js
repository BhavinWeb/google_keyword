"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionValueRuleServiceClient = void 0;
const conversion_value_rule_service_1 = require("./conversion_value_rule_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the Conversion Value Rule service.
/**
 * Service to manage conversion value rules.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.ConversionValueRuleService
 */
class ConversionValueRuleServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = conversion_value_rule_service_1.ConversionValueRuleService.typeName;
        this.methods = conversion_value_rule_service_1.ConversionValueRuleService.methods;
        this.options = conversion_value_rule_service_1.ConversionValueRuleService.options;
    }
    /**
     * Creates, updates, or removes conversion value rules. Operation statuses are
     * returned.
     *
     * @generated from protobuf rpc: MutateConversionValueRules(google.ads.googleads.v11.services.MutateConversionValueRulesRequest) returns (google.ads.googleads.v11.services.MutateConversionValueRulesResponse);
     */
    mutateConversionValueRules(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.ConversionValueRuleServiceClient = ConversionValueRuleServiceClient;
//# sourceMappingURL=conversion_value_rule_service.client.js.map
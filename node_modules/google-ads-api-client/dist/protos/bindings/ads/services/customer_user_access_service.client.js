"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerUserAccessServiceClient = void 0;
const customer_user_access_service_1 = require("./customer_user_access_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
/**
 * This service manages the permissions of a user on a given customer.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.CustomerUserAccessService
 */
class CustomerUserAccessServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = customer_user_access_service_1.CustomerUserAccessService.typeName;
        this.methods = customer_user_access_service_1.CustomerUserAccessService.methods;
        this.options = customer_user_access_service_1.CustomerUserAccessService.options;
    }
    /**
     * Updates, removes permission of a user on a given customer. Operation
     * statuses are returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [CustomerUserAccessError]()
     *   [FieldMaskError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: MutateCustomerUserAccess(google.ads.googleads.v11.services.MutateCustomerUserAccessRequest) returns (google.ads.googleads.v11.services.MutateCustomerUserAccessResponse);
     */
    mutateCustomerUserAccess(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.CustomerUserAccessServiceClient = CustomerUserAccessServiceClient;
//# sourceMappingURL=customer_user_access_service.client.js.map
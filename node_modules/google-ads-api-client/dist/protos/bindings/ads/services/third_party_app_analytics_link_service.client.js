"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThirdPartyAppAnalyticsLinkServiceClient = void 0;
const third_party_app_analytics_link_service_1 = require("./third_party_app_analytics_link_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
/**
 * This service allows management of links between Google Ads and third party
 * app analytics.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.ThirdPartyAppAnalyticsLinkService
 */
class ThirdPartyAppAnalyticsLinkServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = third_party_app_analytics_link_service_1.ThirdPartyAppAnalyticsLinkService.typeName;
        this.methods = third_party_app_analytics_link_service_1.ThirdPartyAppAnalyticsLinkService.methods;
        this.options = third_party_app_analytics_link_service_1.ThirdPartyAppAnalyticsLinkService.options;
    }
    /**
     * Regenerate ThirdPartyAppAnalyticsLink.shareable_link_id that should be
     * provided to the third party when setting up app analytics.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: RegenerateShareableLinkId(google.ads.googleads.v11.services.RegenerateShareableLinkIdRequest) returns (google.ads.googleads.v11.services.RegenerateShareableLinkIdResponse);
     */
    regenerateShareableLinkId(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.ThirdPartyAppAnalyticsLinkServiceClient = ThirdPartyAppAnalyticsLinkServiceClient;
//# sourceMappingURL=third_party_app_analytics_link_service.client.js.map
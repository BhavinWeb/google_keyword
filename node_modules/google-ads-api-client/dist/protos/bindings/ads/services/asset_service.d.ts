import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { Asset } from "../resources/asset";
import { FieldMask } from "../../google/protobuf/field_mask";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for [AssetService.MutateAssets][google.ads.googleads.v11.services.AssetService.MutateAssets]
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAssetsRequest
 */
export interface MutateAssetsRequest {
    /**
     * Required. The ID of the customer whose assets are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual assets.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.AssetOperation operations = 2;
     */
    operations: AssetOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 5;
     */
    partialFailure: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 3;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
}
/**
 * A single operation to create an asset. Supported asset types are
 * YoutubeVideoAsset, MediaBundleAsset, ImageAsset, and LeadFormAsset. TextAsset
 * should be created with Ad inline.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AssetOperation
 */
export interface AssetOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 3;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new asset.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Asset create = 1;
         */
        create: Asset;
    } | {
        oneofKind: "update";
        /**
         * Update operation: The asset is expected to have a valid resource name in
         * this format:
         *
         * `customers/{customer_id}/assets/{asset_id}`
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Asset update = 2;
         */
        update: Asset;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for an asset mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAssetsResponse
 */
export interface MutateAssetsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateAssetResult results = 2;
     */
    results: MutateAssetResult[];
}
/**
 * The result for the asset mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAssetResult
 */
export interface MutateAssetResult {
    /**
     * The resource name returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated asset with only mutable fields after mutate. The field will
     * only be returned when response_content_type is set to "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Asset asset = 2;
     */
    asset?: Asset;
}
declare class MutateAssetsRequest$Type extends MessageType<MutateAssetsRequest> {
    constructor();
    create(value?: PartialMessage<MutateAssetsRequest>): MutateAssetsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAssetsRequest): MutateAssetsRequest;
    internalBinaryWrite(message: MutateAssetsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAssetsRequest
 */
export declare const MutateAssetsRequest: MutateAssetsRequest$Type;
declare class AssetOperation$Type extends MessageType<AssetOperation> {
    constructor();
    create(value?: PartialMessage<AssetOperation>): AssetOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssetOperation): AssetOperation;
    internalBinaryWrite(message: AssetOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AssetOperation
 */
export declare const AssetOperation: AssetOperation$Type;
declare class MutateAssetsResponse$Type extends MessageType<MutateAssetsResponse> {
    constructor();
    create(value?: PartialMessage<MutateAssetsResponse>): MutateAssetsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAssetsResponse): MutateAssetsResponse;
    internalBinaryWrite(message: MutateAssetsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAssetsResponse
 */
export declare const MutateAssetsResponse: MutateAssetsResponse$Type;
declare class MutateAssetResult$Type extends MessageType<MutateAssetResult> {
    constructor();
    create(value?: PartialMessage<MutateAssetResult>): MutateAssetResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAssetResult): MutateAssetResult;
    internalBinaryWrite(message: MutateAssetResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAssetResult
 */
export declare const MutateAssetResult: MutateAssetResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.AssetService
 */
export declare const AssetService: ServiceType;
export {};

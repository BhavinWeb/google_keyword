"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReachPlanService = exports.YouTubeSelectLineUp = exports.YouTubeSelectSettings = exports.AdvancedProductTargeting = exports.AudienceTargeting = exports.ForecastMetricOptions = exports.EffectiveFrequencyBreakdown = exports.OnTargetAudienceMetrics = exports.PlannedProductForecast = exports.PlannedProductReachForecast = exports.Forecast = exports.ReachForecast = exports.ReachCurve = exports.GenerateReachForecastResponse = exports.PlannedProduct = exports.CampaignDuration = exports.Targeting = exports.FrequencyCap = exports.EffectiveFrequencyLimit = exports.GenerateReachForecastRequest = exports.ProductAllocation = exports.GenerateProductMixIdeasResponse = exports.Preferences = exports.GenerateProductMixIdeasRequest = exports.PlannableTargeting = exports.ProductMetadata = exports.ListPlannableProductsResponse = exports.ListPlannableProductsRequest = exports.PlannableLocation = exports.ListPlannableLocationsResponse = exports.ListPlannableLocationsRequest = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/reach_plan_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const criteria_1 = require("../common/criteria");
const dates_1 = require("../common/dates");
const frequency_cap_time_unit_1 = require("../enums/frequency_cap_time_unit");
const reach_plan_ad_length_1 = require("../enums/reach_plan_ad_length");
const reach_plan_network_1 = require("../enums/reach_plan_network");
const criteria_2 = require("../common/criteria");
const criteria_3 = require("../common/criteria");
const reach_plan_age_range_1 = require("../enums/reach_plan_age_range");
// @generated message type with reflection information, may provide speed optimized methods
class ListPlannableLocationsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ListPlannableLocationsRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListPlannableLocationsRequest
 */
exports.ListPlannableLocationsRequest = new ListPlannableLocationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPlannableLocationsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ListPlannableLocationsResponse", [
            { no: 1, name: "plannable_locations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PlannableLocation }
        ]);
    }
    create(value) {
        const message = { plannableLocations: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.PlannableLocation plannable_locations */ 1:
                    message.plannableLocations.push(exports.PlannableLocation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.services.PlannableLocation plannable_locations = 1; */
        for (let i = 0; i < message.plannableLocations.length; i++)
            exports.PlannableLocation.internalBinaryWrite(message.plannableLocations[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListPlannableLocationsResponse
 */
exports.ListPlannableLocationsResponse = new ListPlannableLocationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlannableLocation$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.PlannableLocation", [
            { no: 4, name: "id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "parent_country_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "country_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "location_type", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string id */ 4:
                    message.id = reader.string();
                    break;
                case /* optional string name */ 5:
                    message.name = reader.string();
                    break;
                case /* optional int64 parent_country_id */ 6:
                    message.parentCountryId = reader.int64().toBigInt();
                    break;
                case /* optional string country_code */ 7:
                    message.countryCode = reader.string();
                    break;
                case /* optional string location_type */ 8:
                    message.locationType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string id = 4; */
        if (message.id !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.id);
        /* optional string name = 5; */
        if (message.name !== undefined)
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.name);
        /* optional int64 parent_country_id = 6; */
        if (message.parentCountryId !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.parentCountryId);
        /* optional string country_code = 7; */
        if (message.countryCode !== undefined)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.countryCode);
        /* optional string location_type = 8; */
        if (message.locationType !== undefined)
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.locationType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.PlannableLocation
 */
exports.PlannableLocation = new PlannableLocation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPlannableProductsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ListPlannableProductsRequest", [
            { no: 2, name: "plannable_location_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { plannableLocationId: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string plannable_location_id */ 2:
                    message.plannableLocationId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string plannable_location_id = 2; */
        if (message.plannableLocationId !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.plannableLocationId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListPlannableProductsRequest
 */
exports.ListPlannableProductsRequest = new ListPlannableProductsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPlannableProductsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ListPlannableProductsResponse", [
            { no: 1, name: "product_metadata", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ProductMetadata }
        ]);
    }
    create(value) {
        const message = { productMetadata: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.ProductMetadata product_metadata */ 1:
                    message.productMetadata.push(exports.ProductMetadata.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.services.ProductMetadata product_metadata = 1; */
        for (let i = 0; i < message.productMetadata.length; i++)
            exports.ProductMetadata.internalBinaryWrite(message.productMetadata[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListPlannableProductsResponse
 */
exports.ListPlannableProductsResponse = new ListPlannableProductsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProductMetadata$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ProductMetadata", [
            { no: 4, name: "plannable_product_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "plannable_product_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "plannable_targeting", kind: "message", T: () => exports.PlannableTargeting }
        ]);
    }
    create(value) {
        const message = { plannableProductName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string plannable_product_code */ 4:
                    message.plannableProductCode = reader.string();
                    break;
                case /* string plannable_product_name */ 3:
                    message.plannableProductName = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.PlannableTargeting plannable_targeting */ 2:
                    message.plannableTargeting = exports.PlannableTargeting.internalBinaryRead(reader, reader.uint32(), options, message.plannableTargeting);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string plannable_product_code = 4; */
        if (message.plannableProductCode !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.plannableProductCode);
        /* string plannable_product_name = 3; */
        if (message.plannableProductName !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.plannableProductName);
        /* google.ads.googleads.v11.services.PlannableTargeting plannable_targeting = 2; */
        if (message.plannableTargeting)
            exports.PlannableTargeting.internalBinaryWrite(message.plannableTargeting, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ProductMetadata
 */
exports.ProductMetadata = new ProductMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlannableTargeting$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.PlannableTargeting", [
            { no: 1, name: "age_ranges", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange", reach_plan_age_range_1.ReachPlanAgeRangeEnum_ReachPlanAgeRange] },
            { no: 2, name: "genders", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => criteria_3.GenderInfo },
            { no: 3, name: "devices", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => criteria_2.DeviceInfo },
            { no: 4, name: "networks", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.ReachPlanNetworkEnum.ReachPlanNetwork", reach_plan_network_1.ReachPlanNetworkEnum_ReachPlanNetwork] },
            { no: 5, name: "youtube_select_lineups", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.YouTubeSelectLineUp }
        ]);
    }
    create(value) {
        const message = { ageRanges: [], genders: [], devices: [], networks: [], youtubeSelectLineups: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange age_ranges */ 1:
                    if (wireType === runtime_1.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.ageRanges.push(reader.int32());
                    else
                        message.ageRanges.push(reader.int32());
                    break;
                case /* repeated google.ads.googleads.v11.common.GenderInfo genders */ 2:
                    message.genders.push(criteria_3.GenderInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.common.DeviceInfo devices */ 3:
                    message.devices.push(criteria_2.DeviceInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.enums.ReachPlanNetworkEnum.ReachPlanNetwork networks */ 4:
                    if (wireType === runtime_1.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.networks.push(reader.int32());
                    else
                        message.networks.push(reader.int32());
                    break;
                case /* repeated google.ads.googleads.v11.services.YouTubeSelectLineUp youtube_select_lineups */ 5:
                    message.youtubeSelectLineups.push(exports.YouTubeSelectLineUp.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange age_ranges = 1; */
        if (message.ageRanges.length) {
            writer.tag(1, runtime_1.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.ageRanges.length; i++)
                writer.int32(message.ageRanges[i]);
            writer.join();
        }
        /* repeated google.ads.googleads.v11.common.GenderInfo genders = 2; */
        for (let i = 0; i < message.genders.length; i++)
            criteria_3.GenderInfo.internalBinaryWrite(message.genders[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.DeviceInfo devices = 3; */
        for (let i = 0; i < message.devices.length; i++)
            criteria_2.DeviceInfo.internalBinaryWrite(message.devices[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.enums.ReachPlanNetworkEnum.ReachPlanNetwork networks = 4; */
        if (message.networks.length) {
            writer.tag(4, runtime_1.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.networks.length; i++)
                writer.int32(message.networks[i]);
            writer.join();
        }
        /* repeated google.ads.googleads.v11.services.YouTubeSelectLineUp youtube_select_lineups = 5; */
        for (let i = 0; i < message.youtubeSelectLineups.length; i++)
            exports.YouTubeSelectLineUp.internalBinaryWrite(message.youtubeSelectLineups[i], writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.PlannableTargeting
 */
exports.PlannableTargeting = new PlannableTargeting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateProductMixIdeasRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateProductMixIdeasRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 6, name: "plannable_location_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 7, name: "currency_code", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 8, name: "budget_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 5, name: "preferences", kind: "message", T: () => exports.Preferences }
        ]);
    }
    create(value) {
        const message = { customerId: "", plannableLocationId: "", currencyCode: "", budgetMicros: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* string plannable_location_id */ 6:
                    message.plannableLocationId = reader.string();
                    break;
                case /* string currency_code */ 7:
                    message.currencyCode = reader.string();
                    break;
                case /* int64 budget_micros */ 8:
                    message.budgetMicros = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.services.Preferences preferences */ 5:
                    message.preferences = exports.Preferences.internalBinaryRead(reader, reader.uint32(), options, message.preferences);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.customerId);
        /* string plannable_location_id = 6; */
        if (message.plannableLocationId !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.plannableLocationId);
        /* string currency_code = 7; */
        if (message.currencyCode !== "")
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.currencyCode);
        /* int64 budget_micros = 8; */
        if (message.budgetMicros !== 0n)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.budgetMicros);
        /* google.ads.googleads.v11.services.Preferences preferences = 5; */
        if (message.preferences)
            exports.Preferences.internalBinaryWrite(message.preferences, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateProductMixIdeasRequest
 */
exports.GenerateProductMixIdeasRequest = new GenerateProductMixIdeasRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Preferences$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.Preferences", [
            { no: 6, name: "is_skippable", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "starts_with_sound", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "ad_length", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ReachPlanAdLengthEnum.ReachPlanAdLength", reach_plan_ad_length_1.ReachPlanAdLengthEnum_ReachPlanAdLength] },
            { no: 8, name: "top_content_only", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "has_guaranteed_price", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { adLength: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_skippable */ 6:
                    message.isSkippable = reader.bool();
                    break;
                case /* optional bool starts_with_sound */ 7:
                    message.startsWithSound = reader.bool();
                    break;
                case /* google.ads.googleads.v11.enums.ReachPlanAdLengthEnum.ReachPlanAdLength ad_length */ 3:
                    message.adLength = reader.int32();
                    break;
                case /* optional bool top_content_only */ 8:
                    message.topContentOnly = reader.bool();
                    break;
                case /* optional bool has_guaranteed_price */ 9:
                    message.hasGuaranteedPrice = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional bool is_skippable = 6; */
        if (message.isSkippable !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).bool(message.isSkippable);
        /* optional bool starts_with_sound = 7; */
        if (message.startsWithSound !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).bool(message.startsWithSound);
        /* google.ads.googleads.v11.enums.ReachPlanAdLengthEnum.ReachPlanAdLength ad_length = 3; */
        if (message.adLength !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.adLength);
        /* optional bool top_content_only = 8; */
        if (message.topContentOnly !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).bool(message.topContentOnly);
        /* optional bool has_guaranteed_price = 9; */
        if (message.hasGuaranteedPrice !== undefined)
            writer.tag(9, runtime_1.WireType.Varint).bool(message.hasGuaranteedPrice);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.Preferences
 */
exports.Preferences = new Preferences$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateProductMixIdeasResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateProductMixIdeasResponse", [
            { no: 1, name: "product_allocation", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ProductAllocation }
        ]);
    }
    create(value) {
        const message = { productAllocation: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.ProductAllocation product_allocation */ 1:
                    message.productAllocation.push(exports.ProductAllocation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.services.ProductAllocation product_allocation = 1; */
        for (let i = 0; i < message.productAllocation.length; i++)
            exports.ProductAllocation.internalBinaryWrite(message.productAllocation[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateProductMixIdeasResponse
 */
exports.GenerateProductMixIdeasResponse = new GenerateProductMixIdeasResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProductAllocation$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ProductAllocation", [
            { no: 3, name: "plannable_product_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "budget_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string plannable_product_code */ 3:
                    message.plannableProductCode = reader.string();
                    break;
                case /* optional int64 budget_micros */ 4:
                    message.budgetMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string plannable_product_code = 3; */
        if (message.plannableProductCode !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.plannableProductCode);
        /* optional int64 budget_micros = 4; */
        if (message.budgetMicros !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.budgetMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ProductAllocation
 */
exports.ProductAllocation = new ProductAllocation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateReachForecastRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateReachForecastRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 9, name: "currency_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "campaign_duration", kind: "message", T: () => exports.CampaignDuration, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 10, name: "cookie_frequency_cap", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "cookie_frequency_cap_setting", kind: "message", T: () => exports.FrequencyCap },
            { no: 11, name: "min_effective_frequency", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "effective_frequency_limit", kind: "message", T: () => exports.EffectiveFrequencyLimit },
            { no: 6, name: "targeting", kind: "message", T: () => exports.Targeting },
            { no: 7, name: "planned_products", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PlannedProduct, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 13, name: "forecast_metric_options", kind: "message", T: () => exports.ForecastMetricOptions },
            { no: 14, name: "customer_reach_group", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { customerId: "", plannedProducts: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* optional string currency_code */ 9:
                    message.currencyCode = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.CampaignDuration campaign_duration */ 3:
                    message.campaignDuration = exports.CampaignDuration.internalBinaryRead(reader, reader.uint32(), options, message.campaignDuration);
                    break;
                case /* optional int32 cookie_frequency_cap */ 10:
                    message.cookieFrequencyCap = reader.int32();
                    break;
                case /* google.ads.googleads.v11.services.FrequencyCap cookie_frequency_cap_setting */ 8:
                    message.cookieFrequencyCapSetting = exports.FrequencyCap.internalBinaryRead(reader, reader.uint32(), options, message.cookieFrequencyCapSetting);
                    break;
                case /* optional int32 min_effective_frequency */ 11:
                    message.minEffectiveFrequency = reader.int32();
                    break;
                case /* optional google.ads.googleads.v11.services.EffectiveFrequencyLimit effective_frequency_limit */ 12:
                    message.effectiveFrequencyLimit = exports.EffectiveFrequencyLimit.internalBinaryRead(reader, reader.uint32(), options, message.effectiveFrequencyLimit);
                    break;
                case /* google.ads.googleads.v11.services.Targeting targeting */ 6:
                    message.targeting = exports.Targeting.internalBinaryRead(reader, reader.uint32(), options, message.targeting);
                    break;
                case /* repeated google.ads.googleads.v11.services.PlannedProduct planned_products */ 7:
                    message.plannedProducts.push(exports.PlannedProduct.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.services.ForecastMetricOptions forecast_metric_options */ 13:
                    message.forecastMetricOptions = exports.ForecastMetricOptions.internalBinaryRead(reader, reader.uint32(), options, message.forecastMetricOptions);
                    break;
                case /* optional string customer_reach_group */ 14:
                    message.customerReachGroup = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.customerId);
        /* optional string currency_code = 9; */
        if (message.currencyCode !== undefined)
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.currencyCode);
        /* google.ads.googleads.v11.services.CampaignDuration campaign_duration = 3; */
        if (message.campaignDuration)
            exports.CampaignDuration.internalBinaryWrite(message.campaignDuration, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* optional int32 cookie_frequency_cap = 10; */
        if (message.cookieFrequencyCap !== undefined)
            writer.tag(10, runtime_1.WireType.Varint).int32(message.cookieFrequencyCap);
        /* google.ads.googleads.v11.services.FrequencyCap cookie_frequency_cap_setting = 8; */
        if (message.cookieFrequencyCapSetting)
            exports.FrequencyCap.internalBinaryWrite(message.cookieFrequencyCapSetting, writer.tag(8, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* optional int32 min_effective_frequency = 11; */
        if (message.minEffectiveFrequency !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).int32(message.minEffectiveFrequency);
        /* optional google.ads.googleads.v11.services.EffectiveFrequencyLimit effective_frequency_limit = 12; */
        if (message.effectiveFrequencyLimit)
            exports.EffectiveFrequencyLimit.internalBinaryWrite(message.effectiveFrequencyLimit, writer.tag(12, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.services.Targeting targeting = 6; */
        if (message.targeting)
            exports.Targeting.internalBinaryWrite(message.targeting, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.PlannedProduct planned_products = 7; */
        for (let i = 0; i < message.plannedProducts.length; i++)
            exports.PlannedProduct.internalBinaryWrite(message.plannedProducts[i], writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.services.ForecastMetricOptions forecast_metric_options = 13; */
        if (message.forecastMetricOptions)
            exports.ForecastMetricOptions.internalBinaryWrite(message.forecastMetricOptions, writer.tag(13, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* optional string customer_reach_group = 14; */
        if (message.customerReachGroup !== undefined)
            writer.tag(14, runtime_1.WireType.LengthDelimited).string(message.customerReachGroup);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateReachForecastRequest
 */
exports.GenerateReachForecastRequest = new GenerateReachForecastRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EffectiveFrequencyLimit$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.EffectiveFrequencyLimit", [
            { no: 1, name: "effective_frequency_breakdown_limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { effectiveFrequencyBreakdownLimit: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 effective_frequency_breakdown_limit */ 1:
                    message.effectiveFrequencyBreakdownLimit = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 effective_frequency_breakdown_limit = 1; */
        if (message.effectiveFrequencyBreakdownLimit !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.effectiveFrequencyBreakdownLimit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.EffectiveFrequencyLimit
 */
exports.EffectiveFrequencyLimit = new EffectiveFrequencyLimit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FrequencyCap$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.FrequencyCap", [
            { no: 3, name: "impressions", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "time_unit", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit", frequency_cap_time_unit_1.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit], options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { impressions: 0, timeUnit: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 impressions */ 3:
                    message.impressions = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit time_unit */ 2:
                    message.timeUnit = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 impressions = 3; */
        if (message.impressions !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.impressions);
        /* google.ads.googleads.v11.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit time_unit = 2; */
        if (message.timeUnit !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.timeUnit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.FrequencyCap
 */
exports.FrequencyCap = new FrequencyCap$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Targeting$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.Targeting", [
            { no: 6, name: "plannable_location_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "age_range", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange", reach_plan_age_range_1.ReachPlanAgeRangeEnum_ReachPlanAgeRange] },
            { no: 3, name: "genders", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => criteria_3.GenderInfo },
            { no: 4, name: "devices", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => criteria_2.DeviceInfo },
            { no: 5, name: "network", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ReachPlanNetworkEnum.ReachPlanNetwork", reach_plan_network_1.ReachPlanNetworkEnum_ReachPlanNetwork] },
            { no: 7, name: "audience_targeting", kind: "message", T: () => exports.AudienceTargeting }
        ]);
    }
    create(value) {
        const message = { ageRange: 0, genders: [], devices: [], network: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string plannable_location_id */ 6:
                    message.plannableLocationId = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange age_range */ 2:
                    message.ageRange = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.GenderInfo genders */ 3:
                    message.genders.push(criteria_3.GenderInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.common.DeviceInfo devices */ 4:
                    message.devices.push(criteria_2.DeviceInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.ReachPlanNetworkEnum.ReachPlanNetwork network */ 5:
                    message.network = reader.int32();
                    break;
                case /* google.ads.googleads.v11.services.AudienceTargeting audience_targeting */ 7:
                    message.audienceTargeting = exports.AudienceTargeting.internalBinaryRead(reader, reader.uint32(), options, message.audienceTargeting);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string plannable_location_id = 6; */
        if (message.plannableLocationId !== undefined)
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.plannableLocationId);
        /* google.ads.googleads.v11.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange age_range = 2; */
        if (message.ageRange !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.ageRange);
        /* repeated google.ads.googleads.v11.common.GenderInfo genders = 3; */
        for (let i = 0; i < message.genders.length; i++)
            criteria_3.GenderInfo.internalBinaryWrite(message.genders[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.DeviceInfo devices = 4; */
        for (let i = 0; i < message.devices.length; i++)
            criteria_2.DeviceInfo.internalBinaryWrite(message.devices[i], writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.ReachPlanNetworkEnum.ReachPlanNetwork network = 5; */
        if (message.network !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.network);
        /* google.ads.googleads.v11.services.AudienceTargeting audience_targeting = 7; */
        if (message.audienceTargeting)
            exports.AudienceTargeting.internalBinaryWrite(message.audienceTargeting, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.Targeting
 */
exports.Targeting = new Targeting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampaignDuration$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.CampaignDuration", [
            { no: 2, name: "duration_in_days", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "date_range", kind: "message", T: () => dates_1.DateRange }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 duration_in_days */ 2:
                    message.durationInDays = reader.int32();
                    break;
                case /* google.ads.googleads.v11.common.DateRange date_range */ 3:
                    message.dateRange = dates_1.DateRange.internalBinaryRead(reader, reader.uint32(), options, message.dateRange);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int32 duration_in_days = 2; */
        if (message.durationInDays !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.durationInDays);
        /* google.ads.googleads.v11.common.DateRange date_range = 3; */
        if (message.dateRange)
            dates_1.DateRange.internalBinaryWrite(message.dateRange, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CampaignDuration
 */
exports.CampaignDuration = new CampaignDuration$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlannedProduct$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.PlannedProduct", [
            { no: 3, name: "plannable_product_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "budget_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "advanced_product_targeting", kind: "message", T: () => exports.AdvancedProductTargeting }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string plannable_product_code */ 3:
                    message.plannableProductCode = reader.string();
                    break;
                case /* optional int64 budget_micros */ 4:
                    message.budgetMicros = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.services.AdvancedProductTargeting advanced_product_targeting */ 5:
                    message.advancedProductTargeting = exports.AdvancedProductTargeting.internalBinaryRead(reader, reader.uint32(), options, message.advancedProductTargeting);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string plannable_product_code = 3; */
        if (message.plannableProductCode !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.plannableProductCode);
        /* optional int64 budget_micros = 4; */
        if (message.budgetMicros !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.budgetMicros);
        /* google.ads.googleads.v11.services.AdvancedProductTargeting advanced_product_targeting = 5; */
        if (message.advancedProductTargeting)
            exports.AdvancedProductTargeting.internalBinaryWrite(message.advancedProductTargeting, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.PlannedProduct
 */
exports.PlannedProduct = new PlannedProduct$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateReachForecastResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateReachForecastResponse", [
            { no: 1, name: "on_target_audience_metrics", kind: "message", T: () => exports.OnTargetAudienceMetrics },
            { no: 2, name: "reach_curve", kind: "message", T: () => exports.ReachCurve }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.services.OnTargetAudienceMetrics on_target_audience_metrics */ 1:
                    message.onTargetAudienceMetrics = exports.OnTargetAudienceMetrics.internalBinaryRead(reader, reader.uint32(), options, message.onTargetAudienceMetrics);
                    break;
                case /* google.ads.googleads.v11.services.ReachCurve reach_curve */ 2:
                    message.reachCurve = exports.ReachCurve.internalBinaryRead(reader, reader.uint32(), options, message.reachCurve);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.services.OnTargetAudienceMetrics on_target_audience_metrics = 1; */
        if (message.onTargetAudienceMetrics)
            exports.OnTargetAudienceMetrics.internalBinaryWrite(message.onTargetAudienceMetrics, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.services.ReachCurve reach_curve = 2; */
        if (message.reachCurve)
            exports.ReachCurve.internalBinaryWrite(message.reachCurve, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateReachForecastResponse
 */
exports.GenerateReachForecastResponse = new GenerateReachForecastResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReachCurve$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ReachCurve", [
            { no: 1, name: "reach_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ReachForecast }
        ]);
    }
    create(value) {
        const message = { reachForecasts: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.ReachForecast reach_forecasts */ 1:
                    message.reachForecasts.push(exports.ReachForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.services.ReachForecast reach_forecasts = 1; */
        for (let i = 0; i < message.reachForecasts.length; i++)
            exports.ReachForecast.internalBinaryWrite(message.reachForecasts[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ReachCurve
 */
exports.ReachCurve = new ReachCurve$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReachForecast$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ReachForecast", [
            { no: 5, name: "cost_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "forecast", kind: "message", T: () => exports.Forecast },
            { no: 4, name: "planned_product_reach_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.PlannedProductReachForecast }
        ]);
    }
    create(value) {
        const message = { costMicros: 0n, plannedProductReachForecasts: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 cost_micros */ 5:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.services.Forecast forecast */ 2:
                    message.forecast = exports.Forecast.internalBinaryRead(reader, reader.uint32(), options, message.forecast);
                    break;
                case /* repeated google.ads.googleads.v11.services.PlannedProductReachForecast planned_product_reach_forecasts */ 4:
                    message.plannedProductReachForecasts.push(exports.PlannedProductReachForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 cost_micros = 5; */
        if (message.costMicros !== 0n)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.costMicros);
        /* google.ads.googleads.v11.services.Forecast forecast = 2; */
        if (message.forecast)
            exports.Forecast.internalBinaryWrite(message.forecast, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.PlannedProductReachForecast planned_product_reach_forecasts = 4; */
        for (let i = 0; i < message.plannedProductReachForecasts.length; i++)
            exports.PlannedProductReachForecast.internalBinaryWrite(message.plannedProductReachForecasts[i], writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ReachForecast
 */
exports.ReachForecast = new ReachForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Forecast$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.Forecast", [
            { no: 5, name: "on_target_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "total_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "on_target_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "total_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "viewable_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "effective_frequency_breakdowns", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.EffectiveFrequencyBreakdown },
            { no: 11, name: "on_target_coview_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "total_coview_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "on_target_coview_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "total_coview_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { effectiveFrequencyBreakdowns: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 on_target_reach */ 5:
                    message.onTargetReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 total_reach */ 6:
                    message.totalReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 on_target_impressions */ 7:
                    message.onTargetImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 total_impressions */ 8:
                    message.totalImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 viewable_impressions */ 9:
                    message.viewableImpressions = reader.int64().toBigInt();
                    break;
                case /* repeated google.ads.googleads.v11.services.EffectiveFrequencyBreakdown effective_frequency_breakdowns */ 10:
                    message.effectiveFrequencyBreakdowns.push(exports.EffectiveFrequencyBreakdown.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int64 on_target_coview_reach */ 11:
                    message.onTargetCoviewReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 total_coview_reach */ 12:
                    message.totalCoviewReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 on_target_coview_impressions */ 13:
                    message.onTargetCoviewImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 total_coview_impressions */ 14:
                    message.totalCoviewImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 on_target_reach = 5; */
        if (message.onTargetReach !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.onTargetReach);
        /* optional int64 total_reach = 6; */
        if (message.totalReach !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.totalReach);
        /* optional int64 on_target_impressions = 7; */
        if (message.onTargetImpressions !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).int64(message.onTargetImpressions);
        /* optional int64 total_impressions = 8; */
        if (message.totalImpressions !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.totalImpressions);
        /* optional int64 viewable_impressions = 9; */
        if (message.viewableImpressions !== undefined)
            writer.tag(9, runtime_1.WireType.Varint).int64(message.viewableImpressions);
        /* repeated google.ads.googleads.v11.services.EffectiveFrequencyBreakdown effective_frequency_breakdowns = 10; */
        for (let i = 0; i < message.effectiveFrequencyBreakdowns.length; i++)
            exports.EffectiveFrequencyBreakdown.internalBinaryWrite(message.effectiveFrequencyBreakdowns[i], writer.tag(10, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* optional int64 on_target_coview_reach = 11; */
        if (message.onTargetCoviewReach !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).int64(message.onTargetCoviewReach);
        /* optional int64 total_coview_reach = 12; */
        if (message.totalCoviewReach !== undefined)
            writer.tag(12, runtime_1.WireType.Varint).int64(message.totalCoviewReach);
        /* optional int64 on_target_coview_impressions = 13; */
        if (message.onTargetCoviewImpressions !== undefined)
            writer.tag(13, runtime_1.WireType.Varint).int64(message.onTargetCoviewImpressions);
        /* optional int64 total_coview_impressions = 14; */
        if (message.totalCoviewImpressions !== undefined)
            writer.tag(14, runtime_1.WireType.Varint).int64(message.totalCoviewImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.Forecast
 */
exports.Forecast = new Forecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlannedProductReachForecast$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.PlannedProductReachForecast", [
            { no: 1, name: "plannable_product_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cost_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "planned_product_forecast", kind: "message", T: () => exports.PlannedProductForecast }
        ]);
    }
    create(value) {
        const message = { plannableProductCode: "", costMicros: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string plannable_product_code */ 1:
                    message.plannableProductCode = reader.string();
                    break;
                case /* int64 cost_micros */ 2:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.services.PlannedProductForecast planned_product_forecast */ 3:
                    message.plannedProductForecast = exports.PlannedProductForecast.internalBinaryRead(reader, reader.uint32(), options, message.plannedProductForecast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string plannable_product_code = 1; */
        if (message.plannableProductCode !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.plannableProductCode);
        /* int64 cost_micros = 2; */
        if (message.costMicros !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.costMicros);
        /* google.ads.googleads.v11.services.PlannedProductForecast planned_product_forecast = 3; */
        if (message.plannedProductForecast)
            exports.PlannedProductForecast.internalBinaryWrite(message.plannedProductForecast, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.PlannedProductReachForecast
 */
exports.PlannedProductReachForecast = new PlannedProductReachForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlannedProductForecast$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.PlannedProductForecast", [
            { no: 1, name: "on_target_reach", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "total_reach", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "on_target_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "total_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "viewable_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "on_target_coview_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "total_coview_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "on_target_coview_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "total_coview_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { onTargetReach: 0n, totalReach: 0n, onTargetImpressions: 0n, totalImpressions: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 on_target_reach */ 1:
                    message.onTargetReach = reader.int64().toBigInt();
                    break;
                case /* int64 total_reach */ 2:
                    message.totalReach = reader.int64().toBigInt();
                    break;
                case /* int64 on_target_impressions */ 3:
                    message.onTargetImpressions = reader.int64().toBigInt();
                    break;
                case /* int64 total_impressions */ 4:
                    message.totalImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 viewable_impressions */ 5:
                    message.viewableImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 on_target_coview_reach */ 6:
                    message.onTargetCoviewReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 total_coview_reach */ 7:
                    message.totalCoviewReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 on_target_coview_impressions */ 8:
                    message.onTargetCoviewImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 total_coview_impressions */ 9:
                    message.totalCoviewImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 on_target_reach = 1; */
        if (message.onTargetReach !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.onTargetReach);
        /* int64 total_reach = 2; */
        if (message.totalReach !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.totalReach);
        /* int64 on_target_impressions = 3; */
        if (message.onTargetImpressions !== 0n)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.onTargetImpressions);
        /* int64 total_impressions = 4; */
        if (message.totalImpressions !== 0n)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.totalImpressions);
        /* optional int64 viewable_impressions = 5; */
        if (message.viewableImpressions !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.viewableImpressions);
        /* optional int64 on_target_coview_reach = 6; */
        if (message.onTargetCoviewReach !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int64(message.onTargetCoviewReach);
        /* optional int64 total_coview_reach = 7; */
        if (message.totalCoviewReach !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).int64(message.totalCoviewReach);
        /* optional int64 on_target_coview_impressions = 8; */
        if (message.onTargetCoviewImpressions !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).int64(message.onTargetCoviewImpressions);
        /* optional int64 total_coview_impressions = 9; */
        if (message.totalCoviewImpressions !== undefined)
            writer.tag(9, runtime_1.WireType.Varint).int64(message.totalCoviewImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.PlannedProductForecast
 */
exports.PlannedProductForecast = new PlannedProductForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OnTargetAudienceMetrics$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.OnTargetAudienceMetrics", [
            { no: 3, name: "youtube_audience_size", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "census_audience_size", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 youtube_audience_size */ 3:
                    message.youtubeAudienceSize = reader.int64().toBigInt();
                    break;
                case /* optional int64 census_audience_size */ 4:
                    message.censusAudienceSize = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int64 youtube_audience_size = 3; */
        if (message.youtubeAudienceSize !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.youtubeAudienceSize);
        /* optional int64 census_audience_size = 4; */
        if (message.censusAudienceSize !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.censusAudienceSize);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.OnTargetAudienceMetrics
 */
exports.OnTargetAudienceMetrics = new OnTargetAudienceMetrics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EffectiveFrequencyBreakdown$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.EffectiveFrequencyBreakdown", [
            { no: 1, name: "effective_frequency", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "on_target_reach", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "total_reach", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "effective_coview_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "on_target_effective_coview_reach", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { effectiveFrequency: 0, onTargetReach: 0n, totalReach: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 effective_frequency */ 1:
                    message.effectiveFrequency = reader.int32();
                    break;
                case /* int64 on_target_reach */ 2:
                    message.onTargetReach = reader.int64().toBigInt();
                    break;
                case /* int64 total_reach */ 3:
                    message.totalReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 effective_coview_reach */ 4:
                    message.effectiveCoviewReach = reader.int64().toBigInt();
                    break;
                case /* optional int64 on_target_effective_coview_reach */ 5:
                    message.onTargetEffectiveCoviewReach = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 effective_frequency = 1; */
        if (message.effectiveFrequency !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.effectiveFrequency);
        /* int64 on_target_reach = 2; */
        if (message.onTargetReach !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.onTargetReach);
        /* int64 total_reach = 3; */
        if (message.totalReach !== 0n)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.totalReach);
        /* optional int64 effective_coview_reach = 4; */
        if (message.effectiveCoviewReach !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int64(message.effectiveCoviewReach);
        /* optional int64 on_target_effective_coview_reach = 5; */
        if (message.onTargetEffectiveCoviewReach !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.onTargetEffectiveCoviewReach);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.EffectiveFrequencyBreakdown
 */
exports.EffectiveFrequencyBreakdown = new EffectiveFrequencyBreakdown$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ForecastMetricOptions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.ForecastMetricOptions", [
            { no: 1, name: "include_coview", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { includeCoview: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool include_coview */ 1:
                    message.includeCoview = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool include_coview = 1; */
        if (message.includeCoview !== false)
            writer.tag(1, runtime_1.WireType.Varint).bool(message.includeCoview);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ForecastMetricOptions
 */
exports.ForecastMetricOptions = new ForecastMetricOptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AudienceTargeting$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.AudienceTargeting", [
            { no: 1, name: "user_interest", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => criteria_1.UserInterestInfo }
        ]);
    }
    create(value) {
        const message = { userInterest: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.UserInterestInfo user_interest */ 1:
                    message.userInterest.push(criteria_1.UserInterestInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.ads.googleads.v11.common.UserInterestInfo user_interest = 1; */
        for (let i = 0; i < message.userInterest.length; i++)
            criteria_1.UserInterestInfo.internalBinaryWrite(message.userInterest[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AudienceTargeting
 */
exports.AudienceTargeting = new AudienceTargeting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdvancedProductTargeting$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.AdvancedProductTargeting", [
            { no: 1, name: "youtube_select_settings", kind: "message", oneof: "advancedTargeting", T: () => exports.YouTubeSelectSettings }
        ]);
    }
    create(value) {
        const message = { advancedTargeting: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.services.YouTubeSelectSettings youtube_select_settings */ 1:
                    message.advancedTargeting = {
                        oneofKind: "youtubeSelectSettings",
                        youtubeSelectSettings: exports.YouTubeSelectSettings.internalBinaryRead(reader, reader.uint32(), options, message.advancedTargeting.youtubeSelectSettings)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.services.YouTubeSelectSettings youtube_select_settings = 1; */
        if (message.advancedTargeting.oneofKind === "youtubeSelectSettings")
            exports.YouTubeSelectSettings.internalBinaryWrite(message.advancedTargeting.youtubeSelectSettings, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AdvancedProductTargeting
 */
exports.AdvancedProductTargeting = new AdvancedProductTargeting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class YouTubeSelectSettings$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.YouTubeSelectSettings", [
            { no: 1, name: "lineup_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { lineupId: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 lineup_id */ 1:
                    message.lineupId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 lineup_id = 1; */
        if (message.lineupId !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.lineupId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.YouTubeSelectSettings
 */
exports.YouTubeSelectSettings = new YouTubeSelectSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class YouTubeSelectLineUp$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.YouTubeSelectLineUp", [
            { no: 1, name: "lineup_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "lineup_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { lineupId: 0n, lineupName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 lineup_id */ 1:
                    message.lineupId = reader.int64().toBigInt();
                    break;
                case /* string lineup_name */ 2:
                    message.lineupName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 lineup_id = 1; */
        if (message.lineupId !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.lineupId);
        /* string lineup_name = 2; */
        if (message.lineupName !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.lineupName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.YouTubeSelectLineUp
 */
exports.YouTubeSelectLineUp = new YouTubeSelectLineUp$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.ReachPlanService
 */
exports.ReachPlanService = new runtime_rpc_1.ServiceType("google.ads.googleads.v11.services.ReachPlanService", [
    { name: "ListPlannableLocations", options: { "google.api.http": { post: "/v11:listPlannableLocations", body: "*" } }, I: exports.ListPlannableLocationsRequest, O: exports.ListPlannableLocationsResponse },
    { name: "ListPlannableProducts", options: { "google.api.http": { post: "/v11:listPlannableProducts", body: "*" }, "google.api.method_signature": ["plannable_location_id"] }, I: exports.ListPlannableProductsRequest, O: exports.ListPlannableProductsResponse },
    { name: "GenerateProductMixIdeas", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}:generateProductMixIdeas", body: "*" }, "google.api.method_signature": ["customer_id,plannable_location_id,currency_code,budget_micros"] }, I: exports.GenerateProductMixIdeasRequest, O: exports.GenerateProductMixIdeasResponse },
    { name: "GenerateReachForecast", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}:generateReachForecast", body: "*" }, "google.api.method_signature": ["customer_id,campaign_duration,planned_products"] }, I: exports.GenerateReachForecastRequest, O: exports.GenerateReachForecastResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
//# sourceMappingURL=reach_plan_service.js.map
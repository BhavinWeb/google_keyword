import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { Campaign } from "../resources/campaign";
import { FieldMask } from "../../google/protobuf/field_mask";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for [CampaignService.MutateCampaigns][google.ads.googleads.v11.services.CampaignService.MutateCampaigns].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateCampaignsRequest
 */
export interface MutateCampaignsRequest {
    /**
     * Required. The ID of the customer whose campaigns are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual campaigns.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.CampaignOperation operations = 2;
     */
    operations: CampaignOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 5;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
}
/**
 * A single operation (create, update, remove) on a campaign.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.CampaignOperation
 */
export interface CampaignOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new campaign.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign create = 1;
         */
        create: Campaign;
    } | {
        oneofKind: "update";
        /**
         * Update operation: The campaign is expected to have a valid
         * resource name.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign update = 2;
         */
        update: Campaign;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: A resource name for the removed campaign is
         * expected, in this format:
         *
         * `customers/{customer_id}/campaigns/{campaign_id}`
         *
         * @generated from protobuf field: string remove = 3;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for campaign mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateCampaignsResponse
 */
export interface MutateCampaignsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateCampaignResult results = 2;
     */
    results: MutateCampaignResult[];
}
/**
 * The result for the campaign mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateCampaignResult
 */
export interface MutateCampaignResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated campaign with only mutable fields after mutate. The field will
     * only be returned when response_content_type is set to "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign campaign = 2;
     */
    campaign?: Campaign;
}
declare class MutateCampaignsRequest$Type extends MessageType<MutateCampaignsRequest> {
    constructor();
    create(value?: PartialMessage<MutateCampaignsRequest>): MutateCampaignsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateCampaignsRequest): MutateCampaignsRequest;
    internalBinaryWrite(message: MutateCampaignsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateCampaignsRequest
 */
export declare const MutateCampaignsRequest: MutateCampaignsRequest$Type;
declare class CampaignOperation$Type extends MessageType<CampaignOperation> {
    constructor();
    create(value?: PartialMessage<CampaignOperation>): CampaignOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CampaignOperation): CampaignOperation;
    internalBinaryWrite(message: CampaignOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CampaignOperation
 */
export declare const CampaignOperation: CampaignOperation$Type;
declare class MutateCampaignsResponse$Type extends MessageType<MutateCampaignsResponse> {
    constructor();
    create(value?: PartialMessage<MutateCampaignsResponse>): MutateCampaignsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateCampaignsResponse): MutateCampaignsResponse;
    internalBinaryWrite(message: MutateCampaignsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateCampaignsResponse
 */
export declare const MutateCampaignsResponse: MutateCampaignsResponse$Type;
declare class MutateCampaignResult$Type extends MessageType<MutateCampaignResult> {
    constructor();
    create(value?: PartialMessage<MutateCampaignResult>): MutateCampaignResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateCampaignResult): MutateCampaignResult;
    internalBinaryWrite(message: MutateCampaignResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateCampaignResult
 */
export declare const MutateCampaignResult: MutateCampaignResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.CampaignService
 */
export declare const CampaignService: ServiceType;
export {};

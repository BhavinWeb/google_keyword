import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { FeedMapping } from "../resources/feed_mapping";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for [FeedMappingService.MutateFeedMappings][google.ads.googleads.v11.services.FeedMappingService.MutateFeedMappings].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateFeedMappingsRequest
 */
export interface MutateFeedMappingsRequest {
    /**
     * Required. The ID of the customer whose feed mappings are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual feed mappings.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.FeedMappingOperation operations = 2;
     */
    operations: FeedMappingOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 5;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
}
/**
 * A single operation (create, remove) on a feed mapping.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.FeedMappingOperation
 */
export interface FeedMappingOperation {
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new feed mapping.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.FeedMapping create = 1;
         */
        create: FeedMapping;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: A resource name for the removed feed mapping is
         * expected, in this format:
         *
         * `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
         *
         * @generated from protobuf field: string remove = 3;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for a feed mapping mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateFeedMappingsResponse
 */
export interface MutateFeedMappingsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateFeedMappingResult results = 2;
     */
    results: MutateFeedMappingResult[];
}
/**
 * The result for the feed mapping mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateFeedMappingResult
 */
export interface MutateFeedMappingResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated feed mapping with only mutable fields after mutate. The field
     * will only be returned when response_content_type is set to
     * "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.FeedMapping feed_mapping = 2;
     */
    feedMapping?: FeedMapping;
}
declare class MutateFeedMappingsRequest$Type extends MessageType<MutateFeedMappingsRequest> {
    constructor();
    create(value?: PartialMessage<MutateFeedMappingsRequest>): MutateFeedMappingsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateFeedMappingsRequest): MutateFeedMappingsRequest;
    internalBinaryWrite(message: MutateFeedMappingsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateFeedMappingsRequest
 */
export declare const MutateFeedMappingsRequest: MutateFeedMappingsRequest$Type;
declare class FeedMappingOperation$Type extends MessageType<FeedMappingOperation> {
    constructor();
    create(value?: PartialMessage<FeedMappingOperation>): FeedMappingOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedMappingOperation): FeedMappingOperation;
    internalBinaryWrite(message: FeedMappingOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.FeedMappingOperation
 */
export declare const FeedMappingOperation: FeedMappingOperation$Type;
declare class MutateFeedMappingsResponse$Type extends MessageType<MutateFeedMappingsResponse> {
    constructor();
    create(value?: PartialMessage<MutateFeedMappingsResponse>): MutateFeedMappingsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateFeedMappingsResponse): MutateFeedMappingsResponse;
    internalBinaryWrite(message: MutateFeedMappingsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateFeedMappingsResponse
 */
export declare const MutateFeedMappingsResponse: MutateFeedMappingsResponse$Type;
declare class MutateFeedMappingResult$Type extends MessageType<MutateFeedMappingResult> {
    constructor();
    create(value?: PartialMessage<MutateFeedMappingResult>): MutateFeedMappingResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateFeedMappingResult): MutateFeedMappingResult;
    internalBinaryWrite(message: MutateFeedMappingResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateFeedMappingResult
 */
export declare const MutateFeedMappingResult: MutateFeedMappingResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.FeedMappingService
 */
export declare const FeedMappingService: ServiceType;
export {};

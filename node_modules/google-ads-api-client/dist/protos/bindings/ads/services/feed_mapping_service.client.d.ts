import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { MutateFeedMappingsResponse } from "./feed_mapping_service";
import type { MutateFeedMappingsRequest } from "./feed_mapping_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Service to manage feed mappings.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.FeedMappingService
 */
export interface IFeedMappingServiceClient {
    /**
     * Creates or removes feed mappings. Operation statuses are
     * returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [DistinctError]()
     *   [FeedMappingError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [IdError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [NotEmptyError]()
     *   [OperationAccessDeniedError]()
     *   [OperatorError]()
     *   [QuotaError]()
     *   [RangeError]()
     *   [RequestError]()
     *   [SizeLimitError]()
     *   [StringFormatError]()
     *   [StringLengthError]()
     *
     * @generated from protobuf rpc: MutateFeedMappings(google.ads.googleads.v11.services.MutateFeedMappingsRequest) returns (google.ads.googleads.v11.services.MutateFeedMappingsResponse);
     */
    mutateFeedMappings(input: MutateFeedMappingsRequest, options?: RpcOptions): UnaryCall<MutateFeedMappingsRequest, MutateFeedMappingsResponse>;
}
/**
 * Service to manage feed mappings.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.FeedMappingService
 */
export declare class FeedMappingServiceClient implements IFeedMappingServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: string;
    methods: import("@protobuf-ts/runtime-rpc").MethodInfo<any, any>[];
    options: {
        [extensionName: string]: import("@protobuf-ts/runtime").JsonValue;
    };
    constructor(_transport: RpcTransport);
    /**
     * Creates or removes feed mappings. Operation statuses are
     * returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [DistinctError]()
     *   [FeedMappingError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [IdError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [NotEmptyError]()
     *   [OperationAccessDeniedError]()
     *   [OperatorError]()
     *   [QuotaError]()
     *   [RangeError]()
     *   [RequestError]()
     *   [SizeLimitError]()
     *   [StringFormatError]()
     *   [StringLengthError]()
     *
     * @generated from protobuf rpc: MutateFeedMappings(google.ads.googleads.v11.services.MutateFeedMappingsRequest) returns (google.ads.googleads.v11.services.MutateFeedMappingsResponse);
     */
    mutateFeedMappings(input: MutateFeedMappingsRequest, options?: RpcOptions): UnaryCall<MutateFeedMappingsRequest, MutateFeedMappingsResponse>;
}

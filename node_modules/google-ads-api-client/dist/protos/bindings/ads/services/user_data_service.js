"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserDataService = exports.UploadUserDataResponse = exports.UserDataOperation = exports.UploadUserDataRequest = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/user_data_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const offline_user_data_1 = require("../common/offline_user_data");
const offline_user_data_2 = require("../common/offline_user_data");
// @generated message type with reflection information, may provide speed optimized methods
class UploadUserDataRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadUserDataRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.UserDataOperation, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "customer_match_user_list_metadata", kind: "message", oneof: "metadata", T: () => offline_user_data_2.CustomerMatchUserListMetadata }
        ]);
    }
    create(value) {
        const message = { customerId: "", operations: [], metadata: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.UserDataOperation operations */ 3:
                    message.operations.push(exports.UserDataOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.common.CustomerMatchUserListMetadata customer_match_user_list_metadata */ 2:
                    message.metadata = {
                        oneofKind: "customerMatchUserListMetadata",
                        customerMatchUserListMetadata: offline_user_data_2.CustomerMatchUserListMetadata.internalBinaryRead(reader, reader.uint32(), options, message.metadata.customerMatchUserListMetadata)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.UserDataOperation operations = 3; */
        for (let i = 0; i < message.operations.length; i++)
            exports.UserDataOperation.internalBinaryWrite(message.operations[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.CustomerMatchUserListMetadata customer_match_user_list_metadata = 2; */
        if (message.metadata.oneofKind === "customerMatchUserListMetadata")
            offline_user_data_2.CustomerMatchUserListMetadata.internalBinaryWrite(message.metadata.customerMatchUserListMetadata, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadUserDataRequest
 */
exports.UploadUserDataRequest = new UploadUserDataRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserDataOperation$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UserDataOperation", [
            { no: 1, name: "create", kind: "message", oneof: "operation", T: () => offline_user_data_1.UserData },
            { no: 2, name: "remove", kind: "message", oneof: "operation", T: () => offline_user_data_1.UserData }
        ]);
    }
    create(value) {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.UserData create */ 1:
                    message.operation = {
                        oneofKind: "create",
                        create: offline_user_data_1.UserData.internalBinaryRead(reader, reader.uint32(), options, message.operation.create)
                    };
                    break;
                case /* google.ads.googleads.v11.common.UserData remove */ 2:
                    message.operation = {
                        oneofKind: "remove",
                        remove: offline_user_data_1.UserData.internalBinaryRead(reader, reader.uint32(), options, message.operation.remove)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.ads.googleads.v11.common.UserData create = 1; */
        if (message.operation.oneofKind === "create")
            offline_user_data_1.UserData.internalBinaryWrite(message.operation.create, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.UserData remove = 2; */
        if (message.operation.oneofKind === "remove")
            offline_user_data_1.UserData.internalBinaryWrite(message.operation.remove, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UserDataOperation
 */
exports.UserDataOperation = new UserDataOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadUserDataResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.ads.googleads.v11.services.UploadUserDataResponse", [
            { no: 3, name: "upload_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "received_operations_count", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string upload_date_time */ 3:
                    message.uploadDateTime = reader.string();
                    break;
                case /* optional int32 received_operations_count */ 4:
                    message.receivedOperationsCount = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string upload_date_time = 3; */
        if (message.uploadDateTime !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.uploadDateTime);
        /* optional int32 received_operations_count = 4; */
        if (message.receivedOperationsCount !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.receivedOperationsCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UploadUserDataResponse
 */
exports.UploadUserDataResponse = new UploadUserDataResponse$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.UserDataService
 */
exports.UserDataService = new runtime_rpc_1.ServiceType("google.ads.googleads.v11.services.UserDataService", [
    { name: "UploadUserData", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}:uploadUserData", body: "*" } }, I: exports.UploadUserDataRequest, O: exports.UploadUserDataResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
//# sourceMappingURL=user_data_service.js.map
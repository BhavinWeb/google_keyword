import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { MediaFile } from "../resources/media_file";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for [MediaFileService.MutateMediaFiles][google.ads.googleads.v11.services.MediaFileService.MutateMediaFiles]
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateMediaFilesRequest
 */
export interface MutateMediaFilesRequest {
    /**
     * Required. The ID of the customer whose media files are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual media file.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MediaFileOperation operations = 2;
     */
    operations: MediaFileOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 5;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
}
/**
 * A single operation to create media file.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MediaFileOperation
 */
export interface MediaFileOperation {
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new media file.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.MediaFile create = 1;
         */
        create: MediaFile;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for a media file mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateMediaFilesResponse
 */
export interface MutateMediaFilesResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateMediaFileResult results = 2;
     */
    results: MutateMediaFileResult[];
}
/**
 * The result for the media file mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateMediaFileResult
 */
export interface MutateMediaFileResult {
    /**
     * The resource name returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated media file with only mutable fields after mutate. The field
     * will only be returned when response_content_type is set to
     * "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.MediaFile media_file = 2;
     */
    mediaFile?: MediaFile;
}
declare class MutateMediaFilesRequest$Type extends MessageType<MutateMediaFilesRequest> {
    constructor();
    create(value?: PartialMessage<MutateMediaFilesRequest>): MutateMediaFilesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateMediaFilesRequest): MutateMediaFilesRequest;
    internalBinaryWrite(message: MutateMediaFilesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateMediaFilesRequest
 */
export declare const MutateMediaFilesRequest: MutateMediaFilesRequest$Type;
declare class MediaFileOperation$Type extends MessageType<MediaFileOperation> {
    constructor();
    create(value?: PartialMessage<MediaFileOperation>): MediaFileOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MediaFileOperation): MediaFileOperation;
    internalBinaryWrite(message: MediaFileOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MediaFileOperation
 */
export declare const MediaFileOperation: MediaFileOperation$Type;
declare class MutateMediaFilesResponse$Type extends MessageType<MutateMediaFilesResponse> {
    constructor();
    create(value?: PartialMessage<MutateMediaFilesResponse>): MutateMediaFilesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateMediaFilesResponse): MutateMediaFilesResponse;
    internalBinaryWrite(message: MutateMediaFilesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateMediaFilesResponse
 */
export declare const MutateMediaFilesResponse: MutateMediaFilesResponse$Type;
declare class MutateMediaFileResult$Type extends MessageType<MutateMediaFileResult> {
    constructor();
    create(value?: PartialMessage<MutateMediaFileResult>): MutateMediaFileResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateMediaFileResult): MutateMediaFileResult;
    internalBinaryWrite(message: MutateMediaFileResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateMediaFileResult
 */
export declare const MutateMediaFileResult: MutateMediaFileResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.MediaFileService
 */
export declare const MediaFileService: ServiceType;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OfflineUserDataJobServiceClient = void 0;
const offline_user_data_job_service_1 = require("./offline_user_data_job_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the OfflineUserDataJobService.
/**
 * Service to manage offline user data jobs.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.OfflineUserDataJobService
 */
class OfflineUserDataJobServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = offline_user_data_job_service_1.OfflineUserDataJobService.typeName;
        this.methods = offline_user_data_job_service_1.OfflineUserDataJobService.methods;
        this.options = offline_user_data_job_service_1.OfflineUserDataJobService.options;
    }
    /**
     * Creates an offline user data job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [NotAllowlistedError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: CreateOfflineUserDataJob(google.ads.googleads.v11.services.CreateOfflineUserDataJobRequest) returns (google.ads.googleads.v11.services.CreateOfflineUserDataJobResponse);
     */
    createOfflineUserDataJob(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
    /**
     * Adds operations to the offline user data job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: AddOfflineUserDataJobOperations(google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsRequest) returns (google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsResponse);
     */
    addOfflineUserDataJobOperations(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
    /**
     * Runs the offline user data job.
     *
     * When finished, the long running operation will contain the processing
     * result or failure information, if any.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [OfflineUserDataJobError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: RunOfflineUserDataJob(google.ads.googleads.v11.services.RunOfflineUserDataJobRequest) returns (google.longrunning.Operation);
     */
    runOfflineUserDataJob(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.OfflineUserDataJobServiceClient = OfflineUserDataJobServiceClient;
//# sourceMappingURL=offline_user_data_job_service.client.js.map
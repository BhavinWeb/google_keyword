import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
import { ServiceType } from '@protobuf-ts/runtime-rpc';
import { KeywordAnnotations } from '../common/keyword_plan_common';
import { KeywordPlanHistoricalMetrics } from '../common/keyword_plan_common';
import { KeywordPlanAggregateMetricResults } from '../common/keyword_plan_common';
import { HistoricalMetricsOptions } from '../common/keyword_plan_common';
import { KeywordPlanAggregateMetrics } from '../common/keyword_plan_common';
import { KeywordMatchTypeEnum_KeywordMatchType } from '../enums/keyword_match_type';
import { KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation } from '../enums/keyword_plan_keyword_annotation';
import { KeywordPlanNetworkEnum_KeywordPlanNetwork } from '../enums/keyword_plan_network';
/**
 * Request message for [KeywordPlanIdeaService.GenerateKeywordIdeas][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordIdeas].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeasRequest
 */
export interface GenerateKeywordIdeasRequest {
    /**
     * The ID of the customer with the recommendation.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * The resource name of the language to target.
     * Each keyword belongs to some set of languages; a keyword is included if
     * language is one of its languages.
     * If not set, all keywords will be included.
     *
     * @generated from protobuf field: optional string language = 14;
     */
    language?: string;
    /**
     * The resource names of the location to target. Maximum is 10.
     * An empty list MAY be used to specify all targeting geos.
     *
     * @generated from protobuf field: repeated string geo_target_constants = 15;
     */
    geoTargetConstants: string[];
    /**
     * If true, adult keywords will be included in response.
     * The default value is false.
     *
     * @generated from protobuf field: bool include_adult_keywords = 10;
     */
    includeAdultKeywords: boolean;
    /**
     * Token of the page to retrieve. If not specified, the first
     * page of results will be returned. To request next page of results use the
     * value obtained from `next_page_token` in the previous response.
     * The request fields must match across pages.
     *
     * @generated from protobuf field: string page_token = 12;
     */
    pageToken: string;
    /**
     * Number of results to retrieve in a single page.
     * A maximum of 10,000 results may be returned, if the page_size
     * exceeds this, it is ignored.
     * If unspecified, at most 10,000 results will be returned.
     * The server may decide to further limit the number of returned resources.
     * If the response contains fewer than 10,000 results it may not be assumed
     * as last page of results.
     *
     * @generated from protobuf field: int32 page_size = 13;
     */
    pageSize: number;
    /**
     * Targeting network.
     * If not set, Google Search And Partners Network will be used.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network = 9;
     */
    keywordPlanNetwork: KeywordPlanNetworkEnum_KeywordPlanNetwork;
    /**
     * The keyword annotations to include in response.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum.KeywordPlanKeywordAnnotation keyword_annotation = 17;
     */
    keywordAnnotation: KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation[];
    /**
     * The aggregate fields to include in response.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 16;
     */
    aggregateMetrics?: KeywordPlanAggregateMetrics;
    /**
     * The options for historical metrics data.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 18;
     */
    historicalMetricsOptions?: HistoricalMetricsOptions;
    /**
     * @generated from protobuf oneof: seed
     */
    seed: {
        oneofKind: 'keywordAndUrlSeed';
        /**
         * A Keyword and a specific Url to generate ideas from
         * for example, cars, www.example.com/cars.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.KeywordAndUrlSeed keyword_and_url_seed = 2;
         */
        keywordAndUrlSeed: KeywordAndUrlSeed;
    } | {
        oneofKind: 'keywordSeed';
        /**
         * A Keyword or phrase to generate ideas from, for example, cars.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.KeywordSeed keyword_seed = 3;
         */
        keywordSeed: KeywordSeed;
    } | {
        oneofKind: 'urlSeed';
        /**
         * A specific url to generate ideas from, for example, www.example.com/cars.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.UrlSeed url_seed = 5;
         */
        urlSeed: UrlSeed;
    } | {
        oneofKind: 'siteSeed';
        /**
         * The site to generate ideas from, for example, www.example.com.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.SiteSeed site_seed = 11;
         */
        siteSeed: SiteSeed;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Keyword And Url Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordAndUrlSeed
 */
export interface KeywordAndUrlSeed {
    /**
     * The URL to crawl in order to generate keyword ideas.
     *
     * @generated from protobuf field: optional string url = 3;
     */
    url?: string;
    /**
     * Requires at least one keyword.
     *
     * @generated from protobuf field: repeated string keywords = 4;
     */
    keywords: string[];
}
/**
 * Keyword Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordSeed
 */
export interface KeywordSeed {
    /**
     * Requires at least one keyword.
     *
     * @generated from protobuf field: repeated string keywords = 2;
     */
    keywords: string[];
}
/**
 * Site Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.SiteSeed
 */
export interface SiteSeed {
    /**
     * The domain name of the site. If the customer requesting the ideas doesn't
     * own the site provided only public information is returned.
     *
     * @generated from protobuf field: optional string site = 2;
     */
    site?: string;
}
/**
 * Url Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.UrlSeed
 */
export interface UrlSeed {
    /**
     * The URL to crawl in order to generate keyword ideas.
     *
     * @generated from protobuf field: optional string url = 2;
     */
    url?: string;
}
/**
 * Response message for [KeywordPlanIdeaService.GenerateKeywordIdeas][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordIdeas].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResponse
 */
export interface GenerateKeywordIdeaResponse {
    /**
     * Results of generating keyword ideas.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.GenerateKeywordIdeaResult results = 1;
     */
    results: GenerateKeywordIdeaResult[];
    /**
     * The aggregate metrics for all keyword ideas.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 4;
     */
    aggregateMetricResults?: KeywordPlanAggregateMetricResults;
    /**
     * Pagination token used to retrieve the next page of results.
     * Pass the content of this string as the `page_token` attribute of
     * the next request.
     * `next_page_token` is not returned for the last page.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
    /**
     * Total number of results available.
     *
     * @generated from protobuf field: int64 total_size = 3;
     */
    totalSize: bigint;
}
/**
 * The result of generating keyword ideas.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResult
 */
export interface GenerateKeywordIdeaResult {
    /**
     * Text of the keyword idea.
     * As in Keyword Plan historical metrics, this text may not be an actual
     * keyword, but the canonical form of multiple keywords.
     * See KeywordPlanKeywordHistoricalMetrics message in KeywordPlanService.
     *
     * @generated from protobuf field: optional string text = 5;
     */
    text?: string;
    /**
     * The historical metrics for the keyword.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_idea_metrics = 3;
     */
    keywordIdeaMetrics?: KeywordPlanHistoricalMetrics;
    /**
     * The annotations for the keyword.
     * The annotation data is only provided if requested.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordAnnotations keyword_annotations = 6;
     */
    keywordAnnotations?: KeywordAnnotations;
    /**
     * The list of close variants from the requested keywords that
     * are combined into this GenerateKeywordIdeaResult. See
     * https://support.google.com/google-ads/answer/9342105 for the
     * definition of "close variants".
     *
     * @generated from protobuf field: repeated string close_variants = 7;
     */
    closeVariants: string[];
}
/**
 * Request message for
 * [KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsRequest
 */
export interface GenerateKeywordHistoricalMetricsRequest {
    /**
     * The ID of the customer with the recommendation.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * A list of keywords to get historical metrics.
     * Not all inputs will be returned as a result of near-exact deduplication.
     * For example, if stats for "car" and "cars" are requested, only "car" will
     * be returned.
     * A maximum of 10,000 keywords can be used.
     *
     * @generated from protobuf field: repeated string keywords = 2;
     */
    keywords: string[];
    /**
     * The resource name of the language to target.
     * Each keyword belongs to some set of languages; a keyword is included if
     * language is one of its languages.
     * If not set, all keywords will be included.
     *
     * @generated from protobuf field: optional string language = 4;
     */
    language?: string;
    /**
     * If true, adult keywords will be included in response.
     * The default value is false.
     *
     * @generated from protobuf field: bool include_adult_keywords = 5;
     */
    includeAdultKeywords: boolean;
    /**
     * The resource names of the location to target. Maximum is 10.
     * An empty list MAY be used to specify all targeting geos.
     *
     * @generated from protobuf field: repeated string geo_target_constants = 6;
     */
    geoTargetConstants: string[];
    /**
     * Targeting network.
     * If not set, Google Search And Partners Network will be used.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network = 7;
     */
    keywordPlanNetwork: KeywordPlanNetworkEnum_KeywordPlanNetwork;
    /**
     * The aggregate fields to include in response.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 8;
     */
    aggregateMetrics?: KeywordPlanAggregateMetrics;
    /**
     * The options for historical metrics data.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 3;
     */
    historicalMetricsOptions?: HistoricalMetricsOptions;
}
/**
 * Response message for
 * [KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResponse
 */
export interface GenerateKeywordHistoricalMetricsResponse {
    /**
     * List of keywords and their historical metrics.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult results = 1;
     */
    results: GenerateKeywordHistoricalMetricsResult[];
    /**
     * The aggregate metrics for all keywords.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 2;
     */
    aggregateMetricResults?: KeywordPlanAggregateMetricResults;
}
/**
 * The result of generating keyword historical metrics.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult
 */
export interface GenerateKeywordHistoricalMetricsResult {
    /**
     * The text of the query associated with one or more keywords.
     * Note that we de-dupe your keywords list, eliminating close variants
     * before returning the keywords as text. For example, if your request
     * originally contained the keywords "car" and "cars", the returned search
     * query will only contain "cars". The list of de-duped queries will be
     * included in close_variants field.
     *
     * @generated from protobuf field: optional string text = 1;
     */
    text?: string;
    /**
     * The list of close variants from the requested keywords whose stats
     * are combined into this GenerateKeywordHistoricalMetricsResult.
     *
     * @generated from protobuf field: repeated string close_variants = 3;
     */
    closeVariants: string[];
    /**
     * The historical metrics for text and its close variants
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_metrics = 2;
     */
    keywordMetrics?: KeywordPlanHistoricalMetrics;
}
/**
 * Request message for
 * [KeywordPlanIdeaService.GenerateAdGroupThemes][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateAdGroupThemes].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesRequest
 */
export interface GenerateAdGroupThemesRequest {
    /**
     * Required. The ID of the customer.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. A list of keywords to group into the provided AdGroups.
     *
     * @generated from protobuf field: repeated string keywords = 2;
     */
    keywords: string[];
    /**
     * Required. A list of resource names of AdGroups to group keywords into.
     *  Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}`
     *
     * @generated from protobuf field: repeated string ad_groups = 3;
     */
    adGroups: string[];
}
/**
 * Response message for
 * [KeywordPlanIdeaService.GenerateAdGroupThemes][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateAdGroupThemes].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesResponse
 */
export interface GenerateAdGroupThemesResponse {
    /**
     * A list of suggested AdGroup/keyword pairings.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.AdGroupKeywordSuggestion ad_group_keyword_suggestions = 1;
     */
    adGroupKeywordSuggestions: AdGroupKeywordSuggestion[];
    /**
     * A list of provided AdGroups that could not be used as suggestions.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.UnusableAdGroup unusable_ad_groups = 2;
     */
    unusableAdGroups: UnusableAdGroup[];
}
/**
 * The suggested text and AdGroup/Campaign pairing for a given keyword.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AdGroupKeywordSuggestion
 */
export interface AdGroupKeywordSuggestion {
    /**
     * The original keyword text.
     *
     * @generated from protobuf field: string keyword_text = 1;
     */
    keywordText: string;
    /**
     * The normalized version of keyword_text for BROAD/EXACT/PHRASE suggestions.
     *
     * @generated from protobuf field: string suggested_keyword_text = 2;
     */
    suggestedKeywordText: string;
    /**
     * The suggested keyword match type.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType suggested_match_type = 3;
     */
    suggestedMatchType: KeywordMatchTypeEnum_KeywordMatchType;
    /**
     * The suggested AdGroup for the keyword.
     * Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}`
     *
     * @generated from protobuf field: string suggested_ad_group = 4;
     */
    suggestedAdGroup: string;
    /**
     * The suggested Campaign for the keyword.
     * Resource name format: `customers/{customer_id}/campaigns/{campaign_id}`
     *
     * @generated from protobuf field: string suggested_campaign = 5;
     */
    suggestedCampaign: string;
}
/**
 * An AdGroup/Campaign pair that could not be used as a suggestion for keywords.
 *
 * AdGroups may not be usable if the AdGroup
 * * belongs to Campaign that is not ENABLED or PAUSED
 * * is itself not ENABLED
 *
 * @generated from protobuf message google.ads.googleads.v11.services.UnusableAdGroup
 */
export interface UnusableAdGroup {
    /**
     * The AdGroup resource name.
     * Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}`
     *
     * @generated from protobuf field: string ad_group = 1;
     */
    adGroup: string;
    /**
     * The Campaign resource name.
     * Resource name format: `customers/{customer_id}/campaigns/{campaign_id}`
     *
     * @generated from protobuf field: string campaign = 2;
     */
    campaign: string;
}
declare class GenerateKeywordIdeasRequest$Type extends MessageType<GenerateKeywordIdeasRequest> {
    constructor();
    create(value?: PartialMessage<GenerateKeywordIdeasRequest>): GenerateKeywordIdeasRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateKeywordIdeasRequest): GenerateKeywordIdeasRequest;
    internalBinaryWrite(message: GenerateKeywordIdeasRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeasRequest
 */
export declare const GenerateKeywordIdeasRequest: GenerateKeywordIdeasRequest$Type;
declare class KeywordAndUrlSeed$Type extends MessageType<KeywordAndUrlSeed> {
    constructor();
    create(value?: PartialMessage<KeywordAndUrlSeed>): KeywordAndUrlSeed;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordAndUrlSeed): KeywordAndUrlSeed;
    internalBinaryWrite(message: KeywordAndUrlSeed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordAndUrlSeed
 */
export declare const KeywordAndUrlSeed: KeywordAndUrlSeed$Type;
declare class KeywordSeed$Type extends MessageType<KeywordSeed> {
    constructor();
    create(value?: PartialMessage<KeywordSeed>): KeywordSeed;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordSeed): KeywordSeed;
    internalBinaryWrite(message: KeywordSeed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordSeed
 */
export declare const KeywordSeed: KeywordSeed$Type;
declare class SiteSeed$Type extends MessageType<SiteSeed> {
    constructor();
    create(value?: PartialMessage<SiteSeed>): SiteSeed;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SiteSeed): SiteSeed;
    internalBinaryWrite(message: SiteSeed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.SiteSeed
 */
export declare const SiteSeed: SiteSeed$Type;
declare class UrlSeed$Type extends MessageType<UrlSeed> {
    constructor();
    create(value?: PartialMessage<UrlSeed>): UrlSeed;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UrlSeed): UrlSeed;
    internalBinaryWrite(message: UrlSeed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UrlSeed
 */
export declare const UrlSeed: UrlSeed$Type;
declare class GenerateKeywordIdeaResponse$Type extends MessageType<GenerateKeywordIdeaResponse> {
    constructor();
    create(value?: PartialMessage<GenerateKeywordIdeaResponse>): GenerateKeywordIdeaResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateKeywordIdeaResponse): GenerateKeywordIdeaResponse;
    internalBinaryWrite(message: GenerateKeywordIdeaResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResponse
 */
export declare const GenerateKeywordIdeaResponse: GenerateKeywordIdeaResponse$Type;
declare class GenerateKeywordIdeaResult$Type extends MessageType<GenerateKeywordIdeaResult> {
    constructor();
    create(value?: PartialMessage<GenerateKeywordIdeaResult>): GenerateKeywordIdeaResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateKeywordIdeaResult): GenerateKeywordIdeaResult;
    internalBinaryWrite(message: GenerateKeywordIdeaResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResult
 */
export declare const GenerateKeywordIdeaResult: GenerateKeywordIdeaResult$Type;
declare class GenerateKeywordHistoricalMetricsRequest$Type extends MessageType<GenerateKeywordHistoricalMetricsRequest> {
    constructor();
    create(value?: PartialMessage<GenerateKeywordHistoricalMetricsRequest>): GenerateKeywordHistoricalMetricsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateKeywordHistoricalMetricsRequest): GenerateKeywordHistoricalMetricsRequest;
    internalBinaryWrite(message: GenerateKeywordHistoricalMetricsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsRequest
 */
export declare const GenerateKeywordHistoricalMetricsRequest: GenerateKeywordHistoricalMetricsRequest$Type;
declare class GenerateKeywordHistoricalMetricsResponse$Type extends MessageType<GenerateKeywordHistoricalMetricsResponse> {
    constructor();
    create(value?: PartialMessage<GenerateKeywordHistoricalMetricsResponse>): GenerateKeywordHistoricalMetricsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateKeywordHistoricalMetricsResponse): GenerateKeywordHistoricalMetricsResponse;
    internalBinaryWrite(message: GenerateKeywordHistoricalMetricsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResponse
 */
export declare const GenerateKeywordHistoricalMetricsResponse: GenerateKeywordHistoricalMetricsResponse$Type;
declare class GenerateKeywordHistoricalMetricsResult$Type extends MessageType<GenerateKeywordHistoricalMetricsResult> {
    constructor();
    create(value?: PartialMessage<GenerateKeywordHistoricalMetricsResult>): GenerateKeywordHistoricalMetricsResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateKeywordHistoricalMetricsResult): GenerateKeywordHistoricalMetricsResult;
    internalBinaryWrite(message: GenerateKeywordHistoricalMetricsResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult
 */
export declare const GenerateKeywordHistoricalMetricsResult: GenerateKeywordHistoricalMetricsResult$Type;
declare class GenerateAdGroupThemesRequest$Type extends MessageType<GenerateAdGroupThemesRequest> {
    constructor();
    create(value?: PartialMessage<GenerateAdGroupThemesRequest>): GenerateAdGroupThemesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateAdGroupThemesRequest): GenerateAdGroupThemesRequest;
    internalBinaryWrite(message: GenerateAdGroupThemesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesRequest
 */
export declare const GenerateAdGroupThemesRequest: GenerateAdGroupThemesRequest$Type;
declare class GenerateAdGroupThemesResponse$Type extends MessageType<GenerateAdGroupThemesResponse> {
    constructor();
    create(value?: PartialMessage<GenerateAdGroupThemesResponse>): GenerateAdGroupThemesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateAdGroupThemesResponse): GenerateAdGroupThemesResponse;
    internalBinaryWrite(message: GenerateAdGroupThemesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesResponse
 */
export declare const GenerateAdGroupThemesResponse: GenerateAdGroupThemesResponse$Type;
declare class AdGroupKeywordSuggestion$Type extends MessageType<AdGroupKeywordSuggestion> {
    constructor();
    create(value?: PartialMessage<AdGroupKeywordSuggestion>): AdGroupKeywordSuggestion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AdGroupKeywordSuggestion): AdGroupKeywordSuggestion;
    internalBinaryWrite(message: AdGroupKeywordSuggestion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AdGroupKeywordSuggestion
 */
export declare const AdGroupKeywordSuggestion: AdGroupKeywordSuggestion$Type;
declare class UnusableAdGroup$Type extends MessageType<UnusableAdGroup> {
    constructor();
    create(value?: PartialMessage<UnusableAdGroup>): UnusableAdGroup;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnusableAdGroup): UnusableAdGroup;
    internalBinaryWrite(message: UnusableAdGroup, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UnusableAdGroup
 */
export declare const UnusableAdGroup: UnusableAdGroup$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.KeywordPlanIdeaService
 */
export declare const KeywordPlanIdeaService: ServiceType;
export {};

import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { Label } from "../resources/label";
import { FieldMask } from "../../google/protobuf/field_mask";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for [LabelService.MutateLabels][google.ads.googleads.v11.services.LabelService.MutateLabels].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateLabelsRequest
 */
export interface MutateLabelsRequest {
    /**
     * Required. ID of the customer whose labels are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on labels.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.LabelOperation operations = 2;
     */
    operations: LabelOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 5;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
}
/**
 * A single operation (create, remove, update) on a label.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.LabelOperation
 */
export interface LabelOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new label.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Label create = 1;
         */
        create: Label;
    } | {
        oneofKind: "update";
        /**
         * Update operation: The label is expected to have a valid resource name.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Label update = 2;
         */
        update: Label;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: A resource name for the label being removed, in
         * this format:
         *
         * `customers/{customer_id}/labels/{label_id}`
         *
         * @generated from protobuf field: string remove = 3;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for a labels mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateLabelsResponse
 */
export interface MutateLabelsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateLabelResult results = 2;
     */
    results: MutateLabelResult[];
}
/**
 * The result for a label mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateLabelResult
 */
export interface MutateLabelResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated label with only mutable fields after mutate. The field will
     * only be returned when response_content_type is set to "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Label label = 2;
     */
    label?: Label;
}
declare class MutateLabelsRequest$Type extends MessageType<MutateLabelsRequest> {
    constructor();
    create(value?: PartialMessage<MutateLabelsRequest>): MutateLabelsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateLabelsRequest): MutateLabelsRequest;
    internalBinaryWrite(message: MutateLabelsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateLabelsRequest
 */
export declare const MutateLabelsRequest: MutateLabelsRequest$Type;
declare class LabelOperation$Type extends MessageType<LabelOperation> {
    constructor();
    create(value?: PartialMessage<LabelOperation>): LabelOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LabelOperation): LabelOperation;
    internalBinaryWrite(message: LabelOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.LabelOperation
 */
export declare const LabelOperation: LabelOperation$Type;
declare class MutateLabelsResponse$Type extends MessageType<MutateLabelsResponse> {
    constructor();
    create(value?: PartialMessage<MutateLabelsResponse>): MutateLabelsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateLabelsResponse): MutateLabelsResponse;
    internalBinaryWrite(message: MutateLabelsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateLabelsResponse
 */
export declare const MutateLabelsResponse: MutateLabelsResponse$Type;
declare class MutateLabelResult$Type extends MessageType<MutateLabelResult> {
    constructor();
    create(value?: PartialMessage<MutateLabelResult>): MutateLabelResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateLabelResult): MutateLabelResult;
    internalBinaryWrite(message: MutateLabelResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateLabelResult
 */
export declare const MutateLabelResult: MutateLabelResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.LabelService
 */
export declare const LabelService: ServiceType;
export {};

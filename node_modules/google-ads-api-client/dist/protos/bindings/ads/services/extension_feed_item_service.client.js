"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtensionFeedItemServiceClient = void 0;
const extension_feed_item_service_1 = require("./extension_feed_item_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the ExtensionFeedItem service.
/**
 * Service to manage extension feed items.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.ExtensionFeedItemService
 */
class ExtensionFeedItemServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = extension_feed_item_service_1.ExtensionFeedItemService.typeName;
        this.methods = extension_feed_item_service_1.ExtensionFeedItemService.methods;
        this.options = extension_feed_item_service_1.ExtensionFeedItemService.options;
    }
    /**
     * Creates, updates, or removes extension feed items. Operation
     * statuses are returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [CollectionSizeError]()
     *   [CountryCodeError]()
     *   [DatabaseError]()
     *   [DateError]()
     *   [DistinctError]()
     *   [ExtensionFeedItemError]()
     *   [FieldError]()
     *   [FieldMaskError]()
     *   [HeaderError]()
     *   [ImageError]()
     *   [InternalError]()
     *   [LanguageCodeError]()
     *   [MutateError]()
     *   [NewResourceCreationError]()
     *   [OperationAccessDeniedError]()
     *   [QuotaError]()
     *   [RangeError]()
     *   [RequestError]()
     *   [SizeLimitError]()
     *   [StringLengthError]()
     *   [UrlFieldError]()
     *
     * @generated from protobuf rpc: MutateExtensionFeedItems(google.ads.googleads.v11.services.MutateExtensionFeedItemsRequest) returns (google.ads.googleads.v11.services.MutateExtensionFeedItemsResponse);
     */
    mutateExtensionFeedItems(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.ExtensionFeedItemServiceClient = ExtensionFeedItemServiceClient;
//# sourceMappingURL=extension_feed_item_service.client.js.map
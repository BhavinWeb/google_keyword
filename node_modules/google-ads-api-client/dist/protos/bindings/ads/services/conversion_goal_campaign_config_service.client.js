"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionGoalCampaignConfigServiceClient = void 0;
const conversion_goal_campaign_config_service_1 = require("./conversion_goal_campaign_config_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the ConversionGoalCampaignConfig service.
/**
 * Service to manage conversion goal campaign config.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.ConversionGoalCampaignConfigService
 */
class ConversionGoalCampaignConfigServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = conversion_goal_campaign_config_service_1.ConversionGoalCampaignConfigService.typeName;
        this.methods = conversion_goal_campaign_config_service_1.ConversionGoalCampaignConfigService.methods;
        this.options = conversion_goal_campaign_config_service_1.ConversionGoalCampaignConfigService.options;
    }
    /**
     * Creates, updates or removes conversion goal campaign config. Operation
     * statuses are returned.
     *
     * @generated from protobuf rpc: MutateConversionGoalCampaignConfigs(google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigsRequest) returns (google.ads.googleads.v11.services.MutateConversionGoalCampaignConfigsResponse);
     */
    mutateConversionGoalCampaignConfigs(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.ConversionGoalCampaignConfigServiceClient = ConversionGoalCampaignConfigServiceClient;
//# sourceMappingURL=conversion_goal_campaign_config_service.client.js.map
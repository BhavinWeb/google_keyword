import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { AdGroup } from "../resources/ad_group";
import { FieldMask } from "../../google/protobuf/field_mask";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for [AdGroupService.MutateAdGroups][google.ads.googleads.v11.services.AdGroupService.MutateAdGroups].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAdGroupsRequest
 */
export interface MutateAdGroupsRequest {
    /**
     * Required. The ID of the customer whose ad groups are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual ad groups.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.AdGroupOperation operations = 2;
     */
    operations: AdGroupOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 5;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
}
/**
 * A single operation (create, update, remove) on an ad group.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AdGroupOperation
 */
export interface AdGroupOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new ad group.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AdGroup create = 1;
         */
        create: AdGroup;
    } | {
        oneofKind: "update";
        /**
         * Update operation: The ad group is expected to have a valid resource name.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AdGroup update = 2;
         */
        update: AdGroup;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: A resource name for the removed ad group is expected,
         * in this format:
         *
         * `customers/{customer_id}/adGroups/{ad_group_id}`
         *
         * @generated from protobuf field: string remove = 3;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for an ad group mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAdGroupsResponse
 */
export interface MutateAdGroupsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateAdGroupResult results = 2;
     */
    results: MutateAdGroupResult[];
}
/**
 * The result for the ad group mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAdGroupResult
 */
export interface MutateAdGroupResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated ad group with only mutable fields after mutate. The field will
     * only be returned when response_content_type is set to "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.AdGroup ad_group = 2;
     */
    adGroup?: AdGroup;
}
declare class MutateAdGroupsRequest$Type extends MessageType<MutateAdGroupsRequest> {
    constructor();
    create(value?: PartialMessage<MutateAdGroupsRequest>): MutateAdGroupsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAdGroupsRequest): MutateAdGroupsRequest;
    internalBinaryWrite(message: MutateAdGroupsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAdGroupsRequest
 */
export declare const MutateAdGroupsRequest: MutateAdGroupsRequest$Type;
declare class AdGroupOperation$Type extends MessageType<AdGroupOperation> {
    constructor();
    create(value?: PartialMessage<AdGroupOperation>): AdGroupOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AdGroupOperation): AdGroupOperation;
    internalBinaryWrite(message: AdGroupOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AdGroupOperation
 */
export declare const AdGroupOperation: AdGroupOperation$Type;
declare class MutateAdGroupsResponse$Type extends MessageType<MutateAdGroupsResponse> {
    constructor();
    create(value?: PartialMessage<MutateAdGroupsResponse>): MutateAdGroupsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAdGroupsResponse): MutateAdGroupsResponse;
    internalBinaryWrite(message: MutateAdGroupsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAdGroupsResponse
 */
export declare const MutateAdGroupsResponse: MutateAdGroupsResponse$Type;
declare class MutateAdGroupResult$Type extends MessageType<MutateAdGroupResult> {
    constructor();
    create(value?: PartialMessage<MutateAdGroupResult>): MutateAdGroupResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAdGroupResult): MutateAdGroupResult;
    internalBinaryWrite(message: MutateAdGroupResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAdGroupResult
 */
export declare const MutateAdGroupResult: MutateAdGroupResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.AdGroupService
 */
export declare const AdGroupService: ServiceType;
export {};

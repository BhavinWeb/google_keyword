"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAdsFieldServiceClient = void 0;
const google_ads_field_service_1 = require("./google_ads_field_service");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
// Proto file describing the GoogleAdsFieldService.
/**
 * Service to fetch Google Ads API fields.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.GoogleAdsFieldService
 */
class GoogleAdsFieldServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = google_ads_field_service_1.GoogleAdsFieldService.typeName;
        this.methods = google_ads_field_service_1.GoogleAdsFieldService.methods;
        this.options = google_ads_field_service_1.GoogleAdsFieldService.options;
    }
    /**
     * Returns just the requested field.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GetGoogleAdsField(google.ads.googleads.v11.services.GetGoogleAdsFieldRequest) returns (google.ads.googleads.v11.resources.GoogleAdsField);
     */
    getGoogleAdsField(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
    /**
     * Returns all fields that match the search query.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QueryError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: SearchGoogleAdsFields(google.ads.googleads.v11.services.SearchGoogleAdsFieldsRequest) returns (google.ads.googleads.v11.services.SearchGoogleAdsFieldsResponse);
     */
    searchGoogleAdsFields(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return (0, runtime_rpc_1.stackIntercept)("unary", this._transport, method, opt, input);
    }
}
exports.GoogleAdsFieldServiceClient = GoogleAdsFieldServiceClient;
//# sourceMappingURL=google_ads_field_service.client.js.map
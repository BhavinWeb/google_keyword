import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { AddBatchJobOperationsResponse } from "./batch_job_service";
import type { AddBatchJobOperationsRequest } from "./batch_job_service";
import type { Operation } from "../../google/longrunning/operations";
import type { RunBatchJobRequest } from "./batch_job_service";
import type { ListBatchJobResultsResponse } from "./batch_job_service";
import type { ListBatchJobResultsRequest } from "./batch_job_service";
import type { MutateBatchJobResponse } from "./batch_job_service";
import type { MutateBatchJobRequest } from "./batch_job_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Service to manage batch jobs.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.BatchJobService
 */
export interface IBatchJobServiceClient {
    /**
     * Mutates a batch job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *
     * @generated from protobuf rpc: MutateBatchJob(google.ads.googleads.v11.services.MutateBatchJobRequest) returns (google.ads.googleads.v11.services.MutateBatchJobResponse);
     */
    mutateBatchJob(input: MutateBatchJobRequest, options?: RpcOptions): UnaryCall<MutateBatchJobRequest, MutateBatchJobResponse>;
    /**
     * Returns the results of the batch job. The job must be done.
     * Supports standard list paging.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [BatchJobError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: ListBatchJobResults(google.ads.googleads.v11.services.ListBatchJobResultsRequest) returns (google.ads.googleads.v11.services.ListBatchJobResultsResponse);
     */
    listBatchJobResults(input: ListBatchJobResultsRequest, options?: RpcOptions): UnaryCall<ListBatchJobResultsRequest, ListBatchJobResultsResponse>;
    /**
     * Runs the batch job.
     *
     * The Operation.metadata field type is BatchJobMetadata. When finished, the
     * long running operation will not contain errors or a response. Instead, use
     * ListBatchJobResults to get the results of the job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [BatchJobError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: RunBatchJob(google.ads.googleads.v11.services.RunBatchJobRequest) returns (google.longrunning.Operation);
     */
    runBatchJob(input: RunBatchJobRequest, options?: RpcOptions): UnaryCall<RunBatchJobRequest, Operation>;
    /**
     * Add operations to the batch job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [BatchJobError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *
     * @generated from protobuf rpc: AddBatchJobOperations(google.ads.googleads.v11.services.AddBatchJobOperationsRequest) returns (google.ads.googleads.v11.services.AddBatchJobOperationsResponse);
     */
    addBatchJobOperations(input: AddBatchJobOperationsRequest, options?: RpcOptions): UnaryCall<AddBatchJobOperationsRequest, AddBatchJobOperationsResponse>;
}
/**
 * Service to manage batch jobs.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.BatchJobService
 */
export declare class BatchJobServiceClient implements IBatchJobServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: string;
    methods: import("@protobuf-ts/runtime-rpc").MethodInfo<any, any>[];
    options: {
        [extensionName: string]: import("@protobuf-ts/runtime").JsonValue;
    };
    constructor(_transport: RpcTransport);
    /**
     * Mutates a batch job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *
     * @generated from protobuf rpc: MutateBatchJob(google.ads.googleads.v11.services.MutateBatchJobRequest) returns (google.ads.googleads.v11.services.MutateBatchJobResponse);
     */
    mutateBatchJob(input: MutateBatchJobRequest, options?: RpcOptions): UnaryCall<MutateBatchJobRequest, MutateBatchJobResponse>;
    /**
     * Returns the results of the batch job. The job must be done.
     * Supports standard list paging.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [BatchJobError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: ListBatchJobResults(google.ads.googleads.v11.services.ListBatchJobResultsRequest) returns (google.ads.googleads.v11.services.ListBatchJobResultsResponse);
     */
    listBatchJobResults(input: ListBatchJobResultsRequest, options?: RpcOptions): UnaryCall<ListBatchJobResultsRequest, ListBatchJobResultsResponse>;
    /**
     * Runs the batch job.
     *
     * The Operation.metadata field type is BatchJobMetadata. When finished, the
     * long running operation will not contain errors or a response. Instead, use
     * ListBatchJobResults to get the results of the job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [BatchJobError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: RunBatchJob(google.ads.googleads.v11.services.RunBatchJobRequest) returns (google.longrunning.Operation);
     */
    runBatchJob(input: RunBatchJobRequest, options?: RpcOptions): UnaryCall<RunBatchJobRequest, Operation>;
    /**
     * Add operations to the batch job.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [BatchJobError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *
     * @generated from protobuf rpc: AddBatchJobOperations(google.ads.googleads.v11.services.AddBatchJobOperationsRequest) returns (google.ads.googleads.v11.services.AddBatchJobOperationsResponse);
     */
    addBatchJobOperations(input: AddBatchJobOperationsRequest, options?: RpcOptions): UnaryCall<AddBatchJobOperationsRequest, AddBatchJobOperationsResponse>;
}

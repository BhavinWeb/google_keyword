import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { Ad } from "../resources/ad";
import { PolicyValidationParameter } from "../common/policy";
import { FieldMask } from "../../google/protobuf/field_mask";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
/**
 * Request message for [AdService.GetAd][google.ads.googleads.v11.services.AdService.GetAd].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GetAdRequest
 */
export interface GetAdRequest {
    /**
     * Required. The resource name of the ad to fetch.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * Request message for [AdService.MutateAds][google.ads.googleads.v11.services.AdService.MutateAds].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAdsRequest
 */
export interface MutateAdsRequest {
    /**
     * Required. The ID of the customer whose ads are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual ads.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.AdOperation operations = 2;
     */
    operations: AdOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 4;
     */
    partialFailure: boolean;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned post mutation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 5;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 3;
     */
    validateOnly: boolean;
}
/**
 * A single update operation on an ad.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AdOperation
 */
export interface AdOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 2;
     */
    updateMask?: FieldMask;
    /**
     * Configuration for how policies are validated.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.PolicyValidationParameter policy_validation_parameter = 3;
     */
    policyValidationParameter?: PolicyValidationParameter;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "update";
        /**
         * Update operation: The ad is expected to have a valid resource name
         * in this format:
         *
         * `customers/{customer_id}/ads/{ad_id}`
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Ad update = 1;
         */
        update: Ad;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for an ad mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAdsResponse
 */
export interface MutateAdsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateAdResult results = 2;
     */
    results: MutateAdResult[];
}
/**
 * The result for the ad mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateAdResult
 */
export interface MutateAdResult {
    /**
     * The resource name returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The mutated ad with only mutable fields after mutate. The field will only
     * be returned when response_content_type is set to "MUTABLE_RESOURCE".
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Ad ad = 2;
     */
    ad?: Ad;
}
declare class GetAdRequest$Type extends MessageType<GetAdRequest> {
    constructor();
    create(value?: PartialMessage<GetAdRequest>): GetAdRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAdRequest): GetAdRequest;
    internalBinaryWrite(message: GetAdRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GetAdRequest
 */
export declare const GetAdRequest: GetAdRequest$Type;
declare class MutateAdsRequest$Type extends MessageType<MutateAdsRequest> {
    constructor();
    create(value?: PartialMessage<MutateAdsRequest>): MutateAdsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAdsRequest): MutateAdsRequest;
    internalBinaryWrite(message: MutateAdsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAdsRequest
 */
export declare const MutateAdsRequest: MutateAdsRequest$Type;
declare class AdOperation$Type extends MessageType<AdOperation> {
    constructor();
    create(value?: PartialMessage<AdOperation>): AdOperation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AdOperation): AdOperation;
    internalBinaryWrite(message: AdOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AdOperation
 */
export declare const AdOperation: AdOperation$Type;
declare class MutateAdsResponse$Type extends MessageType<MutateAdsResponse> {
    constructor();
    create(value?: PartialMessage<MutateAdsResponse>): MutateAdsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAdsResponse): MutateAdsResponse;
    internalBinaryWrite(message: MutateAdsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAdsResponse
 */
export declare const MutateAdsResponse: MutateAdsResponse$Type;
declare class MutateAdResult$Type extends MessageType<MutateAdResult> {
    constructor();
    create(value?: PartialMessage<MutateAdResult>): MutateAdResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateAdResult): MutateAdResult;
    internalBinaryWrite(message: MutateAdResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateAdResult
 */
export declare const MutateAdResult: MutateAdResult$Type;
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.AdService
 */
export declare const AdService: ServiceType;
export {};

import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../protobuf/duration";
/**
 * A common proto for logging HTTP requests. Only contains semantics
 * defined by the HTTP specification. Product-specific logging
 * information MUST be defined in a separate message.
 *
 * @generated from protobuf message google.logging.type.HttpRequest
 */
export interface HttpRequest {
    /**
     * The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.
     *
     * @generated from protobuf field: string request_method = 1;
     */
    requestMethod: string;
    /**
     * The scheme (http, https), the host name, the path and the query
     * portion of the URL that was requested.
     * Example: `"http://example.com/some/info?color=red"`.
     *
     * @generated from protobuf field: string request_url = 2;
     */
    requestUrl: string;
    /**
     * The size of the HTTP request message in bytes, including the request
     * headers and the request body.
     *
     * @generated from protobuf field: int64 request_size = 3;
     */
    requestSize: bigint;
    /**
     * The response code indicating the status of response.
     * Examples: 200, 404.
     *
     * @generated from protobuf field: int32 status = 4;
     */
    status: number;
    /**
     * The size of the HTTP response message sent back to the client, in bytes,
     * including the response headers and the response body.
     *
     * @generated from protobuf field: int64 response_size = 5;
     */
    responseSize: bigint;
    /**
     * The user agent sent by the client. Example:
     * `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET
     * CLR 1.0.3705)"`.
     *
     * @generated from protobuf field: string user_agent = 6;
     */
    userAgent: string;
    /**
     * The IP address (IPv4 or IPv6) of the client that issued the HTTP
     * request. This field can include port information. Examples:
     * `"192.168.1.1"`, `"10.0.0.1:80"`, `"FE80::0202:B3FF:FE1E:8329"`.
     *
     * @generated from protobuf field: string remote_ip = 7;
     */
    remoteIp: string;
    /**
     * The IP address (IPv4 or IPv6) of the origin server that the request was
     * sent to. This field can include port information. Examples:
     * `"192.168.1.1"`, `"10.0.0.1:80"`, `"FE80::0202:B3FF:FE1E:8329"`.
     *
     * @generated from protobuf field: string server_ip = 13;
     */
    serverIp: string;
    /**
     * The referer URL of the request, as defined in
     * [HTTP/1.1 Header Field
     * Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
     *
     * @generated from protobuf field: string referer = 8;
     */
    referer: string;
    /**
     * The request processing latency on the server, from the time the request was
     * received until the response was sent.
     *
     * @generated from protobuf field: google.protobuf.Duration latency = 14;
     */
    latency?: Duration;
    /**
     * Whether or not a cache lookup was attempted.
     *
     * @generated from protobuf field: bool cache_lookup = 11;
     */
    cacheLookup: boolean;
    /**
     * Whether or not an entity was served from cache
     * (with or without validation).
     *
     * @generated from protobuf field: bool cache_hit = 9;
     */
    cacheHit: boolean;
    /**
     * Whether or not the response was validated with the origin server before
     * being served from cache. This field is only meaningful if `cache_hit` is
     * True.
     *
     * @generated from protobuf field: bool cache_validated_with_origin_server = 10;
     */
    cacheValidatedWithOriginServer: boolean;
    /**
     * The number of HTTP response bytes inserted into cache. Set only when a
     * cache fill was attempted.
     *
     * @generated from protobuf field: int64 cache_fill_bytes = 12;
     */
    cacheFillBytes: bigint;
    /**
     * Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2", "websocket"
     *
     * @generated from protobuf field: string protocol = 15;
     */
    protocol: string;
}
declare class HttpRequest$Type extends MessageType<HttpRequest> {
    constructor();
    create(value?: PartialMessage<HttpRequest>): HttpRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HttpRequest): HttpRequest;
    internalBinaryWrite(message: HttpRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.logging.type.HttpRequest
 */
export declare const HttpRequest: HttpRequest$Type;
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpRequest = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const duration_1 = require("../../protobuf/duration");
// @generated message type with reflection information, may provide speed optimized methods
class HttpRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.logging.type.HttpRequest", [
            { no: 1, name: "request_method", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "request_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "request_size", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "response_size", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "user_agent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "remote_ip", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "server_ip", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "referer", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "latency", kind: "message", T: () => duration_1.Duration },
            { no: 11, name: "cache_lookup", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "cache_hit", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "cache_validated_with_origin_server", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "cache_fill_bytes", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "protocol", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { requestMethod: "", requestUrl: "", requestSize: 0n, status: 0, responseSize: 0n, userAgent: "", remoteIp: "", serverIp: "", referer: "", cacheLookup: false, cacheHit: false, cacheValidatedWithOriginServer: false, cacheFillBytes: 0n, protocol: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string request_method */ 1:
                    message.requestMethod = reader.string();
                    break;
                case /* string request_url */ 2:
                    message.requestUrl = reader.string();
                    break;
                case /* int64 request_size */ 3:
                    message.requestSize = reader.int64().toBigInt();
                    break;
                case /* int32 status */ 4:
                    message.status = reader.int32();
                    break;
                case /* int64 response_size */ 5:
                    message.responseSize = reader.int64().toBigInt();
                    break;
                case /* string user_agent */ 6:
                    message.userAgent = reader.string();
                    break;
                case /* string remote_ip */ 7:
                    message.remoteIp = reader.string();
                    break;
                case /* string server_ip */ 13:
                    message.serverIp = reader.string();
                    break;
                case /* string referer */ 8:
                    message.referer = reader.string();
                    break;
                case /* google.protobuf.Duration latency */ 14:
                    message.latency = duration_1.Duration.internalBinaryRead(reader, reader.uint32(), options, message.latency);
                    break;
                case /* bool cache_lookup */ 11:
                    message.cacheLookup = reader.bool();
                    break;
                case /* bool cache_hit */ 9:
                    message.cacheHit = reader.bool();
                    break;
                case /* bool cache_validated_with_origin_server */ 10:
                    message.cacheValidatedWithOriginServer = reader.bool();
                    break;
                case /* int64 cache_fill_bytes */ 12:
                    message.cacheFillBytes = reader.int64().toBigInt();
                    break;
                case /* string protocol */ 15:
                    message.protocol = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string request_method = 1; */
        if (message.requestMethod !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.requestMethod);
        /* string request_url = 2; */
        if (message.requestUrl !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.requestUrl);
        /* int64 request_size = 3; */
        if (message.requestSize !== 0n)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.requestSize);
        /* int32 status = 4; */
        if (message.status !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.status);
        /* int64 response_size = 5; */
        if (message.responseSize !== 0n)
            writer.tag(5, runtime_1.WireType.Varint).int64(message.responseSize);
        /* string user_agent = 6; */
        if (message.userAgent !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.userAgent);
        /* string remote_ip = 7; */
        if (message.remoteIp !== "")
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.remoteIp);
        /* string server_ip = 13; */
        if (message.serverIp !== "")
            writer.tag(13, runtime_1.WireType.LengthDelimited).string(message.serverIp);
        /* string referer = 8; */
        if (message.referer !== "")
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.referer);
        /* google.protobuf.Duration latency = 14; */
        if (message.latency)
            duration_1.Duration.internalBinaryWrite(message.latency, writer.tag(14, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool cache_lookup = 11; */
        if (message.cacheLookup !== false)
            writer.tag(11, runtime_1.WireType.Varint).bool(message.cacheLookup);
        /* bool cache_hit = 9; */
        if (message.cacheHit !== false)
            writer.tag(9, runtime_1.WireType.Varint).bool(message.cacheHit);
        /* bool cache_validated_with_origin_server = 10; */
        if (message.cacheValidatedWithOriginServer !== false)
            writer.tag(10, runtime_1.WireType.Varint).bool(message.cacheValidatedWithOriginServer);
        /* int64 cache_fill_bytes = 12; */
        if (message.cacheFillBytes !== 0n)
            writer.tag(12, runtime_1.WireType.Varint).int64(message.cacheFillBytes);
        /* string protocol = 15; */
        if (message.protocol !== "")
            writer.tag(15, runtime_1.WireType.LengthDelimited).string(message.protocol);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.logging.type.HttpRequest
 */
exports.HttpRequest = new HttpRequest$Type();
//# sourceMappingURL=http_request.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Property = exports.ProjectProperties = exports.Property_PropertyType = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
/**
 * Supported data type of the property values
 *
 * @generated from protobuf enum google.api.Property.PropertyType
 */
var Property_PropertyType;
(function (Property_PropertyType) {
    /**
     * The type is unspecified, and will result in an error.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    Property_PropertyType[Property_PropertyType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * The type is `int64`.
     *
     * @generated from protobuf enum value: INT64 = 1;
     */
    Property_PropertyType[Property_PropertyType["INT64"] = 1] = "INT64";
    /**
     * The type is `bool`.
     *
     * @generated from protobuf enum value: BOOL = 2;
     */
    Property_PropertyType[Property_PropertyType["BOOL"] = 2] = "BOOL";
    /**
     * The type is `string`.
     *
     * @generated from protobuf enum value: STRING = 3;
     */
    Property_PropertyType[Property_PropertyType["STRING"] = 3] = "STRING";
    /**
     * The type is 'double'.
     *
     * @generated from protobuf enum value: DOUBLE = 4;
     */
    Property_PropertyType[Property_PropertyType["DOUBLE"] = 4] = "DOUBLE";
})(Property_PropertyType = exports.Property_PropertyType || (exports.Property_PropertyType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ProjectProperties$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.ProjectProperties", [
            { no: 1, name: "properties", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Property }
        ]);
    }
    create(value) {
        const message = { properties: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.Property properties */ 1:
                    message.properties.push(exports.Property.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.Property properties = 1; */
        for (let i = 0; i < message.properties.length; i++)
            exports.Property.internalBinaryWrite(message.properties[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.ProjectProperties
 */
exports.ProjectProperties = new ProjectProperties$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Property$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.Property", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["google.api.Property.PropertyType", Property_PropertyType] },
            { no: 3, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "", type: 0, description: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.api.Property.PropertyType type */ 2:
                    message.type = reader.int32();
                    break;
                case /* string description */ 3:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* google.api.Property.PropertyType type = 2; */
        if (message.type !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.type);
        /* string description = 3; */
        if (message.description !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.Property
 */
exports.Property = new Property$Type();
//# sourceMappingURL=consumer.js.map
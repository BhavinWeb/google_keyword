"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LabelDescriptor = exports.LabelDescriptor_ValueType = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
/**
 * Value types that can be used as label values.
 *
 * @generated from protobuf enum google.api.LabelDescriptor.ValueType
 */
var LabelDescriptor_ValueType;
(function (LabelDescriptor_ValueType) {
    /**
     * A variable-length string. This is the default.
     *
     * @generated from protobuf enum value: STRING = 0;
     */
    LabelDescriptor_ValueType[LabelDescriptor_ValueType["STRING"] = 0] = "STRING";
    /**
     * Boolean; true or false.
     *
     * @generated from protobuf enum value: BOOL = 1;
     */
    LabelDescriptor_ValueType[LabelDescriptor_ValueType["BOOL"] = 1] = "BOOL";
    /**
     * A 64-bit signed integer.
     *
     * @generated from protobuf enum value: INT64 = 2;
     */
    LabelDescriptor_ValueType[LabelDescriptor_ValueType["INT64"] = 2] = "INT64";
})(LabelDescriptor_ValueType = exports.LabelDescriptor_ValueType || (exports.LabelDescriptor_ValueType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class LabelDescriptor$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.LabelDescriptor", [
            { no: 1, name: "key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "value_type", kind: "enum", T: () => ["google.api.LabelDescriptor.ValueType", LabelDescriptor_ValueType] },
            { no: 3, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { key: "", valueType: 0, description: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string key */ 1:
                    message.key = reader.string();
                    break;
                case /* google.api.LabelDescriptor.ValueType value_type */ 2:
                    message.valueType = reader.int32();
                    break;
                case /* string description */ 3:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string key = 1; */
        if (message.key !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.key);
        /* google.api.LabelDescriptor.ValueType value_type = 2; */
        if (message.valueType !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.valueType);
        /* string description = 3; */
        if (message.description !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.LabelDescriptor
 */
exports.LabelDescriptor = new LabelDescriptor$Type();
//# sourceMappingURL=label.js.map
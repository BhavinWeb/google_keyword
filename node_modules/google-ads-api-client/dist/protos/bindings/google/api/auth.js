"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthRequirement = exports.OAuthRequirements = exports.AuthProvider = exports.JwtLocation = exports.AuthenticationRule = exports.Authentication = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
// @generated message type with reflection information, may provide speed optimized methods
class Authentication$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.Authentication", [
            { no: 3, name: "rules", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.AuthenticationRule },
            { no: 4, name: "providers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.AuthProvider }
        ]);
    }
    create(value) {
        const message = { rules: [], providers: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.AuthenticationRule rules */ 3:
                    message.rules.push(exports.AuthenticationRule.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.api.AuthProvider providers */ 4:
                    message.providers.push(exports.AuthProvider.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.AuthenticationRule rules = 3; */
        for (let i = 0; i < message.rules.length; i++)
            exports.AuthenticationRule.internalBinaryWrite(message.rules[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.AuthProvider providers = 4; */
        for (let i = 0; i < message.providers.length; i++)
            exports.AuthProvider.internalBinaryWrite(message.providers[i], writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.Authentication
 */
exports.Authentication = new Authentication$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthenticationRule$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.AuthenticationRule", [
            { no: 1, name: "selector", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "oauth", kind: "message", T: () => exports.OAuthRequirements },
            { no: 5, name: "allow_without_credential", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "requirements", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.AuthRequirement }
        ]);
    }
    create(value) {
        const message = { selector: "", allowWithoutCredential: false, requirements: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string selector */ 1:
                    message.selector = reader.string();
                    break;
                case /* google.api.OAuthRequirements oauth */ 2:
                    message.oauth = exports.OAuthRequirements.internalBinaryRead(reader, reader.uint32(), options, message.oauth);
                    break;
                case /* bool allow_without_credential */ 5:
                    message.allowWithoutCredential = reader.bool();
                    break;
                case /* repeated google.api.AuthRequirement requirements */ 7:
                    message.requirements.push(exports.AuthRequirement.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string selector = 1; */
        if (message.selector !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.selector);
        /* google.api.OAuthRequirements oauth = 2; */
        if (message.oauth)
            exports.OAuthRequirements.internalBinaryWrite(message.oauth, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool allow_without_credential = 5; */
        if (message.allowWithoutCredential !== false)
            writer.tag(5, runtime_1.WireType.Varint).bool(message.allowWithoutCredential);
        /* repeated google.api.AuthRequirement requirements = 7; */
        for (let i = 0; i < message.requirements.length; i++)
            exports.AuthRequirement.internalBinaryWrite(message.requirements[i], writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.AuthenticationRule
 */
exports.AuthenticationRule = new AuthenticationRule$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JwtLocation$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.JwtLocation", [
            { no: 1, name: "header", kind: "scalar", oneof: "in", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "query", kind: "scalar", oneof: "in", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "value_prefix", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { in: { oneofKind: undefined }, valuePrefix: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string header */ 1:
                    message.in = {
                        oneofKind: "header",
                        header: reader.string()
                    };
                    break;
                case /* string query */ 2:
                    message.in = {
                        oneofKind: "query",
                        query: reader.string()
                    };
                    break;
                case /* string value_prefix */ 3:
                    message.valuePrefix = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string header = 1; */
        if (message.in.oneofKind === "header")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.in.header);
        /* string query = 2; */
        if (message.in.oneofKind === "query")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.in.query);
        /* string value_prefix = 3; */
        if (message.valuePrefix !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.valuePrefix);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.JwtLocation
 */
exports.JwtLocation = new JwtLocation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthProvider$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.AuthProvider", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "issuer", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "jwks_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "audiences", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "authorization_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "jwt_locations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.JwtLocation }
        ]);
    }
    create(value) {
        const message = { id: "", issuer: "", jwksUri: "", audiences: "", authorizationUrl: "", jwtLocations: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string issuer */ 2:
                    message.issuer = reader.string();
                    break;
                case /* string jwks_uri */ 3:
                    message.jwksUri = reader.string();
                    break;
                case /* string audiences */ 4:
                    message.audiences = reader.string();
                    break;
                case /* string authorization_url */ 5:
                    message.authorizationUrl = reader.string();
                    break;
                case /* repeated google.api.JwtLocation jwt_locations */ 6:
                    message.jwtLocations.push(exports.JwtLocation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.id);
        /* string issuer = 2; */
        if (message.issuer !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.issuer);
        /* string jwks_uri = 3; */
        if (message.jwksUri !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.jwksUri);
        /* string audiences = 4; */
        if (message.audiences !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.audiences);
        /* string authorization_url = 5; */
        if (message.authorizationUrl !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.authorizationUrl);
        /* repeated google.api.JwtLocation jwt_locations = 6; */
        for (let i = 0; i < message.jwtLocations.length; i++)
            exports.JwtLocation.internalBinaryWrite(message.jwtLocations[i], writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.AuthProvider
 */
exports.AuthProvider = new AuthProvider$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OAuthRequirements$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.OAuthRequirements", [
            { no: 1, name: "canonical_scopes", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { canonicalScopes: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string canonical_scopes */ 1:
                    message.canonicalScopes = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string canonical_scopes = 1; */
        if (message.canonicalScopes !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.canonicalScopes);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.OAuthRequirements
 */
exports.OAuthRequirements = new OAuthRequirements$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthRequirement$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.AuthRequirement", [
            { no: 1, name: "provider_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "audiences", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { providerId: "", audiences: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string provider_id */ 1:
                    message.providerId = reader.string();
                    break;
                case /* string audiences */ 2:
                    message.audiences = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string provider_id = 1; */
        if (message.providerId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.providerId);
        /* string audiences = 2; */
        if (message.audiences !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.audiences);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.AuthRequirement
 */
exports.AuthRequirement = new AuthRequirement$Type();
//# sourceMappingURL=auth.js.map
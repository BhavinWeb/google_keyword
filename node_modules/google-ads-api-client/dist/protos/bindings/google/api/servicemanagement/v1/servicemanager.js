"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceManager = exports.GenerateConfigReportResponse = exports.GenerateConfigReportRequest = exports.GetServiceRolloutRequest = exports.ListServiceRolloutsResponse = exports.ListServiceRolloutsRequest = exports.CreateServiceRolloutRequest = exports.SubmitConfigSourceResponse = exports.SubmitConfigSourceRequest = exports.CreateServiceConfigRequest = exports.ListServiceConfigsResponse = exports.ListServiceConfigsRequest = exports.GetServiceConfigRequest = exports.UndeleteServiceResponse = exports.UndeleteServiceRequest = exports.DeleteServiceRequest = exports.CreateServiceRequest = exports.GetServiceRequest = exports.ListServicesResponse = exports.ListServicesRequest = exports.GetServiceConfigRequest_ConfigView = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/servicemanagement/v1/servicemanager.proto" (package "google.api.servicemanagement.v1", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const operations_1 = require("../../../longrunning/operations");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const resources_1 = require("./resources");
const resources_2 = require("./resources");
const any_1 = require("../../../protobuf/any");
const resources_3 = require("./resources");
const resources_4 = require("./resources");
const service_1 = require("../../service");
const resources_5 = require("./resources");
/**
 * @generated from protobuf enum google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView
 */
var GetServiceConfigRequest_ConfigView;
(function (GetServiceConfigRequest_ConfigView) {
    /**
     * Server response includes all fields except SourceInfo.
     *
     * @generated from protobuf enum value: BASIC = 0;
     */
    GetServiceConfigRequest_ConfigView[GetServiceConfigRequest_ConfigView["BASIC"] = 0] = "BASIC";
    /**
     * Server response includes all fields including SourceInfo.
     * SourceFiles are of type 'google.api.servicemanagement.v1.ConfigFile'
     * and are only available for configs created using the
     * SubmitConfigSource method.
     *
     * @generated from protobuf enum value: FULL = 1;
     */
    GetServiceConfigRequest_ConfigView[GetServiceConfigRequest_ConfigView["FULL"] = 1] = "FULL";
})(GetServiceConfigRequest_ConfigView = exports.GetServiceConfigRequest_ConfigView || (exports.GetServiceConfigRequest_ConfigView = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ListServicesRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ListServicesRequest", [
            { no: 1, name: "producer_project_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "consumer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { producerProjectId: "", pageSize: 0, pageToken: "", consumerId: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string producer_project_id */ 1:
                    message.producerProjectId = reader.string();
                    break;
                case /* int32 page_size */ 5:
                    message.pageSize = reader.int32();
                    break;
                case /* string page_token */ 6:
                    message.pageToken = reader.string();
                    break;
                case /* string consumer_id = 7 [deprecated = true];*/ 7:
                    message.consumerId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string producer_project_id = 1; */
        if (message.producerProjectId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.producerProjectId);
        /* int32 page_size = 5; */
        if (message.pageSize !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.pageSize);
        /* string page_token = 6; */
        if (message.pageToken !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.pageToken);
        /* string consumer_id = 7 [deprecated = true]; */
        if (message.consumerId !== "")
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.consumerId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ListServicesRequest
 */
exports.ListServicesRequest = new ListServicesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServicesResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ListServicesResponse", [
            { no: 1, name: "services", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => resources_5.ManagedService },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { services: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.servicemanagement.v1.ManagedService services */ 1:
                    message.services.push(resources_5.ManagedService.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.servicemanagement.v1.ManagedService services = 1; */
        for (let i = 0; i < message.services.length; i++)
            resources_5.ManagedService.internalBinaryWrite(message.services[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ListServicesResponse
 */
exports.ListServicesResponse = new ListServicesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.GetServiceRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.GetServiceRequest
 */
exports.GetServiceRequest = new GetServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateServiceRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.CreateServiceRequest", [
            { no: 1, name: "service", kind: "message", T: () => resources_5.ManagedService, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.servicemanagement.v1.ManagedService service */ 1:
                    message.service = resources_5.ManagedService.internalBinaryRead(reader, reader.uint32(), options, message.service);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.servicemanagement.v1.ManagedService service = 1; */
        if (message.service)
            resources_5.ManagedService.internalBinaryWrite(message.service, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.CreateServiceRequest
 */
exports.CreateServiceRequest = new CreateServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteServiceRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.DeleteServiceRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.DeleteServiceRequest
 */
exports.DeleteServiceRequest = new DeleteServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UndeleteServiceRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.UndeleteServiceRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.UndeleteServiceRequest
 */
exports.UndeleteServiceRequest = new UndeleteServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UndeleteServiceResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.UndeleteServiceResponse", [
            { no: 1, name: "service", kind: "message", T: () => resources_5.ManagedService }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.servicemanagement.v1.ManagedService service */ 1:
                    message.service = resources_5.ManagedService.internalBinaryRead(reader, reader.uint32(), options, message.service);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.servicemanagement.v1.ManagedService service = 1; */
        if (message.service)
            resources_5.ManagedService.internalBinaryWrite(message.service, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.UndeleteServiceResponse
 */
exports.UndeleteServiceResponse = new UndeleteServiceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceConfigRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.GetServiceConfigRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "config_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "view", kind: "enum", T: () => ["google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView", GetServiceConfigRequest_ConfigView] }
        ]);
    }
    create(value) {
        const message = { serviceName: "", configId: "", view: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* string config_id */ 2:
                    message.configId = reader.string();
                    break;
                case /* google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view */ 3:
                    message.view = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* string config_id = 2; */
        if (message.configId !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.configId);
        /* google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3; */
        if (message.view !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.view);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.GetServiceConfigRequest
 */
exports.GetServiceConfigRequest = new GetServiceConfigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServiceConfigsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ListServiceConfigsRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { serviceName: "", pageToken: "", pageSize: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* string page_token */ 2:
                    message.pageToken = reader.string();
                    break;
                case /* int32 page_size */ 3:
                    message.pageSize = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* string page_token = 2; */
        if (message.pageToken !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.pageToken);
        /* int32 page_size = 3; */
        if (message.pageSize !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.pageSize);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ListServiceConfigsRequest
 */
exports.ListServiceConfigsRequest = new ListServiceConfigsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServiceConfigsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ListServiceConfigsResponse", [
            { no: 1, name: "service_configs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => service_1.Service },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { serviceConfigs: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.Service service_configs */ 1:
                    message.serviceConfigs.push(service_1.Service.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.Service service_configs = 1; */
        for (let i = 0; i < message.serviceConfigs.length; i++)
            service_1.Service.internalBinaryWrite(message.serviceConfigs[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ListServiceConfigsResponse
 */
exports.ListServiceConfigsResponse = new ListServiceConfigsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateServiceConfigRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.CreateServiceConfigRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "service_config", kind: "message", T: () => service_1.Service, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* google.api.Service service_config */ 2:
                    message.serviceConfig = service_1.Service.internalBinaryRead(reader, reader.uint32(), options, message.serviceConfig);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* google.api.Service service_config = 2; */
        if (message.serviceConfig)
            service_1.Service.internalBinaryWrite(message.serviceConfig, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.CreateServiceConfigRequest
 */
exports.CreateServiceConfigRequest = new CreateServiceConfigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubmitConfigSourceRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.SubmitConfigSourceRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "config_source", kind: "message", T: () => resources_4.ConfigSource, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OPTIONAL"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "", validateOnly: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* google.api.servicemanagement.v1.ConfigSource config_source */ 2:
                    message.configSource = resources_4.ConfigSource.internalBinaryRead(reader, reader.uint32(), options, message.configSource);
                    break;
                case /* bool validate_only */ 3:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* google.api.servicemanagement.v1.ConfigSource config_source = 2; */
        if (message.configSource)
            resources_4.ConfigSource.internalBinaryWrite(message.configSource, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool validate_only = 3; */
        if (message.validateOnly !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.SubmitConfigSourceRequest
 */
exports.SubmitConfigSourceRequest = new SubmitConfigSourceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubmitConfigSourceResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.SubmitConfigSourceResponse", [
            { no: 1, name: "service_config", kind: "message", T: () => service_1.Service }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.Service service_config */ 1:
                    message.serviceConfig = service_1.Service.internalBinaryRead(reader, reader.uint32(), options, message.serviceConfig);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.Service service_config = 1; */
        if (message.serviceConfig)
            service_1.Service.internalBinaryWrite(message.serviceConfig, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.SubmitConfigSourceResponse
 */
exports.SubmitConfigSourceResponse = new SubmitConfigSourceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateServiceRolloutRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.CreateServiceRolloutRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "rollout", kind: "message", T: () => resources_3.Rollout, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* google.api.servicemanagement.v1.Rollout rollout */ 2:
                    message.rollout = resources_3.Rollout.internalBinaryRead(reader, reader.uint32(), options, message.rollout);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* google.api.servicemanagement.v1.Rollout rollout = 2; */
        if (message.rollout)
            resources_3.Rollout.internalBinaryWrite(message.rollout, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.CreateServiceRolloutRequest
 */
exports.CreateServiceRolloutRequest = new CreateServiceRolloutRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServiceRolloutsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ListServiceRolloutsRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "filter", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "", pageToken: "", pageSize: 0, filter: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* string page_token */ 2:
                    message.pageToken = reader.string();
                    break;
                case /* int32 page_size */ 3:
                    message.pageSize = reader.int32();
                    break;
                case /* string filter */ 4:
                    message.filter = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* string page_token = 2; */
        if (message.pageToken !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.pageToken);
        /* int32 page_size = 3; */
        if (message.pageSize !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.pageSize);
        /* string filter = 4; */
        if (message.filter !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.filter);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ListServiceRolloutsRequest
 */
exports.ListServiceRolloutsRequest = new ListServiceRolloutsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServiceRolloutsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ListServiceRolloutsResponse", [
            { no: 1, name: "rollouts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => resources_3.Rollout },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { rollouts: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.servicemanagement.v1.Rollout rollouts */ 1:
                    message.rollouts.push(resources_3.Rollout.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.servicemanagement.v1.Rollout rollouts = 1; */
        for (let i = 0; i < message.rollouts.length; i++)
            resources_3.Rollout.internalBinaryWrite(message.rollouts[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ListServiceRolloutsResponse
 */
exports.ListServiceRolloutsResponse = new ListServiceRolloutsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceRolloutRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.GetServiceRolloutRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "rollout_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { serviceName: "", rolloutId: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* string rollout_id */ 2:
                    message.rolloutId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* string rollout_id = 2; */
        if (message.rolloutId !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.rolloutId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.GetServiceRolloutRequest
 */
exports.GetServiceRolloutRequest = new GetServiceRolloutRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateConfigReportRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.GenerateConfigReportRequest", [
            { no: 1, name: "new_config", kind: "message", T: () => any_1.Any, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "old_config", kind: "message", T: () => any_1.Any, options: { "google.api.field_behavior": ["OPTIONAL"] } }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Any new_config */ 1:
                    message.newConfig = any_1.Any.internalBinaryRead(reader, reader.uint32(), options, message.newConfig);
                    break;
                case /* google.protobuf.Any old_config */ 2:
                    message.oldConfig = any_1.Any.internalBinaryRead(reader, reader.uint32(), options, message.oldConfig);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.protobuf.Any new_config = 1; */
        if (message.newConfig)
            any_1.Any.internalBinaryWrite(message.newConfig, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Any old_config = 2; */
        if (message.oldConfig)
            any_1.Any.internalBinaryWrite(message.oldConfig, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.GenerateConfigReportRequest
 */
exports.GenerateConfigReportRequest = new GenerateConfigReportRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateConfigReportResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.GenerateConfigReportResponse", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "change_reports", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => resources_2.ChangeReport },
            { no: 4, name: "diagnostics", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => resources_1.Diagnostic }
        ]);
    }
    create(value) {
        const message = { serviceName: "", id: "", changeReports: [], diagnostics: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* string id */ 2:
                    message.id = reader.string();
                    break;
                case /* repeated google.api.servicemanagement.v1.ChangeReport change_reports */ 3:
                    message.changeReports.push(resources_2.ChangeReport.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.api.servicemanagement.v1.Diagnostic diagnostics */ 4:
                    message.diagnostics.push(resources_1.Diagnostic.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* string id = 2; */
        if (message.id !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.id);
        /* repeated google.api.servicemanagement.v1.ChangeReport change_reports = 3; */
        for (let i = 0; i < message.changeReports.length; i++)
            resources_2.ChangeReport.internalBinaryWrite(message.changeReports[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.servicemanagement.v1.Diagnostic diagnostics = 4; */
        for (let i = 0; i < message.diagnostics.length; i++)
            resources_1.Diagnostic.internalBinaryWrite(message.diagnostics[i], writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.GenerateConfigReportResponse
 */
exports.GenerateConfigReportResponse = new GenerateConfigReportResponse$Type();
/**
 * @generated ServiceType for protobuf service google.api.servicemanagement.v1.ServiceManager
 */
exports.ServiceManager = new runtime_rpc_1.ServiceType("google.api.servicemanagement.v1.ServiceManager", [
    { name: "ListServices", options: { "google.api.http": { get: "/v1/services" }, "google.api.method_signature": ["producer_project_id,consumer_id"] }, I: exports.ListServicesRequest, O: exports.ListServicesResponse },
    { name: "GetService", options: { "google.api.http": { get: "/v1/services/{service_name}" }, "google.api.method_signature": ["service_name"] }, I: exports.GetServiceRequest, O: resources_5.ManagedService },
    { name: "CreateService", options: { "google.api.http": { post: "/v1/services", body: "service" }, "google.api.method_signature": ["service"], "google.longrunning.operation_info": { responseType: "google.api.servicemanagement.v1.ManagedService", metadataType: "google.api.servicemanagement.v1.OperationMetadata" } }, I: exports.CreateServiceRequest, O: operations_1.Operation },
    { name: "DeleteService", options: { "google.api.http": { delete: "/v1/services/{service_name}" }, "google.api.method_signature": ["service_name"], "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "google.api.servicemanagement.v1.OperationMetadata" } }, I: exports.DeleteServiceRequest, O: operations_1.Operation },
    { name: "UndeleteService", options: { "google.api.http": { post: "/v1/services/{service_name}:undelete" }, "google.api.method_signature": ["service_name"], "google.longrunning.operation_info": { responseType: "google.api.servicemanagement.v1.UndeleteServiceResponse", metadataType: "google.api.servicemanagement.v1.OperationMetadata" } }, I: exports.UndeleteServiceRequest, O: operations_1.Operation },
    { name: "ListServiceConfigs", options: { "google.api.http": { get: "/v1/services/{service_name}/configs" }, "google.api.method_signature": ["service_name"] }, I: exports.ListServiceConfigsRequest, O: exports.ListServiceConfigsResponse },
    { name: "GetServiceConfig", options: { "google.api.http": { get: "/v1/services/{service_name}/configs/{config_id}", additionalBindings: [{ get: "/v1/services/{service_name}/config" }] }, "google.api.method_signature": ["service_name,config_id,view"] }, I: exports.GetServiceConfigRequest, O: service_1.Service },
    { name: "CreateServiceConfig", options: { "google.api.http": { post: "/v1/services/{service_name}/configs", body: "service_config" }, "google.api.method_signature": ["service_name,service_config"] }, I: exports.CreateServiceConfigRequest, O: service_1.Service },
    { name: "SubmitConfigSource", options: { "google.api.http": { post: "/v1/services/{service_name}/configs:submit", body: "*" }, "google.api.method_signature": ["service_name,config_source,validate_only"], "google.longrunning.operation_info": { responseType: "google.api.servicemanagement.v1.SubmitConfigSourceResponse", metadataType: "google.api.servicemanagement.v1.OperationMetadata" } }, I: exports.SubmitConfigSourceRequest, O: operations_1.Operation },
    { name: "ListServiceRollouts", options: { "google.api.http": { get: "/v1/services/{service_name}/rollouts" }, "google.api.method_signature": ["service_name,filter"] }, I: exports.ListServiceRolloutsRequest, O: exports.ListServiceRolloutsResponse },
    { name: "GetServiceRollout", options: { "google.api.http": { get: "/v1/services/{service_name}/rollouts/{rollout_id}" }, "google.api.method_signature": ["service_name,rollout_id"] }, I: exports.GetServiceRolloutRequest, O: resources_3.Rollout },
    { name: "CreateServiceRollout", options: { "google.api.http": { post: "/v1/services/{service_name}/rollouts", body: "rollout" }, "google.api.method_signature": ["service_name,rollout"], "google.longrunning.operation_info": { responseType: "google.api.servicemanagement.v1.Rollout", metadataType: "google.api.servicemanagement.v1.OperationMetadata" } }, I: exports.CreateServiceRolloutRequest, O: operations_1.Operation },
    { name: "GenerateConfigReport", options: { "google.api.http": { post: "/v1/services:generateConfigReport", body: "*" }, "google.api.method_signature": ["new_config,old_config"] }, I: exports.GenerateConfigReportRequest, O: exports.GenerateConfigReportResponse }
], { "google.api.default_host": "servicemanagement.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only,https://www.googleapis.com/auth/service.management,https://www.googleapis.com/auth/service.management.readonly" });
//# sourceMappingURL=servicemanager.js.map
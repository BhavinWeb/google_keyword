"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rollout_DeleteServiceStrategy = exports.Rollout_TrafficPercentStrategy = exports.Rollout = exports.ChangeReport = exports.ConfigRef = exports.ConfigFile = exports.ConfigSource = exports.Diagnostic = exports.OperationMetadata_Step = exports.OperationMetadata = exports.ManagedService = exports.Rollout_RolloutStatus = exports.ConfigFile_FileType = exports.Diagnostic_Kind = exports.OperationMetadata_Status = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const config_change_1 = require("../../config_change");
const timestamp_1 = require("../../../protobuf/timestamp");
/**
 * Code describes the status of the operation (or one of its steps).
 *
 * @generated from protobuf enum google.api.servicemanagement.v1.OperationMetadata.Status
 */
var OperationMetadata_Status;
(function (OperationMetadata_Status) {
    /**
     * Unspecifed code.
     *
     * @generated from protobuf enum value: STATUS_UNSPECIFIED = 0;
     */
    OperationMetadata_Status[OperationMetadata_Status["STATUS_UNSPECIFIED"] = 0] = "STATUS_UNSPECIFIED";
    /**
     * The operation or step has completed without errors.
     *
     * @generated from protobuf enum value: DONE = 1;
     */
    OperationMetadata_Status[OperationMetadata_Status["DONE"] = 1] = "DONE";
    /**
     * The operation or step has not started yet.
     *
     * @generated from protobuf enum value: NOT_STARTED = 2;
     */
    OperationMetadata_Status[OperationMetadata_Status["NOT_STARTED"] = 2] = "NOT_STARTED";
    /**
     * The operation or step is in progress.
     *
     * @generated from protobuf enum value: IN_PROGRESS = 3;
     */
    OperationMetadata_Status[OperationMetadata_Status["IN_PROGRESS"] = 3] = "IN_PROGRESS";
    /**
     * The operation or step has completed with errors. If the operation is
     * rollbackable, the rollback completed with errors too.
     *
     * @generated from protobuf enum value: FAILED = 4;
     */
    OperationMetadata_Status[OperationMetadata_Status["FAILED"] = 4] = "FAILED";
    /**
     * The operation or step has completed with cancellation.
     *
     * @generated from protobuf enum value: CANCELLED = 5;
     */
    OperationMetadata_Status[OperationMetadata_Status["CANCELLED"] = 5] = "CANCELLED";
})(OperationMetadata_Status = exports.OperationMetadata_Status || (exports.OperationMetadata_Status = {}));
/**
 * The kind of diagnostic information possible.
 *
 * @generated from protobuf enum google.api.servicemanagement.v1.Diagnostic.Kind
 */
var Diagnostic_Kind;
(function (Diagnostic_Kind) {
    /**
     * Warnings and errors
     *
     * @generated from protobuf enum value: WARNING = 0;
     */
    Diagnostic_Kind[Diagnostic_Kind["WARNING"] = 0] = "WARNING";
    /**
     * Only errors
     *
     * @generated from protobuf enum value: ERROR = 1;
     */
    Diagnostic_Kind[Diagnostic_Kind["ERROR"] = 1] = "ERROR";
})(Diagnostic_Kind = exports.Diagnostic_Kind || (exports.Diagnostic_Kind = {}));
/**
 * @generated from protobuf enum google.api.servicemanagement.v1.ConfigFile.FileType
 */
var ConfigFile_FileType;
(function (ConfigFile_FileType) {
    /**
     * Unknown file type.
     *
     * @generated from protobuf enum value: FILE_TYPE_UNSPECIFIED = 0;
     */
    ConfigFile_FileType[ConfigFile_FileType["FILE_TYPE_UNSPECIFIED"] = 0] = "FILE_TYPE_UNSPECIFIED";
    /**
     * YAML-specification of service.
     *
     * @generated from protobuf enum value: SERVICE_CONFIG_YAML = 1;
     */
    ConfigFile_FileType[ConfigFile_FileType["SERVICE_CONFIG_YAML"] = 1] = "SERVICE_CONFIG_YAML";
    /**
     * OpenAPI specification, serialized in JSON.
     *
     * @generated from protobuf enum value: OPEN_API_JSON = 2;
     */
    ConfigFile_FileType[ConfigFile_FileType["OPEN_API_JSON"] = 2] = "OPEN_API_JSON";
    /**
     * OpenAPI specification, serialized in YAML.
     *
     * @generated from protobuf enum value: OPEN_API_YAML = 3;
     */
    ConfigFile_FileType[ConfigFile_FileType["OPEN_API_YAML"] = 3] = "OPEN_API_YAML";
    /**
     * FileDescriptorSet, generated by protoc.
     *
     * To generate, use protoc with imports and source info included.
     * For an example test.proto file, the following command would put the value
     * in a new file named out.pb.
     *
     * $protoc --include_imports --include_source_info test.proto -o out.pb
     *
     * @generated from protobuf enum value: FILE_DESCRIPTOR_SET_PROTO = 4;
     */
    ConfigFile_FileType[ConfigFile_FileType["FILE_DESCRIPTOR_SET_PROTO"] = 4] = "FILE_DESCRIPTOR_SET_PROTO";
    /**
     * Uncompiled Proto file. Used for storage and display purposes only,
     * currently server-side compilation is not supported. Should match the
     * inputs to 'protoc' command used to generated FILE_DESCRIPTOR_SET_PROTO. A
     * file of this type can only be included if at least one file of type
     * FILE_DESCRIPTOR_SET_PROTO is included.
     *
     * @generated from protobuf enum value: PROTO_FILE = 6;
     */
    ConfigFile_FileType[ConfigFile_FileType["PROTO_FILE"] = 6] = "PROTO_FILE";
})(ConfigFile_FileType = exports.ConfigFile_FileType || (exports.ConfigFile_FileType = {}));
/**
 * Status of a Rollout.
 *
 * @generated from protobuf enum google.api.servicemanagement.v1.Rollout.RolloutStatus
 */
var Rollout_RolloutStatus;
(function (Rollout_RolloutStatus) {
    /**
     * No status specified.
     *
     * @generated from protobuf enum value: ROLLOUT_STATUS_UNSPECIFIED = 0;
     */
    Rollout_RolloutStatus[Rollout_RolloutStatus["ROLLOUT_STATUS_UNSPECIFIED"] = 0] = "ROLLOUT_STATUS_UNSPECIFIED";
    /**
     * The Rollout is in progress.
     *
     * @generated from protobuf enum value: IN_PROGRESS = 1;
     */
    Rollout_RolloutStatus[Rollout_RolloutStatus["IN_PROGRESS"] = 1] = "IN_PROGRESS";
    /**
     * The Rollout has completed successfully.
     *
     * @generated from protobuf enum value: SUCCESS = 2;
     */
    Rollout_RolloutStatus[Rollout_RolloutStatus["SUCCESS"] = 2] = "SUCCESS";
    /**
     * The Rollout has been cancelled. This can happen if you have overlapping
     * Rollout pushes, and the previous ones will be cancelled.
     *
     * @generated from protobuf enum value: CANCELLED = 3;
     */
    Rollout_RolloutStatus[Rollout_RolloutStatus["CANCELLED"] = 3] = "CANCELLED";
    /**
     * The Rollout has failed and the rollback attempt has failed too.
     *
     * @generated from protobuf enum value: FAILED = 4;
     */
    Rollout_RolloutStatus[Rollout_RolloutStatus["FAILED"] = 4] = "FAILED";
    /**
     * The Rollout has not started yet and is pending for execution.
     *
     * @generated from protobuf enum value: PENDING = 5;
     */
    Rollout_RolloutStatus[Rollout_RolloutStatus["PENDING"] = 5] = "PENDING";
    /**
     * The Rollout has failed and rolled back to the previous successful
     * Rollout.
     *
     * @generated from protobuf enum value: FAILED_ROLLED_BACK = 6;
     */
    Rollout_RolloutStatus[Rollout_RolloutStatus["FAILED_ROLLED_BACK"] = 6] = "FAILED_ROLLED_BACK";
})(Rollout_RolloutStatus = exports.Rollout_RolloutStatus || (exports.Rollout_RolloutStatus = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ManagedService$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ManagedService", [
            { no: 2, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "producer_project_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { serviceName: "", producerProjectId: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 2:
                    message.serviceName = reader.string();
                    break;
                case /* string producer_project_id */ 3:
                    message.producerProjectId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service_name = 2; */
        if (message.serviceName !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        /* string producer_project_id = 3; */
        if (message.producerProjectId !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.producerProjectId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ManagedService
 */
exports.ManagedService = new ManagedService$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OperationMetadata$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.OperationMetadata", [
            { no: 1, name: "resource_names", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "steps", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.OperationMetadata_Step },
            { no: 3, name: "progress_percentage", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "start_time", kind: "message", T: () => timestamp_1.Timestamp }
        ]);
    }
    create(value) {
        const message = { resourceNames: [], steps: [], progressPercentage: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string resource_names */ 1:
                    message.resourceNames.push(reader.string());
                    break;
                case /* repeated google.api.servicemanagement.v1.OperationMetadata.Step steps */ 2:
                    message.steps.push(exports.OperationMetadata_Step.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 progress_percentage */ 3:
                    message.progressPercentage = reader.int32();
                    break;
                case /* google.protobuf.Timestamp start_time */ 4:
                    message.startTime = timestamp_1.Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startTime);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string resource_names = 1; */
        for (let i = 0; i < message.resourceNames.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.resourceNames[i]);
        /* repeated google.api.servicemanagement.v1.OperationMetadata.Step steps = 2; */
        for (let i = 0; i < message.steps.length; i++)
            exports.OperationMetadata_Step.internalBinaryWrite(message.steps[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* int32 progress_percentage = 3; */
        if (message.progressPercentage !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.progressPercentage);
        /* google.protobuf.Timestamp start_time = 4; */
        if (message.startTime)
            timestamp_1.Timestamp.internalBinaryWrite(message.startTime, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.OperationMetadata
 */
exports.OperationMetadata = new OperationMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OperationMetadata_Step$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.OperationMetadata.Step", [
            { no: 2, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "status", kind: "enum", T: () => ["google.api.servicemanagement.v1.OperationMetadata.Status", OperationMetadata_Status] }
        ]);
    }
    create(value) {
        const message = { description: "", status: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string description */ 2:
                    message.description = reader.string();
                    break;
                case /* google.api.servicemanagement.v1.OperationMetadata.Status status */ 4:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string description = 2; */
        if (message.description !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.description);
        /* google.api.servicemanagement.v1.OperationMetadata.Status status = 4; */
        if (message.status !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.OperationMetadata.Step
 */
exports.OperationMetadata_Step = new OperationMetadata_Step$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Diagnostic$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.Diagnostic", [
            { no: 1, name: "location", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "kind", kind: "enum", T: () => ["google.api.servicemanagement.v1.Diagnostic.Kind", Diagnostic_Kind] },
            { no: 3, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { location: "", kind: 0, message: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string location */ 1:
                    message.location = reader.string();
                    break;
                case /* google.api.servicemanagement.v1.Diagnostic.Kind kind */ 2:
                    message.kind = reader.int32();
                    break;
                case /* string message */ 3:
                    message.message = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string location = 1; */
        if (message.location !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.location);
        /* google.api.servicemanagement.v1.Diagnostic.Kind kind = 2; */
        if (message.kind !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.kind);
        /* string message = 3; */
        if (message.message !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.message);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.Diagnostic
 */
exports.Diagnostic = new Diagnostic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfigSource$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ConfigSource", [
            { no: 5, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "files", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ConfigFile }
        ]);
    }
    create(value) {
        const message = { id: "", files: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 5:
                    message.id = reader.string();
                    break;
                case /* repeated google.api.servicemanagement.v1.ConfigFile files */ 2:
                    message.files.push(exports.ConfigFile.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string id = 5; */
        if (message.id !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.id);
        /* repeated google.api.servicemanagement.v1.ConfigFile files = 2; */
        for (let i = 0; i < message.files.length; i++)
            exports.ConfigFile.internalBinaryWrite(message.files[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ConfigSource
 */
exports.ConfigSource = new ConfigSource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfigFile$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ConfigFile", [
            { no: 1, name: "file_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "file_contents", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 4, name: "file_type", kind: "enum", T: () => ["google.api.servicemanagement.v1.ConfigFile.FileType", ConfigFile_FileType] }
        ]);
    }
    create(value) {
        const message = { filePath: "", fileContents: new Uint8Array(0), fileType: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_path */ 1:
                    message.filePath = reader.string();
                    break;
                case /* bytes file_contents */ 3:
                    message.fileContents = reader.bytes();
                    break;
                case /* google.api.servicemanagement.v1.ConfigFile.FileType file_type */ 4:
                    message.fileType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string file_path = 1; */
        if (message.filePath !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.filePath);
        /* bytes file_contents = 3; */
        if (message.fileContents.length)
            writer.tag(3, runtime_1.WireType.LengthDelimited).bytes(message.fileContents);
        /* google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4; */
        if (message.fileType !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.fileType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ConfigFile
 */
exports.ConfigFile = new ConfigFile$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfigRef$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ConfigRef", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ConfigRef
 */
exports.ConfigRef = new ConfigRef$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeReport$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.ChangeReport", [
            { no: 1, name: "config_changes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => config_change_1.ConfigChange }
        ]);
    }
    create(value) {
        const message = { configChanges: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.ConfigChange config_changes */ 1:
                    message.configChanges.push(config_change_1.ConfigChange.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.ConfigChange config_changes = 1; */
        for (let i = 0; i < message.configChanges.length; i++)
            config_change_1.ConfigChange.internalBinaryWrite(message.configChanges[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.ChangeReport
 */
exports.ChangeReport = new ChangeReport$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Rollout$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.Rollout", [
            { no: 1, name: "rollout_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OPTIONAL"] } },
            { no: 2, name: "create_time", kind: "message", T: () => timestamp_1.Timestamp },
            { no: 3, name: "created_by", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "status", kind: "enum", T: () => ["google.api.servicemanagement.v1.Rollout.RolloutStatus", Rollout_RolloutStatus] },
            { no: 5, name: "traffic_percent_strategy", kind: "message", oneof: "strategy", T: () => exports.Rollout_TrafficPercentStrategy },
            { no: 200, name: "delete_service_strategy", kind: "message", oneof: "strategy", T: () => exports.Rollout_DeleteServiceStrategy },
            { no: 8, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { rolloutId: "", createdBy: "", status: 0, strategy: { oneofKind: undefined }, serviceName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string rollout_id */ 1:
                    message.rolloutId = reader.string();
                    break;
                case /* google.protobuf.Timestamp create_time */ 2:
                    message.createTime = timestamp_1.Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createTime);
                    break;
                case /* string created_by */ 3:
                    message.createdBy = reader.string();
                    break;
                case /* google.api.servicemanagement.v1.Rollout.RolloutStatus status */ 4:
                    message.status = reader.int32();
                    break;
                case /* google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy */ 5:
                    message.strategy = {
                        oneofKind: "trafficPercentStrategy",
                        trafficPercentStrategy: exports.Rollout_TrafficPercentStrategy.internalBinaryRead(reader, reader.uint32(), options, message.strategy.trafficPercentStrategy)
                    };
                    break;
                case /* google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy */ 200:
                    message.strategy = {
                        oneofKind: "deleteServiceStrategy",
                        deleteServiceStrategy: exports.Rollout_DeleteServiceStrategy.internalBinaryRead(reader, reader.uint32(), options, message.strategy.deleteServiceStrategy)
                    };
                    break;
                case /* string service_name */ 8:
                    message.serviceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string rollout_id = 1; */
        if (message.rolloutId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.rolloutId);
        /* google.protobuf.Timestamp create_time = 2; */
        if (message.createTime)
            timestamp_1.Timestamp.internalBinaryWrite(message.createTime, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string created_by = 3; */
        if (message.createdBy !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.createdBy);
        /* google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4; */
        if (message.status !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.status);
        /* google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5; */
        if (message.strategy.oneofKind === "trafficPercentStrategy")
            exports.Rollout_TrafficPercentStrategy.internalBinaryWrite(message.strategy.trafficPercentStrategy, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200; */
        if (message.strategy.oneofKind === "deleteServiceStrategy")
            exports.Rollout_DeleteServiceStrategy.internalBinaryWrite(message.strategy.deleteServiceStrategy, writer.tag(200, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string service_name = 8; */
        if (message.serviceName !== "")
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.serviceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.Rollout
 */
exports.Rollout = new Rollout$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Rollout_TrafficPercentStrategy$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy", [
            { no: 1, name: "percentages", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ } }
        ]);
    }
    create(value) {
        const message = { percentages: {} };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<string, double> percentages */ 1:
                    this.binaryReadMap1(message.percentages, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap1(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.double();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.percentages");
            }
        }
        map[key ?? ""] = val ?? 0;
    }
    internalBinaryWrite(message, writer, options) {
        /* map<string, double> percentages = 1; */
        for (let k of Object.keys(message.percentages))
            writer.tag(1, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.LengthDelimited).string(k).tag(2, runtime_1.WireType.Bit64).double(message.percentages[k]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy
 */
exports.Rollout_TrafficPercentStrategy = new Rollout_TrafficPercentStrategy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Rollout_DeleteServiceStrategy$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy
 */
exports.Rollout_DeleteServiceStrategy = new Rollout_DeleteServiceStrategy$Type();
//# sourceMappingURL=resources.js.map
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * `Backend` defines the backend configuration for a service.
 *
 * @generated from protobuf message google.api.Backend
 */
export interface Backend {
    /**
     * A list of API backend rules that apply to individual API methods.
     *
     * **NOTE:** All service configuration rules follow "last one wins" order.
     *
     * @generated from protobuf field: repeated google.api.BackendRule rules = 1;
     */
    rules: BackendRule[];
}
/**
 * A backend rule provides configuration for an individual API element.
 *
 * @generated from protobuf message google.api.BackendRule
 */
export interface BackendRule {
    /**
     * Selects the methods to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     *
     * @generated from protobuf field: string selector = 1;
     */
    selector: string;
    /**
     * The address of the API backend.
     *
     * The scheme is used to determine the backend protocol and security.
     * The following schemes are accepted:
     *
     *    SCHEME        PROTOCOL    SECURITY
     *    http://       HTTP        None
     *    https://      HTTP        TLS
     *    grpc://       gRPC        None
     *    grpcs://      gRPC        TLS
     *
     * It is recommended to explicitly include a scheme. Leaving out the scheme
     * may cause constrasting behaviors across platforms.
     *
     * If the port is unspecified, the default is:
     * - 80 for schemes without TLS
     * - 443 for schemes with TLS
     *
     * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
     * to specify the protocol version.
     *
     * @generated from protobuf field: string address = 2;
     */
    address: string;
    /**
     * The number of seconds to wait for a response from a request. The default
     * varies based on the request protocol and deployment environment.
     *
     * @generated from protobuf field: double deadline = 3;
     */
    deadline: number;
    /**
     * Minimum deadline in seconds needed for this method. Calls having deadline
     * value lower than this will be rejected.
     *
     * @generated from protobuf field: double min_deadline = 4;
     */
    minDeadline: number;
    /**
     * The number of seconds to wait for the completion of a long running
     * operation. The default is no deadline.
     *
     * @generated from protobuf field: double operation_deadline = 5;
     */
    operationDeadline: number;
    /**
     * @generated from protobuf field: google.api.BackendRule.PathTranslation path_translation = 6;
     */
    pathTranslation: BackendRule_PathTranslation;
    /**
     * @generated from protobuf oneof: authentication
     */
    authentication: {
        oneofKind: "jwtAudience";
        /**
         * The JWT audience is used when generating a JWT ID token for the backend.
         * This ID token will be added in the HTTP "authorization" header, and sent
         * to the backend.
         *
         * @generated from protobuf field: string jwt_audience = 7;
         */
        jwtAudience: string;
    } | {
        oneofKind: "disableAuth";
        /**
         * When disable_auth is true, a JWT ID token won't be generated and the
         * original "Authorization" HTTP header will be preserved. If the header is
         * used to carry the original token and is expected by the backend, this
         * field must be set to true to preserve the header.
         *
         * @generated from protobuf field: bool disable_auth = 8;
         */
        disableAuth: boolean;
    } | {
        oneofKind: undefined;
    };
    /**
     * The protocol used for sending a request to the backend.
     * The supported values are "http/1.1" and "h2".
     *
     * The default value is inferred from the scheme in the
     * [address][google.api.BackendRule.address] field:
     *
     *    SCHEME        PROTOCOL
     *    http://       http/1.1
     *    https://      http/1.1
     *    grpc://       h2
     *    grpcs://      h2
     *
     * For secure HTTP backends (https://) that support HTTP/2, set this field
     * to "h2" for improved performance.
     *
     * Configuring this field to non-default values is only supported for secure
     * HTTP backends. This field will be ignored for all other backends.
     *
     * See
     * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
     * for more details on the supported values.
     *
     * @generated from protobuf field: string protocol = 9;
     */
    protocol: string;
}
/**
 * Path Translation specifies how to combine the backend address with the
 * request path in order to produce the appropriate forwarding URL for the
 * request.
 *
 * Path Translation is applicable only to HTTP-based backends. Backends which
 * do not accept requests over HTTP/HTTPS should leave `path_translation`
 * unspecified.
 *
 * @generated from protobuf enum google.api.BackendRule.PathTranslation
 */
export declare enum BackendRule_PathTranslation {
    /**
     * @generated from protobuf enum value: PATH_TRANSLATION_UNSPECIFIED = 0;
     */
    PATH_TRANSLATION_UNSPECIFIED = 0,
    /**
     * Use the backend address as-is, with no modification to the path. If the
     * URL pattern contains variables, the variable names and values will be
     * appended to the query string. If a query string parameter and a URL
     * pattern variable have the same name, this may result in duplicate keys in
     * the query string.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.cloudfunctions.net/getUser
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?cid=widgetworks&uid=johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?timezone=EST&cid=widgetworks&uid=johndoe
     *
     * @generated from protobuf enum value: CONSTANT_ADDRESS = 1;
     */
    CONSTANT_ADDRESS = 1,
    /**
     * The request path will be appended to the backend address.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.appspot.com
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST
     *
     * @generated from protobuf enum value: APPEND_PATH_TO_ADDRESS = 2;
     */
    APPEND_PATH_TO_ADDRESS = 2
}
declare class Backend$Type extends MessageType<Backend> {
    constructor();
    create(value?: PartialMessage<Backend>): Backend;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Backend): Backend;
    internalBinaryWrite(message: Backend, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.Backend
 */
export declare const Backend: Backend$Type;
declare class BackendRule$Type extends MessageType<BackendRule> {
    constructor();
    create(value?: PartialMessage<BackendRule>): BackendRule;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BackendRule): BackendRule;
    internalBinaryWrite(message: BackendRule, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.BackendRule
 */
export declare const BackendRule: BackendRule$Type;
export {};

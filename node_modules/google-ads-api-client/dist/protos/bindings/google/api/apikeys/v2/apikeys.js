"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiKeys = exports.LookupKeyResponse = exports.LookupKeyRequest = exports.UndeleteKeyRequest = exports.DeleteKeyRequest = exports.UpdateKeyRequest = exports.GetKeyStringResponse = exports.GetKeyStringRequest = exports.GetKeyRequest = exports.ListKeysResponse = exports.ListKeysRequest = exports.CreateKeyRequest = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/apikeys/v2/apikeys.proto" (package "google.api.apikeys.v2", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const operations_1 = require("../../../longrunning/operations");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const field_mask_1 = require("../../../protobuf/field_mask");
const resources_1 = require("./resources");
// @generated message type with reflection information, may provide speed optimized methods
class CreateKeyRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.CreateKeyRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { childType: "apikeys.googleapis.com/Key" } } },
            { no: 2, name: "key", kind: "message", T: () => resources_1.Key, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "key_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { parent: "", keyId: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* google.api.apikeys.v2.Key key */ 2:
                    message.key = resources_1.Key.internalBinaryRead(reader, reader.uint32(), options, message.key);
                    break;
                case /* string key_id */ 3:
                    message.keyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.parent);
        /* google.api.apikeys.v2.Key key = 2; */
        if (message.key)
            resources_1.Key.internalBinaryWrite(message.key, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string key_id = 3; */
        if (message.keyId !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.keyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.CreateKeyRequest
 */
exports.CreateKeyRequest = new CreateKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListKeysRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.ListKeysRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { childType: "apikeys.googleapis.com/Key" } } },
            { no: 2, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "google.api.field_behavior": ["OPTIONAL"] } },
            { no: 3, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OPTIONAL"] } },
            { no: 6, name: "show_deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OPTIONAL"] } }
        ]);
    }
    create(value) {
        const message = { parent: "", pageSize: 0, pageToken: "", showDeleted: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* int32 page_size */ 2:
                    message.pageSize = reader.int32();
                    break;
                case /* string page_token */ 3:
                    message.pageToken = reader.string();
                    break;
                case /* bool show_deleted */ 6:
                    message.showDeleted = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.parent);
        /* int32 page_size = 2; */
        if (message.pageSize !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.pageSize);
        /* string page_token = 3; */
        if (message.pageToken !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.pageToken);
        /* bool show_deleted = 6; */
        if (message.showDeleted !== false)
            writer.tag(6, runtime_1.WireType.Varint).bool(message.showDeleted);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.ListKeysRequest
 */
exports.ListKeysRequest = new ListKeysRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListKeysResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.ListKeysResponse", [
            { no: 1, name: "keys", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => resources_1.Key },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { keys: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.apikeys.v2.Key keys */ 1:
                    message.keys.push(resources_1.Key.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.apikeys.v2.Key keys = 1; */
        for (let i = 0; i < message.keys.length; i++)
            resources_1.Key.internalBinaryWrite(message.keys[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.ListKeysResponse
 */
exports.ListKeysResponse = new ListKeysResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetKeyRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.GetKeyRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "apikeys.googleapis.com/Key" } } }
        ]);
    }
    create(value) {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.GetKeyRequest
 */
exports.GetKeyRequest = new GetKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetKeyStringRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.GetKeyStringRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "apikeys.googleapis.com/Key" } } }
        ]);
    }
    create(value) {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.GetKeyStringRequest
 */
exports.GetKeyStringRequest = new GetKeyStringRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetKeyStringResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.GetKeyStringResponse", [
            { no: 1, name: "key_string", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { keyString: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string key_string */ 1:
                    message.keyString = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string key_string = 1; */
        if (message.keyString !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.keyString);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.GetKeyStringResponse
 */
exports.GetKeyStringResponse = new GetKeyStringResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateKeyRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.UpdateKeyRequest", [
            { no: 1, name: "key", kind: "message", T: () => resources_1.Key, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "update_mask", kind: "message", T: () => field_mask_1.FieldMask }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.apikeys.v2.Key key */ 1:
                    message.key = resources_1.Key.internalBinaryRead(reader, reader.uint32(), options, message.key);
                    break;
                case /* google.protobuf.FieldMask update_mask */ 2:
                    message.updateMask = field_mask_1.FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.apikeys.v2.Key key = 1; */
        if (message.key)
            resources_1.Key.internalBinaryWrite(message.key, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.FieldMask update_mask = 2; */
        if (message.updateMask)
            field_mask_1.FieldMask.internalBinaryWrite(message.updateMask, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.UpdateKeyRequest
 */
exports.UpdateKeyRequest = new UpdateKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteKeyRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.DeleteKeyRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "apikeys.googleapis.com/Key" } } },
            { no: 2, name: "etag", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OPTIONAL"] } }
        ]);
    }
    create(value) {
        const message = { name: "", etag: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string etag */ 2:
                    message.etag = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string etag = 2; */
        if (message.etag !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.etag);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.DeleteKeyRequest
 */
exports.DeleteKeyRequest = new DeleteKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UndeleteKeyRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.UndeleteKeyRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "apikeys.googleapis.com/Key" } } }
        ]);
    }
    create(value) {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.UndeleteKeyRequest
 */
exports.UndeleteKeyRequest = new UndeleteKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LookupKeyRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.LookupKeyRequest", [
            { no: 1, name: "key_string", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value) {
        const message = { keyString: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string key_string */ 1:
                    message.keyString = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string key_string = 1; */
        if (message.keyString !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.keyString);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.LookupKeyRequest
 */
exports.LookupKeyRequest = new LookupKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LookupKeyResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.LookupKeyResponse", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { parent: "", name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.parent);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.LookupKeyResponse
 */
exports.LookupKeyResponse = new LookupKeyResponse$Type();
/**
 * @generated ServiceType for protobuf service google.api.apikeys.v2.ApiKeys
 */
exports.ApiKeys = new runtime_rpc_1.ServiceType("google.api.apikeys.v2.ApiKeys", [
    { name: "CreateKey", options: { "google.api.http": { post: "/v2/{parent=projects/*/locations/*}/keys", body: "key" }, "google.api.method_signature": ["parent,key,key_id"], "google.longrunning.operation_info": { responseType: "Key", metadataType: "google.protobuf.Empty" } }, I: exports.CreateKeyRequest, O: operations_1.Operation },
    { name: "ListKeys", options: { "google.api.http": { get: "/v2/{parent=projects/*/locations/*}/keys" }, "google.api.method_signature": ["parent"] }, I: exports.ListKeysRequest, O: exports.ListKeysResponse },
    { name: "GetKey", options: { "google.api.http": { get: "/v2/{name=projects/*/locations/*/keys/*}" }, "google.api.method_signature": ["name"] }, I: exports.GetKeyRequest, O: resources_1.Key },
    { name: "GetKeyString", options: { "google.api.http": { get: "/v2/{name=projects/*/locations/*/keys/*}/keyString" }, "google.api.method_signature": ["name"] }, I: exports.GetKeyStringRequest, O: exports.GetKeyStringResponse },
    { name: "UpdateKey", options: { "google.api.http": { patch: "/v2/{key.name=projects/*/locations/*/keys/*}", body: "key" }, "google.api.method_signature": ["key,update_mask"], "google.longrunning.operation_info": { responseType: "Key", metadataType: "google.protobuf.Empty" } }, I: exports.UpdateKeyRequest, O: operations_1.Operation },
    { name: "DeleteKey", options: { "google.api.http": { delete: "/v2/{name=projects/*/locations/*/keys/*}" }, "google.api.method_signature": ["name"], "google.longrunning.operation_info": { responseType: "Key", metadataType: "google.protobuf.Empty" } }, I: exports.DeleteKeyRequest, O: operations_1.Operation },
    { name: "UndeleteKey", options: { "google.api.http": { post: "/v2/{name=projects/*/locations/*/keys/*}:undelete", body: "*" }, "google.longrunning.operation_info": { responseType: "Key", metadataType: "google.protobuf.Empty" } }, I: exports.UndeleteKeyRequest, O: operations_1.Operation },
    { name: "LookupKey", options: { "google.api.http": { get: "/v2/keys:lookupKey" } }, I: exports.LookupKeyRequest, O: exports.LookupKeyResponse }
], { "google.api.default_host": "apikeys.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only" });
//# sourceMappingURL=apikeys.js.map
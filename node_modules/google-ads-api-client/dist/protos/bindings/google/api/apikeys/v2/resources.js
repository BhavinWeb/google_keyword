"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiTarget = exports.IosKeyRestrictions = exports.AndroidApplication = exports.AndroidKeyRestrictions = exports.ServerKeyRestrictions = exports.BrowserKeyRestrictions = exports.Restrictions = exports.Key = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const timestamp_1 = require("../../../protobuf/timestamp");
// @generated message type with reflection information, may provide speed optimized methods
class Key$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.Key", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "uid", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 2, name: "display_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "key_string", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 4, name: "create_time", kind: "message", T: () => timestamp_1.Timestamp, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "update_time", kind: "message", T: () => timestamp_1.Timestamp, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "delete_time", kind: "message", T: () => timestamp_1.Timestamp, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "annotations", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 9, name: "restrictions", kind: "message", T: () => exports.Restrictions },
            { no: 11, name: "etag", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "apikeys.googleapis.com/Key", pattern: ["projects/{project}/locations/{location}/keys/{key}"], plural: "keys", singular: "key", style: ["DECLARATIVE_FRIENDLY"] } });
    }
    create(value) {
        const message = { name: "", uid: "", displayName: "", keyString: "", annotations: {}, etag: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string uid */ 5:
                    message.uid = reader.string();
                    break;
                case /* string display_name */ 2:
                    message.displayName = reader.string();
                    break;
                case /* string key_string */ 3:
                    message.keyString = reader.string();
                    break;
                case /* google.protobuf.Timestamp create_time */ 4:
                    message.createTime = timestamp_1.Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createTime);
                    break;
                case /* google.protobuf.Timestamp update_time */ 6:
                    message.updateTime = timestamp_1.Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updateTime);
                    break;
                case /* google.protobuf.Timestamp delete_time */ 7:
                    message.deleteTime = timestamp_1.Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deleteTime);
                    break;
                case /* map<string, string> annotations */ 8:
                    this.binaryReadMap8(message.annotations, reader, options);
                    break;
                case /* google.api.apikeys.v2.Restrictions restrictions */ 9:
                    message.restrictions = exports.Restrictions.internalBinaryRead(reader, reader.uint32(), options, message.restrictions);
                    break;
                case /* string etag */ 11:
                    message.etag = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap8(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.apikeys.v2.Key.annotations");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string uid = 5; */
        if (message.uid !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.uid);
        /* string display_name = 2; */
        if (message.displayName !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.displayName);
        /* string key_string = 3; */
        if (message.keyString !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.keyString);
        /* google.protobuf.Timestamp create_time = 4; */
        if (message.createTime)
            timestamp_1.Timestamp.internalBinaryWrite(message.createTime, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp update_time = 6; */
        if (message.updateTime)
            timestamp_1.Timestamp.internalBinaryWrite(message.updateTime, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp delete_time = 7; */
        if (message.deleteTime)
            timestamp_1.Timestamp.internalBinaryWrite(message.deleteTime, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* map<string, string> annotations = 8; */
        for (let k of Object.keys(message.annotations))
            writer.tag(8, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.LengthDelimited).string(k).tag(2, runtime_1.WireType.LengthDelimited).string(message.annotations[k]).join();
        /* google.api.apikeys.v2.Restrictions restrictions = 9; */
        if (message.restrictions)
            exports.Restrictions.internalBinaryWrite(message.restrictions, writer.tag(9, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string etag = 11; */
        if (message.etag !== "")
            writer.tag(11, runtime_1.WireType.LengthDelimited).string(message.etag);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.Key
 */
exports.Key = new Key$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Restrictions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.Restrictions", [
            { no: 1, name: "browser_key_restrictions", kind: "message", oneof: "clientRestrictions", T: () => exports.BrowserKeyRestrictions },
            { no: 2, name: "server_key_restrictions", kind: "message", oneof: "clientRestrictions", T: () => exports.ServerKeyRestrictions },
            { no: 3, name: "android_key_restrictions", kind: "message", oneof: "clientRestrictions", T: () => exports.AndroidKeyRestrictions },
            { no: 4, name: "ios_key_restrictions", kind: "message", oneof: "clientRestrictions", T: () => exports.IosKeyRestrictions },
            { no: 5, name: "api_targets", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ApiTarget }
        ]);
    }
    create(value) {
        const message = { clientRestrictions: { oneofKind: undefined }, apiTargets: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.apikeys.v2.BrowserKeyRestrictions browser_key_restrictions */ 1:
                    message.clientRestrictions = {
                        oneofKind: "browserKeyRestrictions",
                        browserKeyRestrictions: exports.BrowserKeyRestrictions.internalBinaryRead(reader, reader.uint32(), options, message.clientRestrictions.browserKeyRestrictions)
                    };
                    break;
                case /* google.api.apikeys.v2.ServerKeyRestrictions server_key_restrictions */ 2:
                    message.clientRestrictions = {
                        oneofKind: "serverKeyRestrictions",
                        serverKeyRestrictions: exports.ServerKeyRestrictions.internalBinaryRead(reader, reader.uint32(), options, message.clientRestrictions.serverKeyRestrictions)
                    };
                    break;
                case /* google.api.apikeys.v2.AndroidKeyRestrictions android_key_restrictions */ 3:
                    message.clientRestrictions = {
                        oneofKind: "androidKeyRestrictions",
                        androidKeyRestrictions: exports.AndroidKeyRestrictions.internalBinaryRead(reader, reader.uint32(), options, message.clientRestrictions.androidKeyRestrictions)
                    };
                    break;
                case /* google.api.apikeys.v2.IosKeyRestrictions ios_key_restrictions */ 4:
                    message.clientRestrictions = {
                        oneofKind: "iosKeyRestrictions",
                        iosKeyRestrictions: exports.IosKeyRestrictions.internalBinaryRead(reader, reader.uint32(), options, message.clientRestrictions.iosKeyRestrictions)
                    };
                    break;
                case /* repeated google.api.apikeys.v2.ApiTarget api_targets */ 5:
                    message.apiTargets.push(exports.ApiTarget.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.apikeys.v2.BrowserKeyRestrictions browser_key_restrictions = 1; */
        if (message.clientRestrictions.oneofKind === "browserKeyRestrictions")
            exports.BrowserKeyRestrictions.internalBinaryWrite(message.clientRestrictions.browserKeyRestrictions, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.apikeys.v2.ServerKeyRestrictions server_key_restrictions = 2; */
        if (message.clientRestrictions.oneofKind === "serverKeyRestrictions")
            exports.ServerKeyRestrictions.internalBinaryWrite(message.clientRestrictions.serverKeyRestrictions, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.apikeys.v2.AndroidKeyRestrictions android_key_restrictions = 3; */
        if (message.clientRestrictions.oneofKind === "androidKeyRestrictions")
            exports.AndroidKeyRestrictions.internalBinaryWrite(message.clientRestrictions.androidKeyRestrictions, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.apikeys.v2.IosKeyRestrictions ios_key_restrictions = 4; */
        if (message.clientRestrictions.oneofKind === "iosKeyRestrictions")
            exports.IosKeyRestrictions.internalBinaryWrite(message.clientRestrictions.iosKeyRestrictions, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.apikeys.v2.ApiTarget api_targets = 5; */
        for (let i = 0; i < message.apiTargets.length; i++)
            exports.ApiTarget.internalBinaryWrite(message.apiTargets[i], writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.Restrictions
 */
exports.Restrictions = new Restrictions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BrowserKeyRestrictions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.BrowserKeyRestrictions", [
            { no: 1, name: "allowed_referrers", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { allowedReferrers: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string allowed_referrers */ 1:
                    message.allowedReferrers.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string allowed_referrers = 1; */
        for (let i = 0; i < message.allowedReferrers.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.allowedReferrers[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.BrowserKeyRestrictions
 */
exports.BrowserKeyRestrictions = new BrowserKeyRestrictions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerKeyRestrictions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.ServerKeyRestrictions", [
            { no: 1, name: "allowed_ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { allowedIps: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string allowed_ips */ 1:
                    message.allowedIps.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string allowed_ips = 1; */
        for (let i = 0; i < message.allowedIps.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.allowedIps[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.ServerKeyRestrictions
 */
exports.ServerKeyRestrictions = new ServerKeyRestrictions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AndroidKeyRestrictions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.AndroidKeyRestrictions", [
            { no: 1, name: "allowed_applications", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.AndroidApplication }
        ]);
    }
    create(value) {
        const message = { allowedApplications: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.apikeys.v2.AndroidApplication allowed_applications */ 1:
                    message.allowedApplications.push(exports.AndroidApplication.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.apikeys.v2.AndroidApplication allowed_applications = 1; */
        for (let i = 0; i < message.allowedApplications.length; i++)
            exports.AndroidApplication.internalBinaryWrite(message.allowedApplications[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.AndroidKeyRestrictions
 */
exports.AndroidKeyRestrictions = new AndroidKeyRestrictions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AndroidApplication$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.AndroidApplication", [
            { no: 1, name: "sha1_fingerprint", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "package_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { sha1Fingerprint: "", packageName: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string sha1_fingerprint */ 1:
                    message.sha1Fingerprint = reader.string();
                    break;
                case /* string package_name */ 2:
                    message.packageName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string sha1_fingerprint = 1; */
        if (message.sha1Fingerprint !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.sha1Fingerprint);
        /* string package_name = 2; */
        if (message.packageName !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.packageName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.AndroidApplication
 */
exports.AndroidApplication = new AndroidApplication$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IosKeyRestrictions$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.IosKeyRestrictions", [
            { no: 1, name: "allowed_bundle_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { allowedBundleIds: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string allowed_bundle_ids */ 1:
                    message.allowedBundleIds.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string allowed_bundle_ids = 1; */
        for (let i = 0; i < message.allowedBundleIds.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.allowedBundleIds[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.IosKeyRestrictions
 */
exports.IosKeyRestrictions = new IosKeyRestrictions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ApiTarget$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.apikeys.v2.ApiTarget", [
            { no: 1, name: "service", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "methods", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OPTIONAL"] } }
        ]);
    }
    create(value) {
        const message = { service: "", methods: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service */ 1:
                    message.service = reader.string();
                    break;
                case /* repeated string methods */ 2:
                    message.methods.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string service = 1; */
        if (message.service !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.service);
        /* repeated string methods = 2; */
        for (let i = 0; i < message.methods.length; i++)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.methods[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.apikeys.v2.ApiTarget
 */
exports.ApiTarget = new ApiTarget$Type();
//# sourceMappingURL=resources.js.map
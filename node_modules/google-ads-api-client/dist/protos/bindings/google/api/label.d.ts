import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * A description of a label.
 *
 * @generated from protobuf message google.api.LabelDescriptor
 */
export interface LabelDescriptor {
    /**
     * The label key.
     *
     * @generated from protobuf field: string key = 1;
     */
    key: string;
    /**
     * The type of data that can be assigned to the label.
     *
     * @generated from protobuf field: google.api.LabelDescriptor.ValueType value_type = 2;
     */
    valueType: LabelDescriptor_ValueType;
    /**
     * A human-readable description for the label.
     *
     * @generated from protobuf field: string description = 3;
     */
    description: string;
}
/**
 * Value types that can be used as label values.
 *
 * @generated from protobuf enum google.api.LabelDescriptor.ValueType
 */
export declare enum LabelDescriptor_ValueType {
    /**
     * A variable-length string. This is the default.
     *
     * @generated from protobuf enum value: STRING = 0;
     */
    STRING = 0,
    /**
     * Boolean; true or false.
     *
     * @generated from protobuf enum value: BOOL = 1;
     */
    BOOL = 1,
    /**
     * A 64-bit signed integer.
     *
     * @generated from protobuf enum value: INT64 = 2;
     */
    INT64 = 2
}
declare class LabelDescriptor$Type extends MessageType<LabelDescriptor> {
    constructor();
    create(value?: PartialMessage<LabelDescriptor>): LabelDescriptor;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LabelDescriptor): LabelDescriptor;
    internalBinaryWrite(message: LabelDescriptor, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.LabelDescriptor
 */
export declare const LabelDescriptor: LabelDescriptor$Type;
export {};

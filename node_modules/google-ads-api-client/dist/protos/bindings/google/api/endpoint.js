"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Endpoint = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
// @generated message type with reflection information, may provide speed optimized methods
class Endpoint$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.Endpoint", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "aliases", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 101, name: "target", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "allow_cors", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { name: "", aliases: [], target: "", allowCors: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated string aliases = 2 [deprecated = true];*/ 2:
                    message.aliases.push(reader.string());
                    break;
                case /* string target */ 101:
                    message.target = reader.string();
                    break;
                case /* bool allow_cors */ 5:
                    message.allowCors = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* repeated string aliases = 2 [deprecated = true]; */
        for (let i = 0; i < message.aliases.length; i++)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.aliases[i]);
        /* string target = 101; */
        if (message.target !== "")
            writer.tag(101, runtime_1.WireType.LengthDelimited).string(message.target);
        /* bool allow_cors = 5; */
        if (message.allowCors !== false)
            writer.tag(5, runtime_1.WireType.Varint).bool(message.allowCors);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.Endpoint
 */
exports.Endpoint = new Endpoint$Type();
//# sourceMappingURL=endpoint.js.map
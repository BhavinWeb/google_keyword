"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceIdentity = exports.AdminQuotaPolicy = exports.OverrideInlineSource = exports.QuotaOverride = exports.QuotaBucket = exports.ConsumerQuotaLimit = exports.ConsumerQuotaMetric = exports.OperationMetadata = exports.ServiceConfig = exports.Service = exports.QuotaSafetyCheck = exports.QuotaView = exports.State = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const monitoring_1 = require("../../monitoring");
const monitored_resource_1 = require("../../monitored_resource");
const endpoint_1 = require("../../endpoint");
const usage_1 = require("../../usage");
const auth_1 = require("../../auth");
const quota_1 = require("../../quota");
const documentation_1 = require("../../documentation");
const api_1 = require("../../../protobuf/api");
/**
 * Whether or not a service has been enabled for use by a consumer.
 *
 * @generated from protobuf enum google.api.serviceusage.v1beta1.State
 */
var State;
(function (State) {
    /**
     * The default value, which indicates that the enabled state of the service
     * is unspecified or not meaningful. Currently, all consumers other than
     * projects (such as folders and organizations) are always in this state.
     *
     * @generated from protobuf enum value: STATE_UNSPECIFIED = 0;
     */
    State[State["STATE_UNSPECIFIED"] = 0] = "STATE_UNSPECIFIED";
    /**
     * The service cannot be used by this consumer. It has either been explicitly
     * disabled, or has never been enabled.
     *
     * @generated from protobuf enum value: DISABLED = 1;
     */
    State[State["DISABLED"] = 1] = "DISABLED";
    /**
     * The service has been explicitly enabled for use by this consumer.
     *
     * @generated from protobuf enum value: ENABLED = 2;
     */
    State[State["ENABLED"] = 2] = "ENABLED";
})(State = exports.State || (exports.State = {}));
/**
 * Selected view of quota. Can be used to request more detailed quota
 * information when retrieving quota metrics and limits.
 *
 * @generated from protobuf enum google.api.serviceusage.v1beta1.QuotaView
 */
var QuotaView;
(function (QuotaView) {
    /**
     * No quota view specified. Requests that do not specify a quota view will
     * typically default to the BASIC view.
     *
     * @generated from protobuf enum value: QUOTA_VIEW_UNSPECIFIED = 0;
     */
    QuotaView[QuotaView["QUOTA_VIEW_UNSPECIFIED"] = 0] = "QUOTA_VIEW_UNSPECIFIED";
    /**
     * Only buckets with overrides are shown in the response.
     *
     * @generated from protobuf enum value: BASIC = 1;
     */
    QuotaView[QuotaView["BASIC"] = 1] = "BASIC";
    /**
     * Include per-location buckets even if they do not have overrides.
     * When the view is FULL, and a limit has regional or zonal quota, the limit
     * will include buckets for all regions or zones that could support
     * overrides, even if none are currently present. In some cases this will
     * cause the response to become very large; callers that do not need this
     * extra information should use the BASIC view instead.
     *
     * @generated from protobuf enum value: FULL = 2;
     */
    QuotaView[QuotaView["FULL"] = 2] = "FULL";
})(QuotaView = exports.QuotaView || (exports.QuotaView = {}));
/**
 * Enumerations of quota safety checks.
 *
 * @generated from protobuf enum google.api.serviceusage.v1beta1.QuotaSafetyCheck
 */
var QuotaSafetyCheck;
(function (QuotaSafetyCheck) {
    /**
     * Unspecified quota safety check.
     *
     * @generated from protobuf enum value: QUOTA_SAFETY_CHECK_UNSPECIFIED = 0;
     */
    QuotaSafetyCheck[QuotaSafetyCheck["QUOTA_SAFETY_CHECK_UNSPECIFIED"] = 0] = "QUOTA_SAFETY_CHECK_UNSPECIFIED";
    /**
     * Validates that a quota mutation would not cause the consumer's effective
     * limit to be lower than the consumer's quota usage.
     *
     * @generated from protobuf enum value: LIMIT_DECREASE_BELOW_USAGE = 1;
     */
    QuotaSafetyCheck[QuotaSafetyCheck["LIMIT_DECREASE_BELOW_USAGE"] = 1] = "LIMIT_DECREASE_BELOW_USAGE";
    /**
     * Validates that a quota mutation would not cause the consumer's effective
     * limit to decrease by more than 10 percent.
     *
     * @generated from protobuf enum value: LIMIT_DECREASE_PERCENTAGE_TOO_HIGH = 2;
     */
    QuotaSafetyCheck[QuotaSafetyCheck["LIMIT_DECREASE_PERCENTAGE_TOO_HIGH"] = 2] = "LIMIT_DECREASE_PERCENTAGE_TOO_HIGH";
})(QuotaSafetyCheck = exports.QuotaSafetyCheck || (exports.QuotaSafetyCheck = {}));
// @generated message type with reflection information, may provide speed optimized methods
class Service$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.Service", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "config", kind: "message", T: () => exports.ServiceConfig },
            { no: 4, name: "state", kind: "enum", T: () => ["google.api.serviceusage.v1beta1.State", State] }
        ]);
    }
    create(value) {
        const message = { name: "", parent: "", state: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string parent */ 5:
                    message.parent = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.ServiceConfig config */ 2:
                    message.config = exports.ServiceConfig.internalBinaryRead(reader, reader.uint32(), options, message.config);
                    break;
                case /* google.api.serviceusage.v1beta1.State state */ 4:
                    message.state = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string parent = 5; */
        if (message.parent !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.parent);
        /* google.api.serviceusage.v1beta1.ServiceConfig config = 2; */
        if (message.config)
            exports.ServiceConfig.internalBinaryWrite(message.config, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.serviceusage.v1beta1.State state = 4; */
        if (message.state !== 0)
            writer.tag(4, runtime_1.WireType.Varint).int32(message.state);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.Service
 */
exports.Service = new Service$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServiceConfig$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.ServiceConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "apis", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => api_1.Api },
            { no: 6, name: "documentation", kind: "message", T: () => documentation_1.Documentation },
            { no: 10, name: "quota", kind: "message", T: () => quota_1.Quota },
            { no: 11, name: "authentication", kind: "message", T: () => auth_1.Authentication },
            { no: 15, name: "usage", kind: "message", T: () => usage_1.Usage },
            { no: 18, name: "endpoints", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => endpoint_1.Endpoint },
            { no: 25, name: "monitored_resources", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => monitored_resource_1.MonitoredResourceDescriptor },
            { no: 28, name: "monitoring", kind: "message", T: () => monitoring_1.Monitoring }
        ]);
    }
    create(value) {
        const message = { name: "", title: "", apis: [], endpoints: [], monitoredResources: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* repeated google.protobuf.Api apis */ 3:
                    message.apis.push(api_1.Api.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.api.Documentation documentation */ 6:
                    message.documentation = documentation_1.Documentation.internalBinaryRead(reader, reader.uint32(), options, message.documentation);
                    break;
                case /* google.api.Quota quota */ 10:
                    message.quota = quota_1.Quota.internalBinaryRead(reader, reader.uint32(), options, message.quota);
                    break;
                case /* google.api.Authentication authentication */ 11:
                    message.authentication = auth_1.Authentication.internalBinaryRead(reader, reader.uint32(), options, message.authentication);
                    break;
                case /* google.api.Usage usage */ 15:
                    message.usage = usage_1.Usage.internalBinaryRead(reader, reader.uint32(), options, message.usage);
                    break;
                case /* repeated google.api.Endpoint endpoints */ 18:
                    message.endpoints.push(endpoint_1.Endpoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.api.MonitoredResourceDescriptor monitored_resources */ 25:
                    message.monitoredResources.push(monitored_resource_1.MonitoredResourceDescriptor.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.api.Monitoring monitoring */ 28:
                    message.monitoring = monitoring_1.Monitoring.internalBinaryRead(reader, reader.uint32(), options, message.monitoring);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.title);
        /* repeated google.protobuf.Api apis = 3; */
        for (let i = 0; i < message.apis.length; i++)
            api_1.Api.internalBinaryWrite(message.apis[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.Documentation documentation = 6; */
        if (message.documentation)
            documentation_1.Documentation.internalBinaryWrite(message.documentation, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.Quota quota = 10; */
        if (message.quota)
            quota_1.Quota.internalBinaryWrite(message.quota, writer.tag(10, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.Authentication authentication = 11; */
        if (message.authentication)
            auth_1.Authentication.internalBinaryWrite(message.authentication, writer.tag(11, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.Usage usage = 15; */
        if (message.usage)
            usage_1.Usage.internalBinaryWrite(message.usage, writer.tag(15, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.Endpoint endpoints = 18; */
        for (let i = 0; i < message.endpoints.length; i++)
            endpoint_1.Endpoint.internalBinaryWrite(message.endpoints[i], writer.tag(18, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.MonitoredResourceDescriptor monitored_resources = 25; */
        for (let i = 0; i < message.monitoredResources.length; i++)
            monitored_resource_1.MonitoredResourceDescriptor.internalBinaryWrite(message.monitoredResources[i], writer.tag(25, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.Monitoring monitoring = 28; */
        if (message.monitoring)
            monitoring_1.Monitoring.internalBinaryWrite(message.monitoring, writer.tag(28, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ServiceConfig
 */
exports.ServiceConfig = new ServiceConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OperationMetadata$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.OperationMetadata", [
            { no: 2, name: "resource_names", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { resourceNames: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string resource_names */ 2:
                    message.resourceNames.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string resource_names = 2; */
        for (let i = 0; i < message.resourceNames.length; i++)
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.resourceNames[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.OperationMetadata
 */
exports.OperationMetadata = new OperationMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConsumerQuotaMetric$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.ConsumerQuotaMetric", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "metric", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "display_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "consumer_quota_limits", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ConsumerQuotaLimit },
            { no: 6, name: "descendant_consumer_quota_limits", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ConsumerQuotaLimit },
            { no: 5, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "", metric: "", displayName: "", consumerQuotaLimits: [], descendantConsumerQuotaLimits: [], unit: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string metric */ 4:
                    message.metric = reader.string();
                    break;
                case /* string display_name */ 2:
                    message.displayName = reader.string();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits */ 3:
                    message.consumerQuotaLimits.push(exports.ConsumerQuotaLimit.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits */ 6:
                    message.descendantConsumerQuotaLimits.push(exports.ConsumerQuotaLimit.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string unit */ 5:
                    message.unit = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string metric = 4; */
        if (message.metric !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.metric);
        /* string display_name = 2; */
        if (message.displayName !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.displayName);
        /* repeated google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3; */
        for (let i = 0; i < message.consumerQuotaLimits.length; i++)
            exports.ConsumerQuotaLimit.internalBinaryWrite(message.consumerQuotaLimits[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6; */
        for (let i = 0; i < message.descendantConsumerQuotaLimits.length; i++)
            exports.ConsumerQuotaLimit.internalBinaryWrite(message.descendantConsumerQuotaLimits[i], writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string unit = 5; */
        if (message.unit !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.unit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ConsumerQuotaMetric
 */
exports.ConsumerQuotaMetric = new ConsumerQuotaMetric$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConsumerQuotaLimit$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.ConsumerQuotaLimit", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "metric", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_precise", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "allows_admin_overrides", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "quota_buckets", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.QuotaBucket }
        ]);
    }
    create(value) {
        const message = { name: "", metric: "", unit: "", isPrecise: false, allowsAdminOverrides: false, quotaBuckets: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string metric */ 8:
                    message.metric = reader.string();
                    break;
                case /* string unit */ 2:
                    message.unit = reader.string();
                    break;
                case /* bool is_precise */ 3:
                    message.isPrecise = reader.bool();
                    break;
                case /* bool allows_admin_overrides */ 7:
                    message.allowsAdminOverrides = reader.bool();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaBucket quota_buckets */ 9:
                    message.quotaBuckets.push(exports.QuotaBucket.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string metric = 8; */
        if (message.metric !== "")
            writer.tag(8, runtime_1.WireType.LengthDelimited).string(message.metric);
        /* string unit = 2; */
        if (message.unit !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.unit);
        /* bool is_precise = 3; */
        if (message.isPrecise !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.isPrecise);
        /* bool allows_admin_overrides = 7; */
        if (message.allowsAdminOverrides !== false)
            writer.tag(7, runtime_1.WireType.Varint).bool(message.allowsAdminOverrides);
        /* repeated google.api.serviceusage.v1beta1.QuotaBucket quota_buckets = 9; */
        for (let i = 0; i < message.quotaBuckets.length; i++)
            exports.QuotaBucket.internalBinaryWrite(message.quotaBuckets[i], writer.tag(9, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ConsumerQuotaLimit
 */
exports.ConsumerQuotaLimit = new ConsumerQuotaLimit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuotaBucket$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.QuotaBucket", [
            { no: 1, name: "effective_limit", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "default_limit", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "producer_override", kind: "message", T: () => exports.QuotaOverride },
            { no: 4, name: "consumer_override", kind: "message", T: () => exports.QuotaOverride },
            { no: 5, name: "admin_override", kind: "message", T: () => exports.QuotaOverride },
            { no: 6, name: "dimensions", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
    create(value) {
        const message = { effectiveLimit: 0n, defaultLimit: 0n, dimensions: {} };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 effective_limit */ 1:
                    message.effectiveLimit = reader.int64().toBigInt();
                    break;
                case /* int64 default_limit */ 2:
                    message.defaultLimit = reader.int64().toBigInt();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaOverride producer_override */ 3:
                    message.producerOverride = exports.QuotaOverride.internalBinaryRead(reader, reader.uint32(), options, message.producerOverride);
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaOverride consumer_override */ 4:
                    message.consumerOverride = exports.QuotaOverride.internalBinaryRead(reader, reader.uint32(), options, message.consumerOverride);
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaOverride admin_override */ 5:
                    message.adminOverride = exports.QuotaOverride.internalBinaryRead(reader, reader.uint32(), options, message.adminOverride);
                    break;
                case /* map<string, string> dimensions */ 6:
                    this.binaryReadMap6(message.dimensions, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap6(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.serviceusage.v1beta1.QuotaBucket.dimensions");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 effective_limit = 1; */
        if (message.effectiveLimit !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.effectiveLimit);
        /* int64 default_limit = 2; */
        if (message.defaultLimit !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.defaultLimit);
        /* google.api.serviceusage.v1beta1.QuotaOverride producer_override = 3; */
        if (message.producerOverride)
            exports.QuotaOverride.internalBinaryWrite(message.producerOverride, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.serviceusage.v1beta1.QuotaOverride consumer_override = 4; */
        if (message.consumerOverride)
            exports.QuotaOverride.internalBinaryWrite(message.consumerOverride, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.serviceusage.v1beta1.QuotaOverride admin_override = 5; */
        if (message.adminOverride)
            exports.QuotaOverride.internalBinaryWrite(message.adminOverride, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* map<string, string> dimensions = 6; */
        for (let k of Object.keys(message.dimensions))
            writer.tag(6, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.LengthDelimited).string(k).tag(2, runtime_1.WireType.LengthDelimited).string(message.dimensions[k]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.QuotaBucket
 */
exports.QuotaBucket = new QuotaBucket$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuotaOverride$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.QuotaOverride", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "override_value", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "dimensions", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 4, name: "metric", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "admin_override_ancestor", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "", overrideValue: 0n, dimensions: {}, metric: "", unit: "", adminOverrideAncestor: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* int64 override_value */ 2:
                    message.overrideValue = reader.int64().toBigInt();
                    break;
                case /* map<string, string> dimensions */ 3:
                    this.binaryReadMap3(message.dimensions, reader, options);
                    break;
                case /* string metric */ 4:
                    message.metric = reader.string();
                    break;
                case /* string unit */ 5:
                    message.unit = reader.string();
                    break;
                case /* string admin_override_ancestor */ 6:
                    message.adminOverrideAncestor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap3(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.serviceusage.v1beta1.QuotaOverride.dimensions");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* int64 override_value = 2; */
        if (message.overrideValue !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.overrideValue);
        /* map<string, string> dimensions = 3; */
        for (let k of Object.keys(message.dimensions))
            writer.tag(3, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.LengthDelimited).string(k).tag(2, runtime_1.WireType.LengthDelimited).string(message.dimensions[k]).join();
        /* string metric = 4; */
        if (message.metric !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.metric);
        /* string unit = 5; */
        if (message.unit !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.unit);
        /* string admin_override_ancestor = 6; */
        if (message.adminOverrideAncestor !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.adminOverrideAncestor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.QuotaOverride
 */
exports.QuotaOverride = new QuotaOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OverrideInlineSource$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.OverrideInlineSource", [
            { no: 1, name: "overrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.QuotaOverride }
        ]);
    }
    create(value) {
        const message = { overrides: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides */ 1:
                    message.overrides.push(exports.QuotaOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1; */
        for (let i = 0; i < message.overrides.length; i++)
            exports.QuotaOverride.internalBinaryWrite(message.overrides[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.OverrideInlineSource
 */
exports.OverrideInlineSource = new OverrideInlineSource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdminQuotaPolicy$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.AdminQuotaPolicy", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "policy_value", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "dimensions", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 4, name: "metric", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "unit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "container", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "", policyValue: 0n, dimensions: {}, metric: "", unit: "", container: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* int64 policy_value */ 2:
                    message.policyValue = reader.int64().toBigInt();
                    break;
                case /* map<string, string> dimensions */ 3:
                    this.binaryReadMap3(message.dimensions, reader, options);
                    break;
                case /* string metric */ 4:
                    message.metric = reader.string();
                    break;
                case /* string unit */ 5:
                    message.unit = reader.string();
                    break;
                case /* string container */ 6:
                    message.container = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap3(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.serviceusage.v1beta1.AdminQuotaPolicy.dimensions");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* int64 policy_value = 2; */
        if (message.policyValue !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.policyValue);
        /* map<string, string> dimensions = 3; */
        for (let k of Object.keys(message.dimensions))
            writer.tag(3, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.LengthDelimited).string(k).tag(2, runtime_1.WireType.LengthDelimited).string(message.dimensions[k]).join();
        /* string metric = 4; */
        if (message.metric !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.metric);
        /* string unit = 5; */
        if (message.unit !== "")
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.unit);
        /* string container = 6; */
        if (message.container !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.container);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.AdminQuotaPolicy
 */
exports.AdminQuotaPolicy = new AdminQuotaPolicy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServiceIdentity$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.serviceusage.v1beta1.ServiceIdentity", [
            { no: 1, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "unique_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { email: "", uniqueId: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string email */ 1:
                    message.email = reader.string();
                    break;
                case /* string unique_id */ 2:
                    message.uniqueId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string email = 1; */
        if (message.email !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.email);
        /* string unique_id = 2; */
        if (message.uniqueId !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.uniqueId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ServiceIdentity
 */
exports.ServiceIdentity = new ServiceIdentity$Type();
//# sourceMappingURL=resources.js.map
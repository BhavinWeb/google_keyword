import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../protobuf/any";
/**
 * Source information used to create a Service Config
 *
 * @generated from protobuf message google.api.SourceInfo
 */
export interface SourceInfo {
    /**
     * All files used during config generation.
     *
     * @generated from protobuf field: repeated google.protobuf.Any source_files = 1;
     */
    sourceFiles: Any[];
}
declare class SourceInfo$Type extends MessageType<SourceInfo> {
    constructor();
    create(value?: PartialMessage<SourceInfo>): SourceInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SourceInfo): SourceInfo;
    internalBinaryWrite(message: SourceInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.SourceInfo
 */
export declare const SourceInfo: SourceInfo$Type;
export {};

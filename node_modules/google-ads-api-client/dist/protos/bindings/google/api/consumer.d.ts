import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * A descriptor for defining project properties for a service. One service may
 * have many consumer projects, and the service may want to behave differently
 * depending on some properties on the project. For example, a project may be
 * associated with a school, or a business, or a government agency, a business
 * type property on the project may affect how a service responds to the client.
 * This descriptor defines which properties are allowed to be set on a project.
 *
 * Example:
 *
 *    project_properties:
 *      properties:
 *      - name: NO_WATERMARK
 *        type: BOOL
 *        description: Allows usage of the API without watermarks.
 *      - name: EXTENDED_TILE_CACHE_PERIOD
 *        type: INT64
 *
 * @generated from protobuf message google.api.ProjectProperties
 */
export interface ProjectProperties {
    /**
     * List of per consumer project-specific properties.
     *
     * @generated from protobuf field: repeated google.api.Property properties = 1;
     */
    properties: Property[];
}
/**
 * Defines project properties.
 *
 * API services can define properties that can be assigned to consumer projects
 * so that backends can perform response customization without having to make
 * additional calls or maintain additional storage. For example, Maps API
 * defines properties that controls map tile cache period, or whether to embed a
 * watermark in a result.
 *
 * These values can be set via API producer console. Only API providers can
 * define and set these properties.
 *
 * @generated from protobuf message google.api.Property
 */
export interface Property {
    /**
     * The name of the property (a.k.a key).
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The type of this property.
     *
     * @generated from protobuf field: google.api.Property.PropertyType type = 2;
     */
    type: Property_PropertyType;
    /**
     * The description of the property
     *
     * @generated from protobuf field: string description = 3;
     */
    description: string;
}
/**
 * Supported data type of the property values
 *
 * @generated from protobuf enum google.api.Property.PropertyType
 */
export declare enum Property_PropertyType {
    /**
     * The type is unspecified, and will result in an error.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The type is `int64`.
     *
     * @generated from protobuf enum value: INT64 = 1;
     */
    INT64 = 1,
    /**
     * The type is `bool`.
     *
     * @generated from protobuf enum value: BOOL = 2;
     */
    BOOL = 2,
    /**
     * The type is `string`.
     *
     * @generated from protobuf enum value: STRING = 3;
     */
    STRING = 3,
    /**
     * The type is 'double'.
     *
     * @generated from protobuf enum value: DOUBLE = 4;
     */
    DOUBLE = 4
}
declare class ProjectProperties$Type extends MessageType<ProjectProperties> {
    constructor();
    create(value?: PartialMessage<ProjectProperties>): ProjectProperties;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProjectProperties): ProjectProperties;
    internalBinaryWrite(message: ProjectProperties, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.ProjectProperties
 */
export declare const ProjectProperties: ProjectProperties$Type;
declare class Property$Type extends MessageType<Property> {
    constructor();
    create(value?: PartialMessage<Property>): Property;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Property): Property;
    internalBinaryWrite(message: Property, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.Property
 */
export declare const Property: Property$Type;
export {};

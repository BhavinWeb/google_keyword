import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../protobuf/any";
import { NullValue } from "../../../protobuf/struct";
/**
 * Represents a CEL value.
 *
 * This is similar to `google.protobuf.Value`, but can represent CEL's full
 * range of values.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.Value
 */
export interface Value {
    /**
     * @generated from protobuf oneof: kind
     */
    kind: {
        oneofKind: "nullValue";
        /**
         * Null value.
         *
         * @generated from protobuf field: google.protobuf.NullValue null_value = 1;
         */
        nullValue: NullValue;
    } | {
        oneofKind: "boolValue";
        /**
         * Boolean value.
         *
         * @generated from protobuf field: bool bool_value = 2;
         */
        boolValue: boolean;
    } | {
        oneofKind: "int64Value";
        /**
         * Signed integer value.
         *
         * @generated from protobuf field: int64 int64_value = 3;
         */
        int64Value: bigint;
    } | {
        oneofKind: "uint64Value";
        /**
         * Unsigned integer value.
         *
         * @generated from protobuf field: uint64 uint64_value = 4;
         */
        uint64Value: bigint;
    } | {
        oneofKind: "doubleValue";
        /**
         * Floating point value.
         *
         * @generated from protobuf field: double double_value = 5;
         */
        doubleValue: number;
    } | {
        oneofKind: "stringValue";
        /**
         * UTF-8 string value.
         *
         * @generated from protobuf field: string string_value = 6;
         */
        stringValue: string;
    } | {
        oneofKind: "bytesValue";
        /**
         * Byte string value.
         *
         * @generated from protobuf field: bytes bytes_value = 7;
         */
        bytesValue: Uint8Array;
    } | {
        oneofKind: "enumValue";
        /**
         * An enum value.
         *
         * @generated from protobuf field: google.api.expr.v1alpha1.EnumValue enum_value = 9;
         */
        enumValue: EnumValue;
    } | {
        oneofKind: "objectValue";
        /**
         * The proto message backing an object value.
         *
         * @generated from protobuf field: google.protobuf.Any object_value = 10;
         */
        objectValue: Any;
    } | {
        oneofKind: "mapValue";
        /**
         * Map value.
         *
         * @generated from protobuf field: google.api.expr.v1alpha1.MapValue map_value = 11;
         */
        mapValue: MapValue;
    } | {
        oneofKind: "listValue";
        /**
         * List value.
         *
         * @generated from protobuf field: google.api.expr.v1alpha1.ListValue list_value = 12;
         */
        listValue: ListValue;
    } | {
        oneofKind: "typeValue";
        /**
         * Type value.
         *
         * @generated from protobuf field: string type_value = 15;
         */
        typeValue: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * An enum value.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.EnumValue
 */
export interface EnumValue {
    /**
     * The fully qualified name of the enum type.
     *
     * @generated from protobuf field: string type = 1;
     */
    type: string;
    /**
     * The value of the enum.
     *
     * @generated from protobuf field: int32 value = 2;
     */
    value: number;
}
/**
 * A list.
 *
 * Wrapped in a message so 'not set' and empty can be differentiated, which is
 * required for use in a 'oneof'.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.ListValue
 */
export interface ListValue {
    /**
     * The ordered values in the list.
     *
     * @generated from protobuf field: repeated google.api.expr.v1alpha1.Value values = 1;
     */
    values: Value[];
}
/**
 * A map.
 *
 * Wrapped in a message so 'not set' and empty can be differentiated, which is
 * required for use in a 'oneof'.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.MapValue
 */
export interface MapValue {
    /**
     * The set of map entries.
     *
     * CEL has fewer restrictions on keys, so a protobuf map represenation
     * cannot be used.
     *
     * @generated from protobuf field: repeated google.api.expr.v1alpha1.MapValue.Entry entries = 1;
     */
    entries: MapValue_Entry[];
}
/**
 * An entry in the map.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.MapValue.Entry
 */
export interface MapValue_Entry {
    /**
     * The key.
     *
     * Must be unique with in the map.
     * Currently only boolean, int, uint, and string values can be keys.
     *
     * @generated from protobuf field: google.api.expr.v1alpha1.Value key = 1;
     */
    key?: Value;
    /**
     * The value.
     *
     * @generated from protobuf field: google.api.expr.v1alpha1.Value value = 2;
     */
    value?: Value;
}
declare class Value$Type extends MessageType<Value> {
    constructor();
    create(value?: PartialMessage<Value>): Value;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Value): Value;
    internalBinaryWrite(message: Value, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Value
 */
export declare const Value: Value$Type;
declare class EnumValue$Type extends MessageType<EnumValue> {
    constructor();
    create(value?: PartialMessage<EnumValue>): EnumValue;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnumValue): EnumValue;
    internalBinaryWrite(message: EnumValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.EnumValue
 */
export declare const EnumValue: EnumValue$Type;
declare class ListValue$Type extends MessageType<ListValue> {
    constructor();
    create(value?: PartialMessage<ListValue>): ListValue;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListValue): ListValue;
    internalBinaryWrite(message: ListValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.ListValue
 */
export declare const ListValue: ListValue$Type;
declare class MapValue$Type extends MessageType<MapValue> {
    constructor();
    create(value?: PartialMessage<MapValue>): MapValue;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MapValue): MapValue;
    internalBinaryWrite(message: MapValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.MapValue
 */
export declare const MapValue: MapValue$Type;
declare class MapValue_Entry$Type extends MessageType<MapValue_Entry> {
    constructor();
    create(value?: PartialMessage<MapValue_Entry>): MapValue_Entry;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MapValue_Entry): MapValue_Entry;
    internalBinaryWrite(message: MapValue_Entry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.MapValue.Entry
 */
export declare const MapValue_Entry: MapValue_Entry$Type;
export {};

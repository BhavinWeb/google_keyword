"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnknownSet = exports.ErrorSet = exports.ExprValue = exports.EvalState_Result = exports.EvalState = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const status_1 = require("../../../rpc/status");
const value_1 = require("./value");
// @generated message type with reflection information, may provide speed optimized methods
class EvalState$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.EvalState", [
            { no: 1, name: "values", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.ExprValue },
            { no: 3, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.EvalState_Result }
        ]);
    }
    create(value) {
        const message = { values: [], results: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.expr.v1alpha1.ExprValue values */ 1:
                    message.values.push(exports.ExprValue.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.api.expr.v1alpha1.EvalState.Result results */ 3:
                    message.results.push(exports.EvalState_Result.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.expr.v1alpha1.ExprValue values = 1; */
        for (let i = 0; i < message.values.length; i++)
            exports.ExprValue.internalBinaryWrite(message.values[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.expr.v1alpha1.EvalState.Result results = 3; */
        for (let i = 0; i < message.results.length; i++)
            exports.EvalState_Result.internalBinaryWrite(message.results[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.EvalState
 */
exports.EvalState = new EvalState$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvalState_Result$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.EvalState.Result", [
            { no: 1, name: "expr", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "value", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { expr: 0n, value: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 expr */ 1:
                    message.expr = reader.int64().toBigInt();
                    break;
                case /* int64 value */ 2:
                    message.value = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 expr = 1; */
        if (message.expr !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.expr);
        /* int64 value = 2; */
        if (message.value !== 0n)
            writer.tag(2, runtime_1.WireType.Varint).int64(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.EvalState.Result
 */
exports.EvalState_Result = new EvalState_Result$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExprValue$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.ExprValue", [
            { no: 1, name: "value", kind: "message", oneof: "kind", T: () => value_1.Value },
            { no: 2, name: "error", kind: "message", oneof: "kind", T: () => exports.ErrorSet },
            { no: 3, name: "unknown", kind: "message", oneof: "kind", T: () => exports.UnknownSet }
        ]);
    }
    create(value) {
        const message = { kind: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.Value value */ 1:
                    message.kind = {
                        oneofKind: "value",
                        value: value_1.Value.internalBinaryRead(reader, reader.uint32(), options, message.kind.value)
                    };
                    break;
                case /* google.api.expr.v1alpha1.ErrorSet error */ 2:
                    message.kind = {
                        oneofKind: "error",
                        error: exports.ErrorSet.internalBinaryRead(reader, reader.uint32(), options, message.kind.error)
                    };
                    break;
                case /* google.api.expr.v1alpha1.UnknownSet unknown */ 3:
                    message.kind = {
                        oneofKind: "unknown",
                        unknown: exports.UnknownSet.internalBinaryRead(reader, reader.uint32(), options, message.kind.unknown)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.Value value = 1; */
        if (message.kind.oneofKind === "value")
            value_1.Value.internalBinaryWrite(message.kind.value, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.ErrorSet error = 2; */
        if (message.kind.oneofKind === "error")
            exports.ErrorSet.internalBinaryWrite(message.kind.error, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.UnknownSet unknown = 3; */
        if (message.kind.oneofKind === "unknown")
            exports.UnknownSet.internalBinaryWrite(message.kind.unknown, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.ExprValue
 */
exports.ExprValue = new ExprValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ErrorSet$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.ErrorSet", [
            { no: 1, name: "errors", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => status_1.Status }
        ]);
    }
    create(value) {
        const message = { errors: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.rpc.Status errors */ 1:
                    message.errors.push(status_1.Status.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.rpc.Status errors = 1; */
        for (let i = 0; i < message.errors.length; i++)
            status_1.Status.internalBinaryWrite(message.errors[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.ErrorSet
 */
exports.ErrorSet = new ErrorSet$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnknownSet$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.UnknownSet", [
            { no: 1, name: "exprs", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { exprs: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated int64 exprs */ 1:
                    if (wireType === runtime_1.WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.exprs.push(reader.int64().toBigInt());
                    else
                        message.exprs.push(reader.int64().toBigInt());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated int64 exprs = 1; */
        if (message.exprs.length) {
            writer.tag(1, runtime_1.WireType.LengthDelimited).fork();
            for (let i = 0; i < message.exprs.length; i++)
                writer.int64(message.exprs[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.UnknownSet
 */
exports.UnknownSet = new UnknownSet$Type();
//# sourceMappingURL=eval.js.map
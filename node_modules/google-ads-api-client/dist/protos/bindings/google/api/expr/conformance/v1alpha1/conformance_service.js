"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConformanceService = exports.IssueDetails = exports.EvalResponse = exports.EvalRequest = exports.CheckResponse = exports.CheckRequest = exports.ParseResponse = exports.ParseRequest = exports.IssueDetails_Severity = void 0;
// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/expr/conformance/v1alpha1/conformance_service.proto" (package "google.api.expr.conformance.v1alpha1", syntax proto3)
// tslint:disable
//
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const syntax_1 = require("../../v1alpha1/syntax");
const eval_1 = require("../../v1alpha1/eval");
const checked_1 = require("../../v1alpha1/checked");
const checked_2 = require("../../v1alpha1/checked");
const status_1 = require("../../../../rpc/status");
const syntax_2 = require("../../v1alpha1/syntax");
/**
 * Severities of issues.
 *
 * @generated from protobuf enum google.api.expr.conformance.v1alpha1.IssueDetails.Severity
 */
var IssueDetails_Severity;
(function (IssueDetails_Severity) {
    /**
     * An unspecified severity.
     *
     * @generated from protobuf enum value: SEVERITY_UNSPECIFIED = 0;
     */
    IssueDetails_Severity[IssueDetails_Severity["SEVERITY_UNSPECIFIED"] = 0] = "SEVERITY_UNSPECIFIED";
    /**
     * Deprecation issue for statements and method that may no longer be
     * supported or maintained.
     *
     * @generated from protobuf enum value: DEPRECATION = 1;
     */
    IssueDetails_Severity[IssueDetails_Severity["DEPRECATION"] = 1] = "DEPRECATION";
    /**
     * Warnings such as: unused variables.
     *
     * @generated from protobuf enum value: WARNING = 2;
     */
    IssueDetails_Severity[IssueDetails_Severity["WARNING"] = 2] = "WARNING";
    /**
     * Errors such as: unmatched curly braces or variable redefinition.
     *
     * @generated from protobuf enum value: ERROR = 3;
     */
    IssueDetails_Severity[IssueDetails_Severity["ERROR"] = 3] = "ERROR";
})(IssueDetails_Severity = exports.IssueDetails_Severity || (exports.IssueDetails_Severity = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ParseRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.conformance.v1alpha1.ParseRequest", [
            { no: 1, name: "cel_source", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "syntax_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "source_location", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "disable_macros", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { celSource: "", syntaxVersion: "", sourceLocation: "", disableMacros: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string cel_source */ 1:
                    message.celSource = reader.string();
                    break;
                case /* string syntax_version */ 2:
                    message.syntaxVersion = reader.string();
                    break;
                case /* string source_location */ 3:
                    message.sourceLocation = reader.string();
                    break;
                case /* bool disable_macros */ 4:
                    message.disableMacros = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string cel_source = 1; */
        if (message.celSource !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.celSource);
        /* string syntax_version = 2; */
        if (message.syntaxVersion !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.syntaxVersion);
        /* string source_location = 3; */
        if (message.sourceLocation !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.sourceLocation);
        /* bool disable_macros = 4; */
        if (message.disableMacros !== false)
            writer.tag(4, runtime_1.WireType.Varint).bool(message.disableMacros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.conformance.v1alpha1.ParseRequest
 */
exports.ParseRequest = new ParseRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ParseResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.conformance.v1alpha1.ParseResponse", [
            { no: 1, name: "parsed_expr", kind: "message", T: () => syntax_2.ParsedExpr },
            { no: 2, name: "issues", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => status_1.Status }
        ]);
    }
    create(value) {
        const message = { issues: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.ParsedExpr parsed_expr */ 1:
                    message.parsedExpr = syntax_2.ParsedExpr.internalBinaryRead(reader, reader.uint32(), options, message.parsedExpr);
                    break;
                case /* repeated google.rpc.Status issues */ 2:
                    message.issues.push(status_1.Status.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1; */
        if (message.parsedExpr)
            syntax_2.ParsedExpr.internalBinaryWrite(message.parsedExpr, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.rpc.Status issues = 2; */
        for (let i = 0; i < message.issues.length; i++)
            status_1.Status.internalBinaryWrite(message.issues[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.conformance.v1alpha1.ParseResponse
 */
exports.ParseResponse = new ParseResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.conformance.v1alpha1.CheckRequest", [
            { no: 1, name: "parsed_expr", kind: "message", T: () => syntax_2.ParsedExpr },
            { no: 2, name: "type_env", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => checked_2.Decl },
            { no: 3, name: "container", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "no_std_env", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { typeEnv: [], container: "", noStdEnv: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.ParsedExpr parsed_expr */ 1:
                    message.parsedExpr = syntax_2.ParsedExpr.internalBinaryRead(reader, reader.uint32(), options, message.parsedExpr);
                    break;
                case /* repeated google.api.expr.v1alpha1.Decl type_env */ 2:
                    message.typeEnv.push(checked_2.Decl.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string container */ 3:
                    message.container = reader.string();
                    break;
                case /* bool no_std_env */ 4:
                    message.noStdEnv = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1; */
        if (message.parsedExpr)
            syntax_2.ParsedExpr.internalBinaryWrite(message.parsedExpr, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.expr.v1alpha1.Decl type_env = 2; */
        for (let i = 0; i < message.typeEnv.length; i++)
            checked_2.Decl.internalBinaryWrite(message.typeEnv[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string container = 3; */
        if (message.container !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.container);
        /* bool no_std_env = 4; */
        if (message.noStdEnv !== false)
            writer.tag(4, runtime_1.WireType.Varint).bool(message.noStdEnv);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.conformance.v1alpha1.CheckRequest
 */
exports.CheckRequest = new CheckRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.conformance.v1alpha1.CheckResponse", [
            { no: 1, name: "checked_expr", kind: "message", T: () => checked_1.CheckedExpr },
            { no: 2, name: "issues", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => status_1.Status }
        ]);
    }
    create(value) {
        const message = { issues: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.CheckedExpr checked_expr */ 1:
                    message.checkedExpr = checked_1.CheckedExpr.internalBinaryRead(reader, reader.uint32(), options, message.checkedExpr);
                    break;
                case /* repeated google.rpc.Status issues */ 2:
                    message.issues.push(status_1.Status.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.CheckedExpr checked_expr = 1; */
        if (message.checkedExpr)
            checked_1.CheckedExpr.internalBinaryWrite(message.checkedExpr, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.rpc.Status issues = 2; */
        for (let i = 0; i < message.issues.length; i++)
            status_1.Status.internalBinaryWrite(message.issues[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.conformance.v1alpha1.CheckResponse
 */
exports.CheckResponse = new CheckResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvalRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.conformance.v1alpha1.EvalRequest", [
            { no: 1, name: "parsed_expr", kind: "message", oneof: "exprKind", T: () => syntax_2.ParsedExpr },
            { no: 2, name: "checked_expr", kind: "message", oneof: "exprKind", T: () => checked_1.CheckedExpr },
            { no: 3, name: "bindings", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => eval_1.ExprValue } },
            { no: 4, name: "container", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { exprKind: { oneofKind: undefined }, bindings: {}, container: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.ParsedExpr parsed_expr */ 1:
                    message.exprKind = {
                        oneofKind: "parsedExpr",
                        parsedExpr: syntax_2.ParsedExpr.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.parsedExpr)
                    };
                    break;
                case /* google.api.expr.v1alpha1.CheckedExpr checked_expr */ 2:
                    message.exprKind = {
                        oneofKind: "checkedExpr",
                        checkedExpr: checked_1.CheckedExpr.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.checkedExpr)
                    };
                    break;
                case /* map<string, google.api.expr.v1alpha1.ExprValue> bindings */ 3:
                    this.binaryReadMap3(message.bindings, reader, options);
                    break;
                case /* string container */ 4:
                    message.container = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap3(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = eval_1.ExprValue.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.expr.conformance.v1alpha1.EvalRequest.bindings");
            }
        }
        map[key ?? ""] = val ?? eval_1.ExprValue.create();
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1; */
        if (message.exprKind.oneofKind === "parsedExpr")
            syntax_2.ParsedExpr.internalBinaryWrite(message.exprKind.parsedExpr, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.CheckedExpr checked_expr = 2; */
        if (message.exprKind.oneofKind === "checkedExpr")
            checked_1.CheckedExpr.internalBinaryWrite(message.exprKind.checkedExpr, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* map<string, google.api.expr.v1alpha1.ExprValue> bindings = 3; */
        for (let k of Object.keys(message.bindings)) {
            writer.tag(3, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.LengthDelimited).string(k);
            writer.tag(2, runtime_1.WireType.LengthDelimited).fork();
            eval_1.ExprValue.internalBinaryWrite(message.bindings[k], writer, options);
            writer.join().join();
        }
        /* string container = 4; */
        if (message.container !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.container);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.conformance.v1alpha1.EvalRequest
 */
exports.EvalRequest = new EvalRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvalResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.conformance.v1alpha1.EvalResponse", [
            { no: 1, name: "result", kind: "message", T: () => eval_1.ExprValue },
            { no: 2, name: "issues", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => status_1.Status }
        ]);
    }
    create(value) {
        const message = { issues: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.ExprValue result */ 1:
                    message.result = eval_1.ExprValue.internalBinaryRead(reader, reader.uint32(), options, message.result);
                    break;
                case /* repeated google.rpc.Status issues */ 2:
                    message.issues.push(status_1.Status.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.ExprValue result = 1; */
        if (message.result)
            eval_1.ExprValue.internalBinaryWrite(message.result, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.rpc.Status issues = 2; */
        for (let i = 0; i < message.issues.length; i++)
            status_1.Status.internalBinaryWrite(message.issues[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.conformance.v1alpha1.EvalResponse
 */
exports.EvalResponse = new EvalResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IssueDetails$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.conformance.v1alpha1.IssueDetails", [
            { no: 1, name: "severity", kind: "enum", T: () => ["google.api.expr.conformance.v1alpha1.IssueDetails.Severity", IssueDetails_Severity] },
            { no: 2, name: "position", kind: "message", T: () => syntax_1.SourcePosition },
            { no: 3, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { severity: 0, id: 0n };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.conformance.v1alpha1.IssueDetails.Severity severity */ 1:
                    message.severity = reader.int32();
                    break;
                case /* google.api.expr.v1alpha1.SourcePosition position */ 2:
                    message.position = syntax_1.SourcePosition.internalBinaryRead(reader, reader.uint32(), options, message.position);
                    break;
                case /* int64 id */ 3:
                    message.id = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.conformance.v1alpha1.IssueDetails.Severity severity = 1; */
        if (message.severity !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.severity);
        /* google.api.expr.v1alpha1.SourcePosition position = 2; */
        if (message.position)
            syntax_1.SourcePosition.internalBinaryWrite(message.position, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* int64 id = 3; */
        if (message.id !== 0n)
            writer.tag(3, runtime_1.WireType.Varint).int64(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.conformance.v1alpha1.IssueDetails
 */
exports.IssueDetails = new IssueDetails$Type();
/**
 * @generated ServiceType for protobuf service google.api.expr.conformance.v1alpha1.ConformanceService
 */
exports.ConformanceService = new runtime_rpc_1.ServiceType("google.api.expr.conformance.v1alpha1.ConformanceService", [
    { name: "Parse", options: {}, I: exports.ParseRequest, O: exports.ParseResponse },
    { name: "Check", options: {}, I: exports.CheckRequest, O: exports.CheckResponse },
    { name: "Eval", options: {}, I: exports.EvalRequest, O: exports.EvalResponse }
], { "google.api.default_host": "cel.googleapis.com" });
//# sourceMappingURL=conformance_service.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Reference = exports.Decl_FunctionDecl_Overload = exports.Decl_FunctionDecl = exports.Decl_IdentDecl = exports.Decl = exports.Type_AbstractType = exports.Type_FunctionType = exports.Type_MapType = exports.Type_ListType = exports.Type = exports.CheckedExpr = exports.Type_WellKnownType = exports.Type_PrimitiveType = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const syntax_1 = require("./syntax");
const struct_1 = require("../../../protobuf/struct");
const empty_1 = require("../../../protobuf/empty");
const syntax_2 = require("./syntax");
const syntax_3 = require("./syntax");
/**
 * CEL primitive types.
 *
 * @generated from protobuf enum google.api.expr.v1alpha1.Type.PrimitiveType
 */
var Type_PrimitiveType;
(function (Type_PrimitiveType) {
    /**
     * Unspecified type.
     *
     * @generated from protobuf enum value: PRIMITIVE_TYPE_UNSPECIFIED = 0;
     */
    Type_PrimitiveType[Type_PrimitiveType["PRIMITIVE_TYPE_UNSPECIFIED"] = 0] = "PRIMITIVE_TYPE_UNSPECIFIED";
    /**
     * Boolean type.
     *
     * @generated from protobuf enum value: BOOL = 1;
     */
    Type_PrimitiveType[Type_PrimitiveType["BOOL"] = 1] = "BOOL";
    /**
     * Int64 type.
     *
     * Proto-based integer values are widened to int64.
     *
     * @generated from protobuf enum value: INT64 = 2;
     */
    Type_PrimitiveType[Type_PrimitiveType["INT64"] = 2] = "INT64";
    /**
     * Uint64 type.
     *
     * Proto-based unsigned integer values are widened to uint64.
     *
     * @generated from protobuf enum value: UINT64 = 3;
     */
    Type_PrimitiveType[Type_PrimitiveType["UINT64"] = 3] = "UINT64";
    /**
     * Double type.
     *
     * Proto-based float values are widened to double values.
     *
     * @generated from protobuf enum value: DOUBLE = 4;
     */
    Type_PrimitiveType[Type_PrimitiveType["DOUBLE"] = 4] = "DOUBLE";
    /**
     * String type.
     *
     * @generated from protobuf enum value: STRING = 5;
     */
    Type_PrimitiveType[Type_PrimitiveType["STRING"] = 5] = "STRING";
    /**
     * Bytes type.
     *
     * @generated from protobuf enum value: BYTES = 6;
     */
    Type_PrimitiveType[Type_PrimitiveType["BYTES"] = 6] = "BYTES";
})(Type_PrimitiveType = exports.Type_PrimitiveType || (exports.Type_PrimitiveType = {}));
/**
 * Well-known protobuf types treated with first-class support in CEL.
 *
 * @generated from protobuf enum google.api.expr.v1alpha1.Type.WellKnownType
 */
var Type_WellKnownType;
(function (Type_WellKnownType) {
    /**
     * Unspecified type.
     *
     * @generated from protobuf enum value: WELL_KNOWN_TYPE_UNSPECIFIED = 0;
     */
    Type_WellKnownType[Type_WellKnownType["WELL_KNOWN_TYPE_UNSPECIFIED"] = 0] = "WELL_KNOWN_TYPE_UNSPECIFIED";
    /**
     * Well-known protobuf.Any type.
     *
     * Any types are a polymorphic message type. During type-checking they are
     * treated like `DYN` types, but at runtime they are resolved to a specific
     * message type specified at evaluation time.
     *
     * @generated from protobuf enum value: ANY = 1;
     */
    Type_WellKnownType[Type_WellKnownType["ANY"] = 1] = "ANY";
    /**
     * Well-known protobuf.Timestamp type, internally referenced as `timestamp`.
     *
     * @generated from protobuf enum value: TIMESTAMP = 2;
     */
    Type_WellKnownType[Type_WellKnownType["TIMESTAMP"] = 2] = "TIMESTAMP";
    /**
     * Well-known protobuf.Duration type, internally referenced as `duration`.
     *
     * @generated from protobuf enum value: DURATION = 3;
     */
    Type_WellKnownType[Type_WellKnownType["DURATION"] = 3] = "DURATION";
})(Type_WellKnownType = exports.Type_WellKnownType || (exports.Type_WellKnownType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class CheckedExpr$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.CheckedExpr", [
            { no: 2, name: "reference_map", kind: "map", K: 3 /*ScalarType.INT64*/, V: { kind: "message", T: () => exports.Reference } },
            { no: 3, name: "type_map", kind: "map", K: 3 /*ScalarType.INT64*/, V: { kind: "message", T: () => exports.Type } },
            { no: 5, name: "source_info", kind: "message", T: () => syntax_3.SourceInfo },
            { no: 6, name: "expr_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "expr", kind: "message", T: () => syntax_2.Expr }
        ]);
    }
    create(value) {
        const message = { referenceMap: {}, typeMap: {}, exprVersion: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<int64, google.api.expr.v1alpha1.Reference> reference_map */ 2:
                    this.binaryReadMap2(message.referenceMap, reader, options);
                    break;
                case /* map<int64, google.api.expr.v1alpha1.Type> type_map */ 3:
                    this.binaryReadMap3(message.typeMap, reader, options);
                    break;
                case /* google.api.expr.v1alpha1.SourceInfo source_info */ 5:
                    message.sourceInfo = syntax_3.SourceInfo.internalBinaryRead(reader, reader.uint32(), options, message.sourceInfo);
                    break;
                case /* string expr_version */ 6:
                    message.exprVersion = reader.string();
                    break;
                case /* google.api.expr.v1alpha1.Expr expr */ 4:
                    message.expr = syntax_2.Expr.internalBinaryRead(reader, reader.uint32(), options, message.expr);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap2(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.int64().toString();
                    break;
                case 2:
                    val = exports.Reference.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.expr.v1alpha1.CheckedExpr.reference_map");
            }
        }
        map[key ?? "0"] = val ?? exports.Reference.create();
    }
    binaryReadMap3(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.int64().toString();
                    break;
                case 2:
                    val = exports.Type.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.expr.v1alpha1.CheckedExpr.type_map");
            }
        }
        map[key ?? "0"] = val ?? exports.Type.create();
    }
    internalBinaryWrite(message, writer, options) {
        /* map<int64, google.api.expr.v1alpha1.Reference> reference_map = 2; */
        for (let k of Object.keys(message.referenceMap)) {
            writer.tag(2, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.Varint).int64(k);
            writer.tag(2, runtime_1.WireType.LengthDelimited).fork();
            exports.Reference.internalBinaryWrite(message.referenceMap[k], writer, options);
            writer.join().join();
        }
        /* map<int64, google.api.expr.v1alpha1.Type> type_map = 3; */
        for (let k of Object.keys(message.typeMap)) {
            writer.tag(3, runtime_1.WireType.LengthDelimited).fork().tag(1, runtime_1.WireType.Varint).int64(k);
            writer.tag(2, runtime_1.WireType.LengthDelimited).fork();
            exports.Type.internalBinaryWrite(message.typeMap[k], writer, options);
            writer.join().join();
        }
        /* google.api.expr.v1alpha1.SourceInfo source_info = 5; */
        if (message.sourceInfo)
            syntax_3.SourceInfo.internalBinaryWrite(message.sourceInfo, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string expr_version = 6; */
        if (message.exprVersion !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.exprVersion);
        /* google.api.expr.v1alpha1.Expr expr = 4; */
        if (message.expr)
            syntax_2.Expr.internalBinaryWrite(message.expr, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.CheckedExpr
 */
exports.CheckedExpr = new CheckedExpr$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Type$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Type", [
            { no: 1, name: "dyn", kind: "message", oneof: "typeKind", T: () => empty_1.Empty },
            { no: 2, name: "null", kind: "enum", oneof: "typeKind", T: () => ["google.protobuf.NullValue", struct_1.NullValue] },
            { no: 3, name: "primitive", kind: "enum", oneof: "typeKind", T: () => ["google.api.expr.v1alpha1.Type.PrimitiveType", Type_PrimitiveType] },
            { no: 4, name: "wrapper", kind: "enum", oneof: "typeKind", T: () => ["google.api.expr.v1alpha1.Type.PrimitiveType", Type_PrimitiveType] },
            { no: 5, name: "well_known", kind: "enum", oneof: "typeKind", T: () => ["google.api.expr.v1alpha1.Type.WellKnownType", Type_WellKnownType] },
            { no: 6, name: "list_type", kind: "message", oneof: "typeKind", T: () => exports.Type_ListType },
            { no: 7, name: "map_type", kind: "message", oneof: "typeKind", T: () => exports.Type_MapType },
            { no: 8, name: "function", kind: "message", oneof: "typeKind", T: () => exports.Type_FunctionType },
            { no: 9, name: "message_type", kind: "scalar", oneof: "typeKind", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "type_param", kind: "scalar", oneof: "typeKind", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "type", kind: "message", oneof: "typeKind", T: () => exports.Type },
            { no: 12, name: "error", kind: "message", oneof: "typeKind", T: () => empty_1.Empty },
            { no: 14, name: "abstract_type", kind: "message", oneof: "typeKind", T: () => exports.Type_AbstractType }
        ]);
    }
    create(value) {
        const message = { typeKind: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Empty dyn */ 1:
                    message.typeKind = {
                        oneofKind: "dyn",
                        dyn: empty_1.Empty.internalBinaryRead(reader, reader.uint32(), options, message.typeKind.dyn)
                    };
                    break;
                case /* google.protobuf.NullValue null */ 2:
                    message.typeKind = {
                        oneofKind: "null",
                        null: reader.int32()
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type.PrimitiveType primitive */ 3:
                    message.typeKind = {
                        oneofKind: "primitive",
                        primitive: reader.int32()
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type.PrimitiveType wrapper */ 4:
                    message.typeKind = {
                        oneofKind: "wrapper",
                        wrapper: reader.int32()
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type.WellKnownType well_known */ 5:
                    message.typeKind = {
                        oneofKind: "wellKnown",
                        wellKnown: reader.int32()
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type.ListType list_type */ 6:
                    message.typeKind = {
                        oneofKind: "listType",
                        listType: exports.Type_ListType.internalBinaryRead(reader, reader.uint32(), options, message.typeKind.listType)
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type.MapType map_type */ 7:
                    message.typeKind = {
                        oneofKind: "mapType",
                        mapType: exports.Type_MapType.internalBinaryRead(reader, reader.uint32(), options, message.typeKind.mapType)
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type.FunctionType function */ 8:
                    message.typeKind = {
                        oneofKind: "function",
                        function: exports.Type_FunctionType.internalBinaryRead(reader, reader.uint32(), options, message.typeKind.function)
                    };
                    break;
                case /* string message_type */ 9:
                    message.typeKind = {
                        oneofKind: "messageType",
                        messageType: reader.string()
                    };
                    break;
                case /* string type_param */ 10:
                    message.typeKind = {
                        oneofKind: "typeParam",
                        typeParam: reader.string()
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type type */ 11:
                    message.typeKind = {
                        oneofKind: "type",
                        type: exports.Type.internalBinaryRead(reader, reader.uint32(), options, message.typeKind.type)
                    };
                    break;
                case /* google.protobuf.Empty error */ 12:
                    message.typeKind = {
                        oneofKind: "error",
                        error: empty_1.Empty.internalBinaryRead(reader, reader.uint32(), options, message.typeKind.error)
                    };
                    break;
                case /* google.api.expr.v1alpha1.Type.AbstractType abstract_type */ 14:
                    message.typeKind = {
                        oneofKind: "abstractType",
                        abstractType: exports.Type_AbstractType.internalBinaryRead(reader, reader.uint32(), options, message.typeKind.abstractType)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.protobuf.Empty dyn = 1; */
        if (message.typeKind.oneofKind === "dyn")
            empty_1.Empty.internalBinaryWrite(message.typeKind.dyn, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.NullValue null = 2; */
        if (message.typeKind.oneofKind === "null")
            writer.tag(2, runtime_1.WireType.Varint).int32(message.typeKind.null);
        /* google.api.expr.v1alpha1.Type.PrimitiveType primitive = 3; */
        if (message.typeKind.oneofKind === "primitive")
            writer.tag(3, runtime_1.WireType.Varint).int32(message.typeKind.primitive);
        /* google.api.expr.v1alpha1.Type.PrimitiveType wrapper = 4; */
        if (message.typeKind.oneofKind === "wrapper")
            writer.tag(4, runtime_1.WireType.Varint).int32(message.typeKind.wrapper);
        /* google.api.expr.v1alpha1.Type.WellKnownType well_known = 5; */
        if (message.typeKind.oneofKind === "wellKnown")
            writer.tag(5, runtime_1.WireType.Varint).int32(message.typeKind.wellKnown);
        /* google.api.expr.v1alpha1.Type.ListType list_type = 6; */
        if (message.typeKind.oneofKind === "listType")
            exports.Type_ListType.internalBinaryWrite(message.typeKind.listType, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.Type.MapType map_type = 7; */
        if (message.typeKind.oneofKind === "mapType")
            exports.Type_MapType.internalBinaryWrite(message.typeKind.mapType, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.Type.FunctionType function = 8; */
        if (message.typeKind.oneofKind === "function")
            exports.Type_FunctionType.internalBinaryWrite(message.typeKind.function, writer.tag(8, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string message_type = 9; */
        if (message.typeKind.oneofKind === "messageType")
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.typeKind.messageType);
        /* string type_param = 10; */
        if (message.typeKind.oneofKind === "typeParam")
            writer.tag(10, runtime_1.WireType.LengthDelimited).string(message.typeKind.typeParam);
        /* google.api.expr.v1alpha1.Type type = 11; */
        if (message.typeKind.oneofKind === "type")
            exports.Type.internalBinaryWrite(message.typeKind.type, writer.tag(11, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Empty error = 12; */
        if (message.typeKind.oneofKind === "error")
            empty_1.Empty.internalBinaryWrite(message.typeKind.error, writer.tag(12, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.Type.AbstractType abstract_type = 14; */
        if (message.typeKind.oneofKind === "abstractType")
            exports.Type_AbstractType.internalBinaryWrite(message.typeKind.abstractType, writer.tag(14, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Type
 */
exports.Type = new Type$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Type_ListType$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Type.ListType", [
            { no: 1, name: "elem_type", kind: "message", T: () => exports.Type }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.Type elem_type */ 1:
                    message.elemType = exports.Type.internalBinaryRead(reader, reader.uint32(), options, message.elemType);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.Type elem_type = 1; */
        if (message.elemType)
            exports.Type.internalBinaryWrite(message.elemType, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Type.ListType
 */
exports.Type_ListType = new Type_ListType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Type_MapType$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Type.MapType", [
            { no: 1, name: "key_type", kind: "message", T: () => exports.Type },
            { no: 2, name: "value_type", kind: "message", T: () => exports.Type }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.Type key_type */ 1:
                    message.keyType = exports.Type.internalBinaryRead(reader, reader.uint32(), options, message.keyType);
                    break;
                case /* google.api.expr.v1alpha1.Type value_type */ 2:
                    message.valueType = exports.Type.internalBinaryRead(reader, reader.uint32(), options, message.valueType);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.Type key_type = 1; */
        if (message.keyType)
            exports.Type.internalBinaryWrite(message.keyType, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.Type value_type = 2; */
        if (message.valueType)
            exports.Type.internalBinaryWrite(message.valueType, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Type.MapType
 */
exports.Type_MapType = new Type_MapType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Type_FunctionType$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Type.FunctionType", [
            { no: 1, name: "result_type", kind: "message", T: () => exports.Type },
            { no: 2, name: "arg_types", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Type }
        ]);
    }
    create(value) {
        const message = { argTypes: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.Type result_type */ 1:
                    message.resultType = exports.Type.internalBinaryRead(reader, reader.uint32(), options, message.resultType);
                    break;
                case /* repeated google.api.expr.v1alpha1.Type arg_types */ 2:
                    message.argTypes.push(exports.Type.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.Type result_type = 1; */
        if (message.resultType)
            exports.Type.internalBinaryWrite(message.resultType, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.expr.v1alpha1.Type arg_types = 2; */
        for (let i = 0; i < message.argTypes.length; i++)
            exports.Type.internalBinaryWrite(message.argTypes[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Type.FunctionType
 */
exports.Type_FunctionType = new Type_FunctionType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Type_AbstractType$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Type.AbstractType", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "parameter_types", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Type }
        ]);
    }
    create(value) {
        const message = { name: "", parameterTypes: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated google.api.expr.v1alpha1.Type parameter_types */ 2:
                    message.parameterTypes.push(exports.Type.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* repeated google.api.expr.v1alpha1.Type parameter_types = 2; */
        for (let i = 0; i < message.parameterTypes.length; i++)
            exports.Type.internalBinaryWrite(message.parameterTypes[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Type.AbstractType
 */
exports.Type_AbstractType = new Type_AbstractType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Decl$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Decl", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "ident", kind: "message", oneof: "declKind", T: () => exports.Decl_IdentDecl },
            { no: 3, name: "function", kind: "message", oneof: "declKind", T: () => exports.Decl_FunctionDecl }
        ]);
    }
    create(value) {
        const message = { name: "", declKind: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.api.expr.v1alpha1.Decl.IdentDecl ident */ 2:
                    message.declKind = {
                        oneofKind: "ident",
                        ident: exports.Decl_IdentDecl.internalBinaryRead(reader, reader.uint32(), options, message.declKind.ident)
                    };
                    break;
                case /* google.api.expr.v1alpha1.Decl.FunctionDecl function */ 3:
                    message.declKind = {
                        oneofKind: "function",
                        function: exports.Decl_FunctionDecl.internalBinaryRead(reader, reader.uint32(), options, message.declKind.function)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* google.api.expr.v1alpha1.Decl.IdentDecl ident = 2; */
        if (message.declKind.oneofKind === "ident")
            exports.Decl_IdentDecl.internalBinaryWrite(message.declKind.ident, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.Decl.FunctionDecl function = 3; */
        if (message.declKind.oneofKind === "function")
            exports.Decl_FunctionDecl.internalBinaryWrite(message.declKind.function, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Decl
 */
exports.Decl = new Decl$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Decl_IdentDecl$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Decl.IdentDecl", [
            { no: 1, name: "type", kind: "message", T: () => exports.Type },
            { no: 2, name: "value", kind: "message", T: () => syntax_1.Constant },
            { no: 3, name: "doc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { doc: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.Type type */ 1:
                    message.type = exports.Type.internalBinaryRead(reader, reader.uint32(), options, message.type);
                    break;
                case /* google.api.expr.v1alpha1.Constant value */ 2:
                    message.value = syntax_1.Constant.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                case /* string doc */ 3:
                    message.doc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1alpha1.Type type = 1; */
        if (message.type)
            exports.Type.internalBinaryWrite(message.type, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.Constant value = 2; */
        if (message.value)
            syntax_1.Constant.internalBinaryWrite(message.value, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string doc = 3; */
        if (message.doc !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.doc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Decl.IdentDecl
 */
exports.Decl_IdentDecl = new Decl_IdentDecl$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Decl_FunctionDecl$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Decl.FunctionDecl", [
            { no: 1, name: "overloads", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Decl_FunctionDecl_Overload }
        ]);
    }
    create(value) {
        const message = { overloads: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.expr.v1alpha1.Decl.FunctionDecl.Overload overloads */ 1:
                    message.overloads.push(exports.Decl_FunctionDecl_Overload.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.expr.v1alpha1.Decl.FunctionDecl.Overload overloads = 1; */
        for (let i = 0; i < message.overloads.length; i++)
            exports.Decl_FunctionDecl_Overload.internalBinaryWrite(message.overloads[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Decl.FunctionDecl
 */
exports.Decl_FunctionDecl = new Decl_FunctionDecl$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Decl_FunctionDecl_Overload$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Decl.FunctionDecl.Overload", [
            { no: 1, name: "overload_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "params", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Type },
            { no: 3, name: "type_params", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "result_type", kind: "message", T: () => exports.Type },
            { no: 5, name: "is_instance_function", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "doc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { overloadId: "", params: [], typeParams: [], isInstanceFunction: false, doc: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string overload_id */ 1:
                    message.overloadId = reader.string();
                    break;
                case /* repeated google.api.expr.v1alpha1.Type params */ 2:
                    message.params.push(exports.Type.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated string type_params */ 3:
                    message.typeParams.push(reader.string());
                    break;
                case /* google.api.expr.v1alpha1.Type result_type */ 4:
                    message.resultType = exports.Type.internalBinaryRead(reader, reader.uint32(), options, message.resultType);
                    break;
                case /* bool is_instance_function */ 5:
                    message.isInstanceFunction = reader.bool();
                    break;
                case /* string doc */ 6:
                    message.doc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string overload_id = 1; */
        if (message.overloadId !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.overloadId);
        /* repeated google.api.expr.v1alpha1.Type params = 2; */
        for (let i = 0; i < message.params.length; i++)
            exports.Type.internalBinaryWrite(message.params[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated string type_params = 3; */
        for (let i = 0; i < message.typeParams.length; i++)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.typeParams[i]);
        /* google.api.expr.v1alpha1.Type result_type = 4; */
        if (message.resultType)
            exports.Type.internalBinaryWrite(message.resultType, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* bool is_instance_function = 5; */
        if (message.isInstanceFunction !== false)
            writer.tag(5, runtime_1.WireType.Varint).bool(message.isInstanceFunction);
        /* string doc = 6; */
        if (message.doc !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.doc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Decl.FunctionDecl.Overload
 */
exports.Decl_FunctionDecl_Overload = new Decl_FunctionDecl_Overload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Reference$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Reference", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "overload_id", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "value", kind: "message", T: () => syntax_1.Constant }
        ]);
    }
    create(value) {
        const message = { name: "", overloadId: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated string overload_id */ 3:
                    message.overloadId.push(reader.string());
                    break;
                case /* google.api.expr.v1alpha1.Constant value */ 4:
                    message.value = syntax_1.Constant.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* repeated string overload_id = 3; */
        for (let i = 0; i < message.overloadId.length; i++)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.overloadId[i]);
        /* google.api.expr.v1alpha1.Constant value = 4; */
        if (message.value)
            syntax_1.Constant.internalBinaryWrite(message.value, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Reference
 */
exports.Reference = new Reference$Type();
//# sourceMappingURL=checked.js.map
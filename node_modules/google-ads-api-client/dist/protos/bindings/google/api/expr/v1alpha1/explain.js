"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Explain_ExprStep = exports.Explain = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const value_1 = require("./value");
// @generated message type with reflection information, may provide speed optimized methods
class Explain$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Explain", [
            { no: 1, name: "values", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => value_1.Value },
            { no: 2, name: "expr_steps", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Explain_ExprStep }
        ]);
    }
    create(value) {
        const message = { values: [], exprSteps: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.expr.v1alpha1.Value values */ 1:
                    message.values.push(value_1.Value.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.api.expr.v1alpha1.Explain.ExprStep expr_steps */ 2:
                    message.exprSteps.push(exports.Explain_ExprStep.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.expr.v1alpha1.Value values = 1; */
        for (let i = 0; i < message.values.length; i++)
            value_1.Value.internalBinaryWrite(message.values[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.expr.v1alpha1.Explain.ExprStep expr_steps = 2; */
        for (let i = 0; i < message.exprSteps.length; i++)
            exports.Explain_ExprStep.internalBinaryWrite(message.exprSteps[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @deprecated
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Explain
 */
exports.Explain = new Explain$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Explain_ExprStep$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1alpha1.Explain.ExprStep", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "value_index", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, valueIndex: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* int32 value_index */ 2:
                    message.valueIndex = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, runtime_1.WireType.Varint).int64(message.id);
        /* int32 value_index = 2; */
        if (message.valueIndex !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.valueIndex);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Explain.ExprStep
 */
exports.Explain_ExprStep = new Explain_ExprStep$Type();
//# sourceMappingURL=explain.js.map
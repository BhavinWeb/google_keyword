"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Literal = exports.Expr_Comprehension = exports.Expr_CreateStruct_Entry = exports.Expr_CreateStruct = exports.Expr_CreateList = exports.Expr_Call = exports.Expr_Select = exports.Expr_Ident = exports.Expr = exports.ParsedExpr = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const struct_1 = require("../../../protobuf/struct");
const source_1 = require("./source");
// @generated message type with reflection information, may provide speed optimized methods
class ParsedExpr$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.ParsedExpr", [
            { no: 2, name: "expr", kind: "message", T: () => exports.Expr },
            { no: 3, name: "source_info", kind: "message", T: () => source_1.SourceInfo },
            { no: 4, name: "syntax_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { syntaxVersion: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1beta1.Expr expr */ 2:
                    message.expr = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.expr);
                    break;
                case /* google.api.expr.v1beta1.SourceInfo source_info */ 3:
                    message.sourceInfo = source_1.SourceInfo.internalBinaryRead(reader, reader.uint32(), options, message.sourceInfo);
                    break;
                case /* string syntax_version */ 4:
                    message.syntaxVersion = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1beta1.Expr expr = 2; */
        if (message.expr)
            exports.Expr.internalBinaryWrite(message.expr, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.SourceInfo source_info = 3; */
        if (message.sourceInfo)
            source_1.SourceInfo.internalBinaryWrite(message.sourceInfo, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string syntax_version = 4; */
        if (message.syntaxVersion !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.syntaxVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.ParsedExpr
 */
exports.ParsedExpr = new ParsedExpr$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr", [
            { no: 2, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "literal_expr", kind: "message", oneof: "exprKind", T: () => exports.Literal },
            { no: 4, name: "ident_expr", kind: "message", oneof: "exprKind", T: () => exports.Expr_Ident },
            { no: 5, name: "select_expr", kind: "message", oneof: "exprKind", T: () => exports.Expr_Select },
            { no: 6, name: "call_expr", kind: "message", oneof: "exprKind", T: () => exports.Expr_Call },
            { no: 7, name: "list_expr", kind: "message", oneof: "exprKind", T: () => exports.Expr_CreateList },
            { no: 8, name: "struct_expr", kind: "message", oneof: "exprKind", T: () => exports.Expr_CreateStruct },
            { no: 9, name: "comprehension_expr", kind: "message", oneof: "exprKind", T: () => exports.Expr_Comprehension }
        ]);
    }
    create(value) {
        const message = { id: 0, exprKind: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 2:
                    message.id = reader.int32();
                    break;
                case /* google.api.expr.v1beta1.Literal literal_expr */ 3:
                    message.exprKind = {
                        oneofKind: "literalExpr",
                        literalExpr: exports.Literal.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.literalExpr)
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr.Ident ident_expr */ 4:
                    message.exprKind = {
                        oneofKind: "identExpr",
                        identExpr: exports.Expr_Ident.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.identExpr)
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr.Select select_expr */ 5:
                    message.exprKind = {
                        oneofKind: "selectExpr",
                        selectExpr: exports.Expr_Select.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.selectExpr)
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr.Call call_expr */ 6:
                    message.exprKind = {
                        oneofKind: "callExpr",
                        callExpr: exports.Expr_Call.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.callExpr)
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr.CreateList list_expr */ 7:
                    message.exprKind = {
                        oneofKind: "listExpr",
                        listExpr: exports.Expr_CreateList.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.listExpr)
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr.CreateStruct struct_expr */ 8:
                    message.exprKind = {
                        oneofKind: "structExpr",
                        structExpr: exports.Expr_CreateStruct.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.structExpr)
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr.Comprehension comprehension_expr */ 9:
                    message.exprKind = {
                        oneofKind: "comprehensionExpr",
                        comprehensionExpr: exports.Expr_Comprehension.internalBinaryRead(reader, reader.uint32(), options, message.exprKind.comprehensionExpr)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 id = 2; */
        if (message.id !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.id);
        /* google.api.expr.v1beta1.Literal literal_expr = 3; */
        if (message.exprKind.oneofKind === "literalExpr")
            exports.Literal.internalBinaryWrite(message.exprKind.literalExpr, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr.Ident ident_expr = 4; */
        if (message.exprKind.oneofKind === "identExpr")
            exports.Expr_Ident.internalBinaryWrite(message.exprKind.identExpr, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr.Select select_expr = 5; */
        if (message.exprKind.oneofKind === "selectExpr")
            exports.Expr_Select.internalBinaryWrite(message.exprKind.selectExpr, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr.Call call_expr = 6; */
        if (message.exprKind.oneofKind === "callExpr")
            exports.Expr_Call.internalBinaryWrite(message.exprKind.callExpr, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr.CreateList list_expr = 7; */
        if (message.exprKind.oneofKind === "listExpr")
            exports.Expr_CreateList.internalBinaryWrite(message.exprKind.listExpr, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr.CreateStruct struct_expr = 8; */
        if (message.exprKind.oneofKind === "structExpr")
            exports.Expr_CreateStruct.internalBinaryWrite(message.exprKind.structExpr, writer.tag(8, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr.Comprehension comprehension_expr = 9; */
        if (message.exprKind.oneofKind === "comprehensionExpr")
            exports.Expr_Comprehension.internalBinaryWrite(message.exprKind.comprehensionExpr, writer.tag(9, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr
 */
exports.Expr = new Expr$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr_Ident$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr.Ident", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr.Ident
 */
exports.Expr_Ident = new Expr_Ident$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr_Select$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr.Select", [
            { no: 1, name: "operand", kind: "message", T: () => exports.Expr },
            { no: 2, name: "field", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "test_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { field: "", testOnly: false };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1beta1.Expr operand */ 1:
                    message.operand = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.operand);
                    break;
                case /* string field */ 2:
                    message.field = reader.string();
                    break;
                case /* bool test_only */ 3:
                    message.testOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1beta1.Expr operand = 1; */
        if (message.operand)
            exports.Expr.internalBinaryWrite(message.operand, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string field = 2; */
        if (message.field !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.field);
        /* bool test_only = 3; */
        if (message.testOnly !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.testOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr.Select
 */
exports.Expr_Select = new Expr_Select$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr_Call$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr.Call", [
            { no: 1, name: "target", kind: "message", T: () => exports.Expr },
            { no: 2, name: "function", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "args", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Expr }
        ]);
    }
    create(value) {
        const message = { function: "", args: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1beta1.Expr target */ 1:
                    message.target = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.target);
                    break;
                case /* string function */ 2:
                    message.function = reader.string();
                    break;
                case /* repeated google.api.expr.v1beta1.Expr args */ 3:
                    message.args.push(exports.Expr.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.api.expr.v1beta1.Expr target = 1; */
        if (message.target)
            exports.Expr.internalBinaryWrite(message.target, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string function = 2; */
        if (message.function !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.function);
        /* repeated google.api.expr.v1beta1.Expr args = 3; */
        for (let i = 0; i < message.args.length; i++)
            exports.Expr.internalBinaryWrite(message.args[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr.Call
 */
exports.Expr_Call = new Expr_Call$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr_CreateList$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr.CreateList", [
            { no: 1, name: "elements", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Expr }
        ]);
    }
    create(value) {
        const message = { elements: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.expr.v1beta1.Expr elements */ 1:
                    message.elements.push(exports.Expr.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated google.api.expr.v1beta1.Expr elements = 1; */
        for (let i = 0; i < message.elements.length; i++)
            exports.Expr.internalBinaryWrite(message.elements[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr.CreateList
 */
exports.Expr_CreateList = new Expr_CreateList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr_CreateStruct$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr.CreateStruct", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Expr_CreateStruct_Entry }
        ]);
    }
    create(value) {
        const message = { type: "", entries: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string type */ 1:
                    message.type = reader.string();
                    break;
                case /* repeated google.api.expr.v1beta1.Expr.CreateStruct.Entry entries */ 2:
                    message.entries.push(exports.Expr_CreateStruct_Entry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string type = 1; */
        if (message.type !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.type);
        /* repeated google.api.expr.v1beta1.Expr.CreateStruct.Entry entries = 2; */
        for (let i = 0; i < message.entries.length; i++)
            exports.Expr_CreateStruct_Entry.internalBinaryWrite(message.entries[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr.CreateStruct
 */
exports.Expr_CreateStruct = new Expr_CreateStruct$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr_CreateStruct_Entry$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr.CreateStruct.Entry", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "field_key", kind: "scalar", oneof: "keyKind", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "map_key", kind: "message", oneof: "keyKind", T: () => exports.Expr },
            { no: 4, name: "value", kind: "message", T: () => exports.Expr }
        ]);
    }
    create(value) {
        const message = { id: 0, keyKind: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string field_key */ 2:
                    message.keyKind = {
                        oneofKind: "fieldKey",
                        fieldKey: reader.string()
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr map_key */ 3:
                    message.keyKind = {
                        oneofKind: "mapKey",
                        mapKey: exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.keyKind.mapKey)
                    };
                    break;
                case /* google.api.expr.v1beta1.Expr value */ 4:
                    message.value = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.id);
        /* string field_key = 2; */
        if (message.keyKind.oneofKind === "fieldKey")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.keyKind.fieldKey);
        /* google.api.expr.v1beta1.Expr map_key = 3; */
        if (message.keyKind.oneofKind === "mapKey")
            exports.Expr.internalBinaryWrite(message.keyKind.mapKey, writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr value = 4; */
        if (message.value)
            exports.Expr.internalBinaryWrite(message.value, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr.CreateStruct.Entry
 */
exports.Expr_CreateStruct_Entry = new Expr_CreateStruct_Entry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Expr_Comprehension$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Expr.Comprehension", [
            { no: 1, name: "iter_var", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "iter_range", kind: "message", T: () => exports.Expr },
            { no: 3, name: "accu_var", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "accu_init", kind: "message", T: () => exports.Expr },
            { no: 5, name: "loop_condition", kind: "message", T: () => exports.Expr },
            { no: 6, name: "loop_step", kind: "message", T: () => exports.Expr },
            { no: 7, name: "result", kind: "message", T: () => exports.Expr }
        ]);
    }
    create(value) {
        const message = { iterVar: "", accuVar: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string iter_var */ 1:
                    message.iterVar = reader.string();
                    break;
                case /* google.api.expr.v1beta1.Expr iter_range */ 2:
                    message.iterRange = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.iterRange);
                    break;
                case /* string accu_var */ 3:
                    message.accuVar = reader.string();
                    break;
                case /* google.api.expr.v1beta1.Expr accu_init */ 4:
                    message.accuInit = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.accuInit);
                    break;
                case /* google.api.expr.v1beta1.Expr loop_condition */ 5:
                    message.loopCondition = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.loopCondition);
                    break;
                case /* google.api.expr.v1beta1.Expr loop_step */ 6:
                    message.loopStep = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.loopStep);
                    break;
                case /* google.api.expr.v1beta1.Expr result */ 7:
                    message.result = exports.Expr.internalBinaryRead(reader, reader.uint32(), options, message.result);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string iter_var = 1; */
        if (message.iterVar !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.iterVar);
        /* google.api.expr.v1beta1.Expr iter_range = 2; */
        if (message.iterRange)
            exports.Expr.internalBinaryWrite(message.iterRange, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string accu_var = 3; */
        if (message.accuVar !== "")
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.accuVar);
        /* google.api.expr.v1beta1.Expr accu_init = 4; */
        if (message.accuInit)
            exports.Expr.internalBinaryWrite(message.accuInit, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr loop_condition = 5; */
        if (message.loopCondition)
            exports.Expr.internalBinaryWrite(message.loopCondition, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr loop_step = 6; */
        if (message.loopStep)
            exports.Expr.internalBinaryWrite(message.loopStep, writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1beta1.Expr result = 7; */
        if (message.result)
            exports.Expr.internalBinaryWrite(message.result, writer.tag(7, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Expr.Comprehension
 */
exports.Expr_Comprehension = new Expr_Comprehension$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Literal$Type extends runtime_5.MessageType {
    constructor() {
        super("google.api.expr.v1beta1.Literal", [
            { no: 1, name: "null_value", kind: "enum", oneof: "constantKind", T: () => ["google.protobuf.NullValue", struct_1.NullValue] },
            { no: 2, name: "bool_value", kind: "scalar", oneof: "constantKind", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "int64_value", kind: "scalar", oneof: "constantKind", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "uint64_value", kind: "scalar", oneof: "constantKind", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "double_value", kind: "scalar", oneof: "constantKind", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "string_value", kind: "scalar", oneof: "constantKind", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "bytes_value", kind: "scalar", oneof: "constantKind", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = { constantKind: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.NullValue null_value */ 1:
                    message.constantKind = {
                        oneofKind: "nullValue",
                        nullValue: reader.int32()
                    };
                    break;
                case /* bool bool_value */ 2:
                    message.constantKind = {
                        oneofKind: "boolValue",
                        boolValue: reader.bool()
                    };
                    break;
                case /* int64 int64_value */ 3:
                    message.constantKind = {
                        oneofKind: "int64Value",
                        int64Value: reader.int64().toBigInt()
                    };
                    break;
                case /* uint64 uint64_value */ 4:
                    message.constantKind = {
                        oneofKind: "uint64Value",
                        uint64Value: reader.uint64().toBigInt()
                    };
                    break;
                case /* double double_value */ 5:
                    message.constantKind = {
                        oneofKind: "doubleValue",
                        doubleValue: reader.double()
                    };
                    break;
                case /* string string_value */ 6:
                    message.constantKind = {
                        oneofKind: "stringValue",
                        stringValue: reader.string()
                    };
                    break;
                case /* bytes bytes_value */ 7:
                    message.constantKind = {
                        oneofKind: "bytesValue",
                        bytesValue: reader.bytes()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.protobuf.NullValue null_value = 1; */
        if (message.constantKind.oneofKind === "nullValue")
            writer.tag(1, runtime_1.WireType.Varint).int32(message.constantKind.nullValue);
        /* bool bool_value = 2; */
        if (message.constantKind.oneofKind === "boolValue")
            writer.tag(2, runtime_1.WireType.Varint).bool(message.constantKind.boolValue);
        /* int64 int64_value = 3; */
        if (message.constantKind.oneofKind === "int64Value")
            writer.tag(3, runtime_1.WireType.Varint).int64(message.constantKind.int64Value);
        /* uint64 uint64_value = 4; */
        if (message.constantKind.oneofKind === "uint64Value")
            writer.tag(4, runtime_1.WireType.Varint).uint64(message.constantKind.uint64Value);
        /* double double_value = 5; */
        if (message.constantKind.oneofKind === "doubleValue")
            writer.tag(5, runtime_1.WireType.Bit64).double(message.constantKind.doubleValue);
        /* string string_value = 6; */
        if (message.constantKind.oneofKind === "stringValue")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.constantKind.stringValue);
        /* bytes bytes_value = 7; */
        if (message.constantKind.oneofKind === "bytesValue")
            writer.tag(7, runtime_1.WireType.LengthDelimited).bytes(message.constantKind.bytesValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1beta1.Literal
 */
exports.Literal = new Literal$Type();
//# sourceMappingURL=expr.js.map
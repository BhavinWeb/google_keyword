import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Monitoring configuration of the service.
 *
 * The example below shows how to configure monitored resources and metrics
 * for monitoring. In the example, a monitored resource and two metrics are
 * defined. The `library.googleapis.com/book/returned_count` metric is sent
 * to both producer and consumer projects, whereas the
 * `library.googleapis.com/book/num_overdue` metric is only sent to the
 * consumer project.
 *
 *     monitored_resources:
 *     - type: library.googleapis.com/Branch
 *       display_name: "Library Branch"
 *       description: "A branch of a library."
 *       launch_stage: GA
 *       labels:
 *       - key: resource_container
 *         description: "The Cloud container (ie. project id) for the Branch."
 *       - key: location
 *         description: "The location of the library branch."
 *       - key: branch_id
 *         description: "The id of the branch."
 *     metrics:
 *     - name: library.googleapis.com/book/returned_count
 *       display_name: "Books Returned"
 *       description: "The count of books that have been returned."
 *       launch_stage: GA
 *       metric_kind: DELTA
 *       value_type: INT64
 *       unit: "1"
 *       labels:
 *       - key: customer_id
 *         description: "The id of the customer."
 *     - name: library.googleapis.com/book/num_overdue
 *       display_name: "Books Overdue"
 *       description: "The current number of overdue books."
 *       launch_stage: GA
 *       metric_kind: GAUGE
 *       value_type: INT64
 *       unit: "1"
 *       labels:
 *       - key: customer_id
 *         description: "The id of the customer."
 *     monitoring:
 *       producer_destinations:
 *       - monitored_resource: library.googleapis.com/Branch
 *         metrics:
 *         - library.googleapis.com/book/returned_count
 *       consumer_destinations:
 *       - monitored_resource: library.googleapis.com/Branch
 *         metrics:
 *         - library.googleapis.com/book/returned_count
 *         - library.googleapis.com/book/num_overdue
 *
 * @generated from protobuf message google.api.Monitoring
 */
export interface Monitoring {
    /**
     * Monitoring configurations for sending metrics to the producer project.
     * There can be multiple producer destinations. A monitored resource type may
     * appear in multiple monitoring destinations if different aggregations are
     * needed for different sets of metrics associated with that monitored
     * resource type. A monitored resource and metric pair may only be used once
     * in the Monitoring configuration.
     *
     * @generated from protobuf field: repeated google.api.Monitoring.MonitoringDestination producer_destinations = 1;
     */
    producerDestinations: Monitoring_MonitoringDestination[];
    /**
     * Monitoring configurations for sending metrics to the consumer project.
     * There can be multiple consumer destinations. A monitored resource type may
     * appear in multiple monitoring destinations if different aggregations are
     * needed for different sets of metrics associated with that monitored
     * resource type. A monitored resource and metric pair may only be used once
     * in the Monitoring configuration.
     *
     * @generated from protobuf field: repeated google.api.Monitoring.MonitoringDestination consumer_destinations = 2;
     */
    consumerDestinations: Monitoring_MonitoringDestination[];
}
/**
 * Configuration of a specific monitoring destination (the producer project
 * or the consumer project).
 *
 * @generated from protobuf message google.api.Monitoring.MonitoringDestination
 */
export interface Monitoring_MonitoringDestination {
    /**
     * The monitored resource type. The type must be defined in
     * [Service.monitored_resources][google.api.Service.monitored_resources] section.
     *
     * @generated from protobuf field: string monitored_resource = 1;
     */
    monitoredResource: string;
    /**
     * Types of the metrics to report to this monitoring destination.
     * Each type must be defined in [Service.metrics][google.api.Service.metrics] section.
     *
     * @generated from protobuf field: repeated string metrics = 2;
     */
    metrics: string[];
}
declare class Monitoring$Type extends MessageType<Monitoring> {
    constructor();
    create(value?: PartialMessage<Monitoring>): Monitoring;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Monitoring): Monitoring;
    internalBinaryWrite(message: Monitoring, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.Monitoring
 */
export declare const Monitoring: Monitoring$Type;
declare class Monitoring_MonitoringDestination$Type extends MessageType<Monitoring_MonitoringDestination> {
    constructor();
    create(value?: PartialMessage<Monitoring_MonitoringDestination>): Monitoring_MonitoringDestination;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Monitoring_MonitoringDestination): Monitoring_MonitoringDestination;
    internalBinaryWrite(message: Monitoring_MonitoringDestination, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message google.api.Monitoring.MonitoringDestination
 */
export declare const Monitoring_MonitoringDestination: Monitoring_MonitoringDestination$Type;
export {};

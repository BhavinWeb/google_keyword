"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Mixin = exports.Method = exports.Api = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const type_1 = require("./type");
const source_context_1 = require("./source_context");
const type_2 = require("./type");
// @generated message type with reflection information, may provide speed optimized methods
class Api$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.Api", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "methods", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Method },
            { no: 3, name: "options", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => type_2.Option },
            { no: 4, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "source_context", kind: "message", T: () => source_context_1.SourceContext },
            { no: 6, name: "mixins", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Mixin },
            { no: 7, name: "syntax", kind: "enum", T: () => ["google.protobuf.Syntax", type_1.Syntax, "SYNTAX_"] }
        ]);
    }
    create(value) {
        const message = { name: "", methods: [], options: [], version: "", mixins: [], syntax: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated google.protobuf.Method methods */ 2:
                    message.methods.push(exports.Method.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.protobuf.Option options */ 3:
                    message.options.push(type_2.Option.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string version */ 4:
                    message.version = reader.string();
                    break;
                case /* google.protobuf.SourceContext source_context */ 5:
                    message.sourceContext = source_context_1.SourceContext.internalBinaryRead(reader, reader.uint32(), options, message.sourceContext);
                    break;
                case /* repeated google.protobuf.Mixin mixins */ 6:
                    message.mixins.push(exports.Mixin.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.protobuf.Syntax syntax */ 7:
                    message.syntax = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* repeated google.protobuf.Method methods = 2; */
        for (let i = 0; i < message.methods.length; i++)
            exports.Method.internalBinaryWrite(message.methods[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.protobuf.Option options = 3; */
        for (let i = 0; i < message.options.length; i++)
            type_2.Option.internalBinaryWrite(message.options[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string version = 4; */
        if (message.version !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.version);
        /* google.protobuf.SourceContext source_context = 5; */
        if (message.sourceContext)
            source_context_1.SourceContext.internalBinaryWrite(message.sourceContext, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.protobuf.Mixin mixins = 6; */
        for (let i = 0; i < message.mixins.length; i++)
            exports.Mixin.internalBinaryWrite(message.mixins[i], writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Syntax syntax = 7; */
        if (message.syntax !== 0)
            writer.tag(7, runtime_1.WireType.Varint).int32(message.syntax);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.Api
 */
exports.Api = new Api$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Method$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.Method", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "request_type_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "request_streaming", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "response_type_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "response_streaming", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "options", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => type_2.Option },
            { no: 7, name: "syntax", kind: "enum", T: () => ["google.protobuf.Syntax", type_1.Syntax, "SYNTAX_"] }
        ]);
    }
    create(value) {
        const message = { name: "", requestTypeUrl: "", requestStreaming: false, responseTypeUrl: "", responseStreaming: false, options: [], syntax: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string request_type_url */ 2:
                    message.requestTypeUrl = reader.string();
                    break;
                case /* bool request_streaming */ 3:
                    message.requestStreaming = reader.bool();
                    break;
                case /* string response_type_url */ 4:
                    message.responseTypeUrl = reader.string();
                    break;
                case /* bool response_streaming */ 5:
                    message.responseStreaming = reader.bool();
                    break;
                case /* repeated google.protobuf.Option options */ 6:
                    message.options.push(type_2.Option.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.protobuf.Syntax syntax */ 7:
                    message.syntax = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string request_type_url = 2; */
        if (message.requestTypeUrl !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.requestTypeUrl);
        /* bool request_streaming = 3; */
        if (message.requestStreaming !== false)
            writer.tag(3, runtime_1.WireType.Varint).bool(message.requestStreaming);
        /* string response_type_url = 4; */
        if (message.responseTypeUrl !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.responseTypeUrl);
        /* bool response_streaming = 5; */
        if (message.responseStreaming !== false)
            writer.tag(5, runtime_1.WireType.Varint).bool(message.responseStreaming);
        /* repeated google.protobuf.Option options = 6; */
        for (let i = 0; i < message.options.length; i++)
            type_2.Option.internalBinaryWrite(message.options[i], writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Syntax syntax = 7; */
        if (message.syntax !== 0)
            writer.tag(7, runtime_1.WireType.Varint).int32(message.syntax);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.Method
 */
exports.Method = new Method$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Mixin$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.Mixin", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "root", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "", root: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string root */ 2:
                    message.root = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string root = 2; */
        if (message.root !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.root);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.Mixin
 */
exports.Mixin = new Mixin$Type();
//# sourceMappingURL=api.js.map
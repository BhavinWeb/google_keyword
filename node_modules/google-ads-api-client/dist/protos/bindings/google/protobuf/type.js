"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Option = exports.EnumValue = exports.Enum = exports.Field = exports.Type = exports.Syntax = exports.Field_Cardinality = exports.Field_Kind = void 0;
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const any_1 = require("./any");
const source_context_1 = require("./source_context");
/**
 * Basic field types.
 *
 * @generated from protobuf enum google.protobuf.Field.Kind
 */
var Field_Kind;
(function (Field_Kind) {
    /**
     * Field type unknown.
     *
     * @generated from protobuf enum value: TYPE_UNKNOWN = 0;
     */
    Field_Kind[Field_Kind["TYPE_UNKNOWN"] = 0] = "TYPE_UNKNOWN";
    /**
     * Field type double.
     *
     * @generated from protobuf enum value: TYPE_DOUBLE = 1;
     */
    Field_Kind[Field_Kind["TYPE_DOUBLE"] = 1] = "TYPE_DOUBLE";
    /**
     * Field type float.
     *
     * @generated from protobuf enum value: TYPE_FLOAT = 2;
     */
    Field_Kind[Field_Kind["TYPE_FLOAT"] = 2] = "TYPE_FLOAT";
    /**
     * Field type int64.
     *
     * @generated from protobuf enum value: TYPE_INT64 = 3;
     */
    Field_Kind[Field_Kind["TYPE_INT64"] = 3] = "TYPE_INT64";
    /**
     * Field type uint64.
     *
     * @generated from protobuf enum value: TYPE_UINT64 = 4;
     */
    Field_Kind[Field_Kind["TYPE_UINT64"] = 4] = "TYPE_UINT64";
    /**
     * Field type int32.
     *
     * @generated from protobuf enum value: TYPE_INT32 = 5;
     */
    Field_Kind[Field_Kind["TYPE_INT32"] = 5] = "TYPE_INT32";
    /**
     * Field type fixed64.
     *
     * @generated from protobuf enum value: TYPE_FIXED64 = 6;
     */
    Field_Kind[Field_Kind["TYPE_FIXED64"] = 6] = "TYPE_FIXED64";
    /**
     * Field type fixed32.
     *
     * @generated from protobuf enum value: TYPE_FIXED32 = 7;
     */
    Field_Kind[Field_Kind["TYPE_FIXED32"] = 7] = "TYPE_FIXED32";
    /**
     * Field type bool.
     *
     * @generated from protobuf enum value: TYPE_BOOL = 8;
     */
    Field_Kind[Field_Kind["TYPE_BOOL"] = 8] = "TYPE_BOOL";
    /**
     * Field type string.
     *
     * @generated from protobuf enum value: TYPE_STRING = 9;
     */
    Field_Kind[Field_Kind["TYPE_STRING"] = 9] = "TYPE_STRING";
    /**
     * Field type group. Proto2 syntax only, and deprecated.
     *
     * @generated from protobuf enum value: TYPE_GROUP = 10;
     */
    Field_Kind[Field_Kind["TYPE_GROUP"] = 10] = "TYPE_GROUP";
    /**
     * Field type message.
     *
     * @generated from protobuf enum value: TYPE_MESSAGE = 11;
     */
    Field_Kind[Field_Kind["TYPE_MESSAGE"] = 11] = "TYPE_MESSAGE";
    /**
     * Field type bytes.
     *
     * @generated from protobuf enum value: TYPE_BYTES = 12;
     */
    Field_Kind[Field_Kind["TYPE_BYTES"] = 12] = "TYPE_BYTES";
    /**
     * Field type uint32.
     *
     * @generated from protobuf enum value: TYPE_UINT32 = 13;
     */
    Field_Kind[Field_Kind["TYPE_UINT32"] = 13] = "TYPE_UINT32";
    /**
     * Field type enum.
     *
     * @generated from protobuf enum value: TYPE_ENUM = 14;
     */
    Field_Kind[Field_Kind["TYPE_ENUM"] = 14] = "TYPE_ENUM";
    /**
     * Field type sfixed32.
     *
     * @generated from protobuf enum value: TYPE_SFIXED32 = 15;
     */
    Field_Kind[Field_Kind["TYPE_SFIXED32"] = 15] = "TYPE_SFIXED32";
    /**
     * Field type sfixed64.
     *
     * @generated from protobuf enum value: TYPE_SFIXED64 = 16;
     */
    Field_Kind[Field_Kind["TYPE_SFIXED64"] = 16] = "TYPE_SFIXED64";
    /**
     * Field type sint32.
     *
     * @generated from protobuf enum value: TYPE_SINT32 = 17;
     */
    Field_Kind[Field_Kind["TYPE_SINT32"] = 17] = "TYPE_SINT32";
    /**
     * Field type sint64.
     *
     * @generated from protobuf enum value: TYPE_SINT64 = 18;
     */
    Field_Kind[Field_Kind["TYPE_SINT64"] = 18] = "TYPE_SINT64";
})(Field_Kind = exports.Field_Kind || (exports.Field_Kind = {}));
/**
 * Whether a field is optional, required, or repeated.
 *
 * @generated from protobuf enum google.protobuf.Field.Cardinality
 */
var Field_Cardinality;
(function (Field_Cardinality) {
    /**
     * For fields with unknown cardinality.
     *
     * @generated from protobuf enum value: CARDINALITY_UNKNOWN = 0;
     */
    Field_Cardinality[Field_Cardinality["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * For optional fields.
     *
     * @generated from protobuf enum value: CARDINALITY_OPTIONAL = 1;
     */
    Field_Cardinality[Field_Cardinality["OPTIONAL"] = 1] = "OPTIONAL";
    /**
     * For required fields. Proto2 syntax only.
     *
     * @generated from protobuf enum value: CARDINALITY_REQUIRED = 2;
     */
    Field_Cardinality[Field_Cardinality["REQUIRED"] = 2] = "REQUIRED";
    /**
     * For repeated fields.
     *
     * @generated from protobuf enum value: CARDINALITY_REPEATED = 3;
     */
    Field_Cardinality[Field_Cardinality["REPEATED"] = 3] = "REPEATED";
})(Field_Cardinality = exports.Field_Cardinality || (exports.Field_Cardinality = {}));
/**
 * The syntax in which a protocol buffer element is defined.
 *
 * @generated from protobuf enum google.protobuf.Syntax
 */
var Syntax;
(function (Syntax) {
    /**
     * Syntax `proto2`.
     *
     * @generated from protobuf enum value: SYNTAX_PROTO2 = 0;
     */
    Syntax[Syntax["PROTO2"] = 0] = "PROTO2";
    /**
     * Syntax `proto3`.
     *
     * @generated from protobuf enum value: SYNTAX_PROTO3 = 1;
     */
    Syntax[Syntax["PROTO3"] = 1] = "PROTO3";
})(Syntax = exports.Syntax || (exports.Syntax = {}));
// @generated message type with reflection information, may provide speed optimized methods
class Type$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.Type", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "fields", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Field },
            { no: 3, name: "oneofs", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "options", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Option },
            { no: 5, name: "source_context", kind: "message", T: () => source_context_1.SourceContext },
            { no: 6, name: "syntax", kind: "enum", T: () => ["google.protobuf.Syntax", Syntax, "SYNTAX_"] }
        ]);
    }
    create(value) {
        const message = { name: "", fields: [], oneofs: [], options: [], syntax: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated google.protobuf.Field fields */ 2:
                    message.fields.push(exports.Field.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated string oneofs */ 3:
                    message.oneofs.push(reader.string());
                    break;
                case /* repeated google.protobuf.Option options */ 4:
                    message.options.push(exports.Option.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.protobuf.SourceContext source_context */ 5:
                    message.sourceContext = source_context_1.SourceContext.internalBinaryRead(reader, reader.uint32(), options, message.sourceContext);
                    break;
                case /* google.protobuf.Syntax syntax */ 6:
                    message.syntax = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* repeated google.protobuf.Field fields = 2; */
        for (let i = 0; i < message.fields.length; i++)
            exports.Field.internalBinaryWrite(message.fields[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated string oneofs = 3; */
        for (let i = 0; i < message.oneofs.length; i++)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.oneofs[i]);
        /* repeated google.protobuf.Option options = 4; */
        for (let i = 0; i < message.options.length; i++)
            exports.Option.internalBinaryWrite(message.options[i], writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.SourceContext source_context = 5; */
        if (message.sourceContext)
            source_context_1.SourceContext.internalBinaryWrite(message.sourceContext, writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Syntax syntax = 6; */
        if (message.syntax !== 0)
            writer.tag(6, runtime_1.WireType.Varint).int32(message.syntax);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.Type
 */
exports.Type = new Type$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Field$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.Field", [
            { no: 1, name: "kind", kind: "enum", T: () => ["google.protobuf.Field.Kind", Field_Kind] },
            { no: 2, name: "cardinality", kind: "enum", T: () => ["google.protobuf.Field.Cardinality", Field_Cardinality, "CARDINALITY_"] },
            { no: 3, name: "number", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "type_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "oneof_index", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "packed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "options", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Option },
            { no: 10, name: "json_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "default_value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { kind: 0, cardinality: 0, number: 0, name: "", typeUrl: "", oneofIndex: 0, packed: false, options: [], jsonName: "", defaultValue: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Field.Kind kind */ 1:
                    message.kind = reader.int32();
                    break;
                case /* google.protobuf.Field.Cardinality cardinality */ 2:
                    message.cardinality = reader.int32();
                    break;
                case /* int32 number */ 3:
                    message.number = reader.int32();
                    break;
                case /* string name */ 4:
                    message.name = reader.string();
                    break;
                case /* string type_url */ 6:
                    message.typeUrl = reader.string();
                    break;
                case /* int32 oneof_index */ 7:
                    message.oneofIndex = reader.int32();
                    break;
                case /* bool packed */ 8:
                    message.packed = reader.bool();
                    break;
                case /* repeated google.protobuf.Option options */ 9:
                    message.options.push(exports.Option.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string json_name */ 10:
                    message.jsonName = reader.string();
                    break;
                case /* string default_value */ 11:
                    message.defaultValue = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.protobuf.Field.Kind kind = 1; */
        if (message.kind !== 0)
            writer.tag(1, runtime_1.WireType.Varint).int32(message.kind);
        /* google.protobuf.Field.Cardinality cardinality = 2; */
        if (message.cardinality !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.cardinality);
        /* int32 number = 3; */
        if (message.number !== 0)
            writer.tag(3, runtime_1.WireType.Varint).int32(message.number);
        /* string name = 4; */
        if (message.name !== "")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.name);
        /* string type_url = 6; */
        if (message.typeUrl !== "")
            writer.tag(6, runtime_1.WireType.LengthDelimited).string(message.typeUrl);
        /* int32 oneof_index = 7; */
        if (message.oneofIndex !== 0)
            writer.tag(7, runtime_1.WireType.Varint).int32(message.oneofIndex);
        /* bool packed = 8; */
        if (message.packed !== false)
            writer.tag(8, runtime_1.WireType.Varint).bool(message.packed);
        /* repeated google.protobuf.Option options = 9; */
        for (let i = 0; i < message.options.length; i++)
            exports.Option.internalBinaryWrite(message.options[i], writer.tag(9, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* string json_name = 10; */
        if (message.jsonName !== "")
            writer.tag(10, runtime_1.WireType.LengthDelimited).string(message.jsonName);
        /* string default_value = 11; */
        if (message.defaultValue !== "")
            writer.tag(11, runtime_1.WireType.LengthDelimited).string(message.defaultValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.Field
 */
exports.Field = new Field$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Enum$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.Enum", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "enumvalue", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.EnumValue },
            { no: 3, name: "options", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Option },
            { no: 4, name: "source_context", kind: "message", T: () => source_context_1.SourceContext },
            { no: 5, name: "syntax", kind: "enum", T: () => ["google.protobuf.Syntax", Syntax, "SYNTAX_"] }
        ]);
    }
    create(value) {
        const message = { name: "", enumvalue: [], options: [], syntax: 0 };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated google.protobuf.EnumValue enumvalue */ 2:
                    message.enumvalue.push(exports.EnumValue.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.protobuf.Option options */ 3:
                    message.options.push(exports.Option.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.protobuf.SourceContext source_context */ 4:
                    message.sourceContext = source_context_1.SourceContext.internalBinaryRead(reader, reader.uint32(), options, message.sourceContext);
                    break;
                case /* google.protobuf.Syntax syntax */ 5:
                    message.syntax = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* repeated google.protobuf.EnumValue enumvalue = 2; */
        for (let i = 0; i < message.enumvalue.length; i++)
            exports.EnumValue.internalBinaryWrite(message.enumvalue[i], writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* repeated google.protobuf.Option options = 3; */
        for (let i = 0; i < message.options.length; i++)
            exports.Option.internalBinaryWrite(message.options[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.SourceContext source_context = 4; */
        if (message.sourceContext)
            source_context_1.SourceContext.internalBinaryWrite(message.sourceContext, writer.tag(4, runtime_1.WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Syntax syntax = 5; */
        if (message.syntax !== 0)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.syntax);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.Enum
 */
exports.Enum = new Enum$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnumValue$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.EnumValue", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "number", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "options", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => exports.Option }
        ]);
    }
    create(value) {
        const message = { name: "", number: 0, options: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* int32 number */ 2:
                    message.number = reader.int32();
                    break;
                case /* repeated google.protobuf.Option options */ 3:
                    message.options.push(exports.Option.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* int32 number = 2; */
        if (message.number !== 0)
            writer.tag(2, runtime_1.WireType.Varint).int32(message.number);
        /* repeated google.protobuf.Option options = 3; */
        for (let i = 0; i < message.options.length; i++)
            exports.Option.internalBinaryWrite(message.options[i], writer.tag(3, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.EnumValue
 */
exports.EnumValue = new EnumValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Option$Type extends runtime_5.MessageType {
    constructor() {
        super("google.protobuf.Option", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "value", kind: "message", T: () => any_1.Any }
        ]);
    }
    create(value) {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.protobuf.Any value */ 2:
                    message.value = any_1.Any.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.name);
        /* google.protobuf.Any value = 2; */
        if (message.value)
            any_1.Any.internalBinaryWrite(message.value, writer.tag(2, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.protobuf.Option
 */
exports.Option = new Option$Type();
//# sourceMappingURL=type.js.map